
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Bogus;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.ERPDb;


namespace DigitBridge.CommerceCentral.ERPApi.OpenApiModel
{
    /// <summary>
    /// Request and Response payload object for Add API
    /// </summary>
    [Serializable()]
    public class InitNumberPayloadAdd
    {
        /// <summary>
        /// (Request Data) ApInvoice object to add.
        /// (Response Data) ApInvoice object which has been added.
        /// </summary>
        [OpenApiPropertyDescription("(Request and Response) InitNumber object to add.")]
        public InitNumbersDataDto InitNumber { get; set; }

        public static InitNumberPayloadAdd GetSampleData()
        {
            var data = new InitNumberPayloadAdd();
            data.InitNumber = new InitNumbersDataDto().GetFakerData();
            return data;
        }
    }


    /// <summary>
    /// Request and Response payload object for Patch API
    /// </summary>
    [Serializable()]
    public class InitNumberPayloadUpdate
    {
        /// <summary>
        /// (Request Data) ApInvoice object to update.
        /// (Response Data) ApInvoice object which has been updated.
        /// </summary>
        [OpenApiPropertyDescription("(Request and Response) InitNumber object to update.")]
        public InitNumbersDataDto InitNumber { get; set; }
    }

    /// <summary>
    /// Response payload object for GET single API
    /// </summary>
    [Serializable()]
    public class InitNumberPayloadGetSingle
    {
        /// <summary>
        /// (Response Data) ApInvoice object.
        /// </summary>
        [OpenApiPropertyDescription("(Response) InitNumber object to get.")]
        public InitNumbersDataDto InitNumber { get; set; }
    }


    /// <summary>
    /// Request and Response payload object for GET multiple API
    /// </summary>
    [Serializable()]
    public class InitNumberPayloadGetMultiple
    {
        /// <summary>
        /// (Request) Array of uuid to get multiple InitNumbers.
        /// </summary>
        [OpenApiPropertyDescription("(Request) Array of uuid to get multiple InitNumbers.")]
        public IList<string> InitNumberUuids { get; set; }

        /// <summary>
        /// (Response) Array of InitNumber which get by uuid array.
        /// </summary>
        [OpenApiPropertyDescription("(Response) Array of ApInvoice which get by uuid array.")]
        public IList<InitNumbersDataDto> InitNumbers { get; set; }
    }


    /// <summary>
    /// Response payload object for DELETE API
    /// </summary>
    [Serializable()]
    public class InitNumberPayloadDelete
    {
    }


    /// <summary>
    /// Request Response payload for FIND API
    /// </summary>
    [Serializable()]
    public class InitNumberPayloadFind : FilterPayloadBase<InitNumberFilter>
    {
        /// <summary>
        /// (Response) List result which load by filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response) List result which load by filter and paging.")]
        public IList<Object> InitNumberList { get; set; }

        /// <summary>
        /// (Response) List result count which load by filter and paging.
        /// </summary>
        public int InitNumberListCount { get; set; }

        public static InitNumberPayloadFind GetSampleData()
        {
            var data = new InitNumberPayloadFind()
            {
                LoadAll = false,
                Skip = 0,
                Top = 20,
                SortBy = "",
                Filter = InitNumberFilter.GetFaker().Generate()
            };
            return data;
        }
    }

    public class InitNumberFilter
    {
        public string CustomerUuid { get; set; }

 

        public string Type { get; set; }



        public static Faker<InitNumberFilter> GetFaker()
        {
            #region faker data rules
            return new Faker<InitNumberFilter>()
                .RuleFor(u => u.CustomerUuid, f => string.Empty)
 
                .RuleFor(u => u.Type, f => string.Empty);
            #endregion faker data rules
        }
    }



}
