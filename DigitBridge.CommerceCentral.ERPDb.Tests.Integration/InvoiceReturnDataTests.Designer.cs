


//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Extensions.Configuration;
using Xunit;
using DigitBridge.CommerceCentral.YoPoco;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.XUnit.Common;
using Bogus;

namespace DigitBridge.CommerceCentral.ERPDb.Tests.Integration
{
    /// <summary>
    /// Represents a Tester for InvoiceTransactionData.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    public partial class InvoiceReturnDataTests : IDisposable, IClassFixture<TestFixture<StartupTest>>
    {
        private static int _itemCount = 10;
        public static int ItemCount { get { return _itemCount; } set { _itemCount = value; } }
        public static InvoiceTransactionData GetFakerData()
        {
            var InvoiceTransactionData = new InvoiceTransactionData();
            InvoiceTransactionData.InvoiceTransaction = InvoiceTransactionTests.GetFakerData().Generate();
            InvoiceTransactionData.InvoiceReturnItems = InvoiceReturnItemsTests.GetFakerData().Generate(ItemCount);
            return InvoiceTransactionData;
        }


        public static List<InvoiceTransactionData> GetFakerData(int count)
        {
            var InvoiceTransactionDatas = new List<InvoiceTransactionData>();
            for (int i = 0; i < count; i++)
                InvoiceTransactionDatas.Add(GetFakerData());
            return InvoiceTransactionDatas;
        }

        protected const string SkipReason = "Debug Helper Function";

        protected TestFixture<StartupTest> Fixture { get; }
        public IConfiguration Configuration { get; }
        public IDataBaseFactory DataBaseFactory { get; set; }

        public InvoiceReturnDataTests(TestFixture<StartupTest> fixture)
        {
            Fixture = fixture;
            Configuration = fixture.Configuration;

            InitForTest();
        }
        protected void InitForTest()
        {
            var Seq = 0;
            DataBaseFactory = new DataBaseFactory(Configuration["dsn"]);
        }
        public void Dispose()
        {
        }
    }
}


