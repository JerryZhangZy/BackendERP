


//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Extensions.Configuration;
using Xunit;
using DigitBridge.CommerceCentral.YoPoco;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.XUnit.Common;
using Bogus;

namespace DigitBridge.CommerceCentral.ERPDb.Tests.Integration
{
    public partial class SalesOrderDataTests
    {
        [Fact()]
        //[Fact(Skip = SkipReason)]
        public void GetByOrderNumber_Test()
        {
            Save_Test();

            var orderNumber = DataBaseFactory.GetValue<SalesOrderHeader, string>(@"
SELECT TOP 1 ins.OrderNumber 
FROM SalesOrderHeader ins 
INNER JOIN (
    SELECT it.SalesOrderUuid, COUNT(1) AS cnt FROM SalesOrderItems it GROUP BY it.SalesOrderUuid
) itm ON (itm.SalesOrderUuid = ins.SalesOrderUuid)
WHERE itm.cnt > 0
");


            var data = new SalesOrderData(DataBaseFactory);
            data.GetByOrderNumber(orderNumber); 
            var result = data.SalesOrderHeader.OrderNumber.Equals(orderNumber);

            Assert.True(result, "This is a generated tester, please report any tester bug to team leader.");
        }
        [Fact()]
        //[Fact(Skip = SkipReason)]
        public async Task GetByOrderNumberAsync_Test()
        {
            await SaveAsync_Test();

            var orderNumber = DataBaseFactory.GetValue<SalesOrderHeader, string>(@"
SELECT TOP 1 ins.OrderNumber 
FROM SalesOrderHeader ins 
INNER JOIN (
    SELECT it.SalesOrderUuid, COUNT(1) AS cnt FROM SalesOrderItems it GROUP BY it.SalesOrderUuid
) itm ON (itm.SalesOrderUuid = ins.SalesOrderUuid)
WHERE itm.cnt > 0
");


            var data = new SalesOrderData(DataBaseFactory);
            await data.GetByOrderNumberAsync(orderNumber);

            var result = data.SalesOrderHeader.OrderNumber.Equals(orderNumber);

            Assert.True(result, "This is a generated tester, please report any tester bug to team leader.");
        }
    }
}



