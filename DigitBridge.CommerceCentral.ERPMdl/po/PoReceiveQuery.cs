              
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using DigitBridge.Base.Common;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.ERPDb;
using DigitBridge.CommerceCentral.YoPoco;
using Helper = DigitBridge.CommerceCentral.ERPDb.PoTransactionHelper;

namespace DigitBridge.CommerceCentral.ERPMdl
{
    

    public class PoReceiveQuery : QueryObject<PoReceiveQuery>
    {
        protected static string PREFIX = ERPDb.PoTransactionHelper.TableAllies;

        // Table prefix which use in this sql query
        protected static string ReturnItemPREFIX = ERPDb.PoTransactionHelper.TableAllies;
        protected static string TranSactionPREFIX = ERPDb.PoTransactionHelper.TableAllies;
        // Filter fields 

        protected QueryFilter<string> _TransUuid = new QueryFilter<string>("TransUuid", "TransUuid", PREFIX, FilterBy.eq, string.Empty, isNVarChar: true);
        public QueryFilter<string> TransUuid => _TransUuid;

      
        protected QueryFilter<long> _TransNum = new QueryFilter<long>("TransNum", "TransNum", PREFIX, FilterBy.eq, 0);
        public QueryFilter<long> TransNum => _TransNum;


        protected QueryFilter<string> _PoUuid = new QueryFilter<string>("PoUuid", "PoUuid", PREFIX, FilterBy.eq, string.Empty, isNVarChar: true);
        public QueryFilter<string> PoUuid => _PoUuid;

        protected QueryFilter<string> _PoNum = new QueryFilter<string>("PoNum", "PoNum", PREFIX, FilterBy.eq, string.Empty, isNVarChar: true);
        public QueryFilter<string> PoNum => _PoNum;


        protected QueryFilter<int> _TransType = new QueryFilter<int>("TransType", "TransType", PREFIX, FilterBy.eq, 0);
        public QueryFilter<int> TransType => _TransType;


        protected QueryFilter<int> _TransStatus = new QueryFilter<int>("TransStatus", "TransStatus", PREFIX, FilterBy.eq, 0);
        public QueryFilter<int> TransStatus => _TransStatus;




        protected QueryFilter<DateTime> _TransDate = new QueryFilter<DateTime>("TransDate", "TransDate", PREFIX, FilterBy.ge, SqlQuery._SqlMinDateTime, isDate: true);
        public QueryFilter<DateTime> TransDate => _TransDate;



        //protected QueryFilter<DateTime> _TransTime = new QueryFilter<DateTime>("TransDateTo", "TransDate", PREFIX, FilterBy.le, SqlQuery._AppMaxDateTime, isDate: true);
        //public QueryFilter<DateTime> TransTime => _TransTime;



        protected QueryFilter<string> _VendorUuid = new QueryFilter<string>("VendorUuid", "VendorUuid", PREFIX, FilterBy.eq, string.Empty, isNVarChar: true);
        public QueryFilter<string> VendorUuid => _VendorUuid;


        protected QueryFilter<string> _VendorInvoiceNum = new QueryFilter<string>("VendorInvoiceNum", "VendorInvoiceNum", PREFIX, FilterBy.eq, string.Empty, isNVarChar: true);
        public QueryFilter<string> VendorInvoiceNum => _VendorInvoiceNum;

 

        protected QueryFilter<DateTime> _VendorInvoiceDate = new QueryFilter<DateTime>("VendorInvoiceDate", "VendorInvoiceDate", PREFIX, FilterBy.ge, SqlQuery._SqlMinDateTime, isDate: true);
        public QueryFilter<DateTime> VendorInvoiceDate => _VendorInvoiceDate;


        protected QueryFilter<DateTime> _DueDate = new QueryFilter<DateTime>("DueDate", "DueDate", PREFIX, FilterBy.ge, SqlQuery._SqlMinDateTime, isDate: true);
        public QueryFilter<DateTime> DueDate => _DueDate;



        protected QueryFilter<string> _Currency = new QueryFilter<string>("Currency", "Currency", PREFIX, FilterBy.eq, string.Empty, isNVarChar: true);
        public QueryFilter<string> Currency => _Currency;





 

        public PoReceiveQuery() : base(TranSactionPREFIX)
        {
            //AddFilter(_TransNum);
            //AddFilter(_InvoiceNumber);
            AddFilter(_TransUuid);
            AddFilter(_TransNum);
            AddFilter(_PoUuid); //
            AddFilter(_PoNum);
            AddFilter(_TransType);
            AddFilter(_TransStatus);

            AddFilter(_TransDate);
            AddFilter(_VendorUuid);
            AddFilter(_VendorInvoiceNum);
            AddFilter(_VendorInvoiceDate);
            AddFilter(_DueDate);
            AddFilter(_Currency);
         
        }
        public override void InitQueryFilter()
        {
            //_TransDate.FilterValue = DateTime.Today.AddDays(-30);
            //_DueDate.FilterValue = DateTime.Today.AddDays(-30);

        }

    }
}
