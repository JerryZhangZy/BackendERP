              
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using DigitBridge.Base.Common;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.ERPDb;
using DigitBridge.CommerceCentral.YoPoco;
using Helper = DigitBridge.CommerceCentral.ERPDb.OrderHeaderHelper;
using ordiHelper = DigitBridge.CommerceCentral.ERPDb.SalesOrderHeaderInfoHelper;
using insiHelper = DigitBridge.CommerceCentral.ERPDb.InvoiceHeaderInfoHelper;

namespace DigitBridge.CommerceCentral.ERPMdl
{
    public class CentralOrderQuery : QueryObject<CentralOrderQuery>
    {
        // Table prefix which use in this sql query
        protected static string PREFIX = Helper.TableAllies;

        // Filter fields
        protected QueryFilter<DateTime> _OriginalOrderDateUtcFrom = new QueryFilter<DateTime>("OriginalOrderDateUtcFrom", "OriginalOrderDateUtc", PREFIX, FilterBy.ge, SqlQuery._SqlMinDateTime);
        public QueryFilter<DateTime> OriginalOrderDateUtcFrom => _OriginalOrderDateUtcFrom;

        protected QueryFilter<DateTime> _OriginalOrderDateUtcTo = new QueryFilter<DateTime>("OriginalOrderDateUtcTo", "OriginalOrderDateUtc", PREFIX, FilterBy.le, SqlQuery._AppMaxDateTime);
        public QueryFilter<DateTime> OriginalOrderDateUtcTo => _OriginalOrderDateUtcTo;

        protected QueryFilter<string> _OrderNumber = new QueryFilter<string>("OrderNumber", "OrderNumber", PREFIX, FilterBy.eq, string.Empty);
        public QueryFilter<string> OrderNumber => _OrderNumber;

        protected QueryFilter<string> _InvoiceNumber = new QueryFilter<string>("InvoiceNumber", "InvoiceNumber", PREFIX, FilterBy.eq, string.Empty);
        public QueryFilter<string> InvoiceNumber => _InvoiceNumber;

        protected QueryFilter<long> _CentralOrderNumFrom = new QueryFilter<long>("CentralOrderNumFrom", "CentralOrderNum", PREFIX, FilterBy.ge, 0);
        public QueryFilter<long> CentralOrderNumFrom => _CentralOrderNumFrom;

        protected QueryFilter<long> _CentralOrderNumTo = new QueryFilter<long>("CentralOrderNumTo", "CentralOrderNum", PREFIX, FilterBy.le, 0);
        public QueryFilter<long> CentralOrderNumTo => _CentralOrderNumTo;

        protected QueryFilter<long> _ChannelNum = new QueryFilter<long>("ChannelNum", "ChannelNum", PREFIX, FilterBy.eq, 0);
        public QueryFilter<long> ChannelNum => _ChannelNum;

        protected QueryFilter<long> _ChannelAccountNum = new QueryFilter<long>("ChannelAccountNum", "ChannelAccountNum", PREFIX, FilterBy.eq, 0);
        public QueryFilter<long> ChannelAccountNum => _ChannelAccountNum;

        protected QueryFilter<string> _ChannelOrderID = new QueryFilter<string>("ChannelOrderID", "ChannelOrderID", PREFIX, FilterBy.bw, string.Empty);
        public QueryFilter<string> ChannelOrderID => _ChannelOrderID;

        protected QueryFilterRawSql _WithOutSalesOrder = new QueryFilterRawSql($"{ordiHelper.TableAllies}.CentralOrderNum IS NULL", PREFIX) { Name = "WithOutSalesOrder" };
        public QueryFilterRawSql WithOutSalesOrder => _WithOutSalesOrder;

        protected QueryFilterRawSql _WithOutInvoice = new QueryFilterRawSql($"{insiHelper.TableAllies}.CentralOrderNum IS NULL", PREFIX) { Name = "WithOutInvoice" };
        public QueryFilterRawSql WithOutInvoice => _WithOutInvoice;

        //protected EnumQueryFilter<SalesOrderStatus> _OrderStatus = new EnumQueryFilter<SalesOrderStatus>("OrderStatus", "OrderStatus", PREFIX, FilterBy.eq, -1);
        //public EnumQueryFilter<SalesOrderStatus> OrderStatus => _OrderStatus;

        //protected EnumQueryFilter<SalesOrderType> _OrderType = new EnumQueryFilter<SalesOrderType>("OrderType", "OrderType", PREFIX, FilterBy.eq, -1);
        //public EnumQueryFilter<SalesOrderType> OrderType => _OrderType;

        public CentralOrderQuery() : base(PREFIX)
        {
            AddFilter(_OriginalOrderDateUtcFrom);
            AddFilter(_OriginalOrderDateUtcTo);
            AddFilter(_OrderNumber);
            AddFilter(_InvoiceNumber);
            AddFilter(_CentralOrderNumFrom);
            AddFilter(_CentralOrderNumTo);
            AddFilter(_ChannelNum);
            AddFilter(_ChannelAccountNum);
            AddFilter(_ChannelOrderID);
            AddFilter(_WithOutSalesOrder);
            AddFilter(_WithOutInvoice);
        }

        public override void InitQueryFilter()
        {
            _OriginalOrderDateUtcFrom.FilterValue = DateTime.UtcNow.Date.AddDays(-30);
            _OriginalOrderDateUtcTo.FilterValue = DateTime.UtcNow.Date.AddDays(7);
        }
    }
}
