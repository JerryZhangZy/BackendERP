


//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Data;
using Microsoft.Data.SqlClient;

using Newtonsoft.Json;

using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;
using DigitBridge.CommerceCentral.ERPDb;
using System.Text;

namespace DigitBridge.CommerceCentral.ERPMdl
{
    /// <summary>
    /// Represents a InvoicePaymentHelper SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class ExportHelper
    {
        public static dynamic GetExportSelect(int userConfigID)
        {
            var sql = $@"
select configDetail.ColumnName,userconfig.DisplayName,configDetail.RecordType,configDetail.OutputStructName
from [dbo].[ExportUserConfig] userconfig
join [dbo].[ExportConfigDetail] configDetail on configDetail.RowNum=userconfig.ExportConfigDetailRowNum
where userconfig.[UserConfigID]=@userConfigID
order by userconfig.[DisplayOrder]
";
            //StringBuilder sb = new StringBuilder();
            //SqlQuery.QueryJson(sb, sql, System.Data.CommandType.Text, userConfigID.ToSqlParameter("userConfigID"));

            return SqlQuery.Execute(sql,
                 (string columnName, string displayName, string recordType, string outputStructName) => new { ColumnName = columnName, DisplayName = displayName, RecordType = recordType, OutputStructName = outputStructName }
                 , userConfigID.ToSqlParameter("userConfigID"));
        }

        /// <summary>
        /// Combined select columns.
        /// </summary>
        /// <param name="datas"></param>
        /// <param name="recordType"></param>
        /// <param name="tableAllies"></param>
        /// <returns></returns>
        public static string GetSelectColumnsByConfig(dynamic datas, string recordType, string tableAllies)
        {
            var listCols = new List<string>();
            foreach (var data in datas)
            {
                if (data.RecordType == recordType)
                    listCols.Add($"{tableAllies}.{data.ColumnName} as '{data.OutputStructName}.{data.DisplayName}' ");
                //Use following to set default.
                //,ISNULL(nullif(columnname,''),'defaulvalue')
            }
            return string.Join(',', listCols);
        }
    }
}



