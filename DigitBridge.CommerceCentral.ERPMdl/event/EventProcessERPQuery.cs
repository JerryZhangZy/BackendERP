              
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using DigitBridge.Base.Common;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.ERPDb;
using DigitBridge.CommerceCentral.YoPoco;
using Helper = DigitBridge.CommerceCentral.ERPDb.EventProcessERPHelper;

namespace DigitBridge.CommerceCentral.ERPMdl
{
    public class EventProcessERPQuery : QueryObject<EventProcessERPQuery>
    {
        // Table prefix which use in this sql query
        protected static string PREFIX = Helper.TableAllies;

        // Filter fields
        protected QueryFilter<DateTime> _ActionDateFrom = new QueryFilter<DateTime>("ActionDateFrom", "ActionDate", PREFIX, FilterBy.ge, SqlQuery._SqlMinDateTime, isDate: true);
        public QueryFilter<DateTime> ActionDateFrom => _ActionDateFrom;

        protected QueryFilter<DateTime> _ActionDateTo = new QueryFilter<DateTime>("ActionDateTo", "ActionDate", PREFIX, FilterBy.le, SqlQuery._AppMaxDateTime, isDate: true);
        public QueryFilter<DateTime> ActionDateTo => _ActionDateTo;

        protected QueryFilter<int> _ActionStatus = new QueryFilter<int>("ActionStatus", "ActionStatus", PREFIX, FilterBy.eq, -1);
        public QueryFilter<int> ActionStatus => _ActionStatus;

        protected EnumQueryFilter<ErpEventType> _ERPEventProcessType = new EnumQueryFilter<ErpEventType>("ERPEventProcessType", "ERPEventProcessType", PREFIX, FilterBy.eq, -0);
        public EnumQueryFilter<ErpEventType> ERPEventProcessType => _ERPEventProcessType;

        public EventProcessERPQuery() : base(PREFIX)
        {
            AddFilter(_ActionDateFrom);
            AddFilter(_ActionDateTo);
            AddFilter(_ActionStatus);
            AddFilter(_ERPEventProcessType);
        }

        public override void InitQueryFilter()
        {
            _ActionDateFrom.FilterValue = DateTime.UtcNow.Date.AddDays(-30);
            _ActionDateTo.FilterValue = DateTime.UtcNow.Date;
        }
    }
}
