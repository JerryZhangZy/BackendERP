<# 
    indent = 1;
    WriteLine($"export const {structureName}Model = types");
    WriteLine($"{new String('\t',indent)}.model('{structureName}', {{");

    foreach(var item in StructureClass.StructureTables)
    { 
        var child = item.Value;
        if (child == null) continue;
        if (child.Table.IsChildrenOfChildren) continue;

        // generate one child object
        if (child.OneToOne)
        {
            WriteLine($"{new String('\t',indent+1)}{child.Table.JsPropertyName}: types.maybe({child.Table.Name}),");
        } 
        // generate child list
        else
        {
            WriteLine($"{new String('\t',indent+1)}{child.Table.JsPropertyName}: types.array({child.Table.Name}),");
        } 
    }

    WriteLine($"{new String('\t',indent)}}})");
    WriteLine($"{new String('\t',indent)}.actions((self) => {{");
    WriteLine($"{new String('\t',indent+1)}return createModelActions(self);");
    WriteLine($"{new String('\t',indent)}}});");
#>


