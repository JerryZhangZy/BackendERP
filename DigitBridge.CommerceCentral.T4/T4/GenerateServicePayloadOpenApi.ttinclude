<#
#>    
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.ERPDb;

namespace DigitBridge.CommerceCentral.ERPApi
{
    /// <summary>
    /// Request and Response payload object for Add API
    /// </summary>
    [Serializable()]
    public class <#= PayloadName #>Add
    {
        /// <summary>
        /// (Request Data) <#= processName #> object to add.
        /// (Response Data) <#= processName #> object which has been added.
        /// </summary>
        [OpenApiPropertyDescription("(Request and Response) <#= processName #> object to add.")]
        public <#= StructureDtoName #> <#= processName #> { get; set; }
    }


    /// <summary>
    /// Request and Response payload object for Patch API
    /// </summary>
    [Serializable()]
    public class <#= PayloadName #>Update
    {
        /// <summary>
        /// (Request Data) <#= processName #> object to update.
        /// (Response Data) <#= processName #> object which has been updated.
        /// </summary>
        [OpenApiPropertyDescription("(Request and Response) <#= processName #> object to update.")]
        public <#= StructureDtoName #> <#= processName #> { get; set; }
    }



    /// <summary>
    /// Response payload object for GET single API
    /// </summary>
    [Serializable()]
    public class <#= PayloadName #>GetSingle
    {
        /// <summary>
        /// (Response Data) <#= processName #> object.
        /// </summary>
        [OpenApiPropertyDescription("(Response) <#= processName #> object to get.")]
        public <#= StructureDtoName #> <#= processName #> { get; set; }
    }


    /// <summary>
    /// Request and Response payload object for GET multiple API
    /// </summary>
    [Serializable()]
    public class <#= PayloadName #>GetMultiple
    {
        /// <summary>
        /// (Request) Array of uuid to get multiple <#= processName #>s.
        /// </summary>
        [OpenApiPropertyDescription("(Request) Array of uuid to get multiple <#= processName #>s.")]
        public IList<string> <#= StructureClass.MainTable.UniqueKey #>s { get; set; }

        /// <summary>
        /// (Response) Array of <#= processName #> which get by uuid array.
        /// </summary>
        [OpenApiPropertyDescription("(Response) Array of <#= processName #> which get by uuid array.")]
        public IList<<#= StructureDtoName #>> <#= processName #>s { get; set; }
    }


    /// <summary>
    /// Response payload object for DELETE API
    /// </summary>
    [Serializable()]
    public class <#= PayloadName #>Delete
    {
    }


    /// <summary>
    /// Request Response payload for FIND API
    /// </summary>
    [Serializable()]
    public class <#= PayloadName #>Find : PayloadBase
    {
        /// <summary>
        /// (Response) List result which load by filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response) List result which load by filter and paging.")]
        public IList<Object> <#= processName #>List { get; set; }

        /// <summary>
        /// (Response) List result count which load by filter and paging.
        /// </summary>
        public int <#= processName #>ListCount { get; set; }

    }

}
