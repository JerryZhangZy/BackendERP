              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a SalesOrderHeaderInfo Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class SalesOrderHeaderInfoDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// Order uuid. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("Order uuid. <br> Display: false, Editable: false.")]
        [StringLength(50, ErrorMessage = "The SalesOrderUuid value cannot exceed 50 characters. ")]
        public string SalesOrderUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSalesOrderUuid => SalesOrderUuid != null;

		/// <summary>
		/// (Ignore) Reference to CentralFulfillmentNum. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Ignore) Reference to CentralFulfillmentNum. <br> Display: false, Editable: false")]
        public long? CentralFulfillmentNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralFulfillmentNum => CentralFulfillmentNum != null;

		/// <summary>
		/// Shipping Carrier. <br> Title: Shipping Carrier: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Shipping Carrier. <br> Title: Shipping Carrier: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ShippingCarrier value cannot exceed 50 characters. ")]
        public string ShippingCarrier { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingCarrier => ShippingCarrier != null;

		/// <summary>
		/// Shipping Method. <br> Title: Shipping Method: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Shipping Method. <br> Title: Shipping Method: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ShippingClass value cannot exceed 50 characters. ")]
        public string ShippingClass { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingClass => ShippingClass != null;

		/// <summary>
		/// (Readonly) Original DC number. <br> Title: DC number: Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Original DC number. <br> Title: DC number: Display: false, Editable: false")]
        public int? DistributionCenterNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterNum => DistributionCenterNum != null;

		/// <summary>
		/// (Readonly) CentralOrderNum. <br> Title: Central Order: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) CentralOrderNum. <br> Title: Central Order: Display: true, Editable: false")]
        public long? CentralOrderNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderNum => CentralOrderNum != null;

		/// <summary>
		/// (Readonly) CentralOrderUuid. <br> Title: Central Order: Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) CentralOrderUuid. <br> Title: Central Order: Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The CentralOrderUuid value cannot exceed 50 characters. ")]
        public string CentralOrderUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderUuid => CentralOrderUuid != null;

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false")]
        public int? ChannelNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelNum => ChannelNum != null;

		/// <summary>
		/// (Readonly) The unique number of this profile’s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) The unique number of this profile’s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false")]
        public int? ChannelAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelAccountNum => ChannelAccountNum != null;

		/// <summary>
		/// (Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false")]
        [StringLength(130, ErrorMessage = "The ChannelOrderID value cannot exceed 130 characters. ")]
        public string ChannelOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelOrderID => ChannelOrderID != null;

		/// <summary>
		/// (Readonly) Secondary identifier provided by the channel. This is a secondary marketplace-generated Order ID. It is not populated most of the time. <br> Title: Other Channel Order: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Secondary identifier provided by the channel. This is a secondary marketplace-generated Order ID. It is not populated most of the time. <br> Title: Other Channel Order: Display: true, Editable: false")]
        [StringLength(200, ErrorMessage = "The SecondaryChannelOrderID value cannot exceed 200 characters. ")]
        public string SecondaryChannelOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSecondaryChannelOrderID => SecondaryChannelOrderID != null;

		/// <summary>
		/// (Readonly) requested Vendor use Account to ship. <br> Title: Shipping Account: Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) requested Vendor use Account to ship. <br> Title: Shipping Account: Display: false, Editable: false")]
        [StringLength(100, ErrorMessage = "The ShippingAccount value cannot exceed 100 characters. ")]
        public string ShippingAccount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingAccount => ShippingAccount != null;

		/// <summary>
		/// (Readonly) Warehouse uuid. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Warehouse uuid. <br> Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The WarehouseUuid value cannot exceed 50 characters. ")]
        public string WarehouseUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasWarehouseUuid => WarehouseUuid != null;

		/// <summary>
		/// Readable warehouse code. <br> Title: Warehouse Code: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Readable warehouse code. <br> Title: Warehouse Code: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The WarehouseCode value cannot exceed 50 characters. ")]
        public string WarehouseCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasWarehouseCode => WarehouseCode != null;

		/// <summary>
		/// Reference Number. <br> Title: Reference Number: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Reference Number. <br> Title: Reference Number: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The RefNum value cannot exceed 100 characters. ")]
        public string RefNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasRefNum => RefNum != null;

		/// <summary>
		/// Customer P/O Number. <br> Title: Customer PO: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Customer P/O Number. <br> Title: Customer PO: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The CustomerPoNum value cannot exceed 100 characters. ")]
        public string CustomerPoNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerPoNum => CustomerPoNum != null;
        
		/// <summary>
		/// (Ignore) The marketplace user ID of the customer. Don’t use “Buyer” alone to avoid confusion with retailer buyer from the purchase department. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Ignore) The marketplace user ID of the customer. Don’t use “Buyer” alone to avoid confusion with retailer buyer from the purchase department. <br> Display: false, Editable: false")]
        [StringLength(255, ErrorMessage = "The EndBuyerUserID value cannot exceed 255 characters. ")]
        public string EndBuyerUserID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEndBuyerUserID => EndBuyerUserID != null;

		/// <summary>
		/// The marketplace name of the customer. Don’t use “Buyer” alone to avoid confusion with retailer buyer from the purchase department. <br> Title: Buyer Name : Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("The marketplace name of the customer. Don’t use “Buyer” alone to avoid confusion with retailer buyer from the purchase department. <br> Title: Buyer Name : Display: true, Editable: false")]
        [StringLength(255, ErrorMessage = "The EndBuyerName value cannot exceed 255 characters. ")]
        public string EndBuyerName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEndBuyerName => EndBuyerName != null;

		/// <summary>
		/// The email of the end customer. <br> Title: Buyer Email: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("The email of the end customer. <br> Title: Buyer Email: Display: true, Editable: false")]
        [StringLength(255, ErrorMessage = "The EndBuyerEmail value cannot exceed 255 characters. ")]
        public string EndBuyerEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEndBuyerEmail => EndBuyerEmail != null;

		/// <summary>
		/// Ship to name <br> Title: Ship to name: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to name <br> Title: Ship to name: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToName value cannot exceed 100 characters. ")]
        public string ShipToName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToName => ShipToName != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The ShipToFirstName value cannot exceed 50 characters. ")]
        public string ShipToFirstName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToFirstName => ShipToFirstName != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The ShipToLastName value cannot exceed 50 characters. ")]
        public string ShipToLastName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToLastName => ShipToLastName != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The ShipToSuffix value cannot exceed 50 characters. ")]
        public string ShipToSuffix { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToSuffix => ShipToSuffix != null;

		/// <summary>
		/// Ship to company name. <br> Title: Ship to company: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to company name. <br> Title: Ship to company: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToCompany value cannot exceed 100 characters. ")]
        public string ShipToCompany { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToCompany => ShipToCompany != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(100, ErrorMessage = "The ShipToCompanyJobTitle value cannot exceed 100 characters. ")]
        public string ShipToCompanyJobTitle { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToCompanyJobTitle => ShipToCompanyJobTitle != null;

		/// <summary>
		/// Ship to contact <br> Title: Ship to contact: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to contact <br> Title: Ship to contact: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToAttention value cannot exceed 100 characters. ")]
        public string ShipToAttention { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToAttention => ShipToAttention != null;

		/// <summary>
		/// Ship to address 1 <br> Title: Ship to address 1: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to address 1 <br> Title: Ship to address 1: Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The ShipToAddressLine1 value cannot exceed 200 characters. ")]
        public string ShipToAddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToAddressLine1 => ShipToAddressLine1 != null;

		/// <summary>
		/// Ship to address 2 <br> Title: Ship to address 2: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to address 2 <br> Title: Ship to address 2: Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The ShipToAddressLine2 value cannot exceed 200 characters. ")]
        public string ShipToAddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToAddressLine2 => ShipToAddressLine2 != null;

		/// <summary>
		/// Ship to address 3 <br> Title: Ship to address 3: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to address 3 <br> Title: Ship to address 3: Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The ShipToAddressLine3 value cannot exceed 200 characters. ")]
        public string ShipToAddressLine3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToAddressLine3 => ShipToAddressLine3 != null;

		/// <summary>
		/// Ship to city <br> Title: Ship to city: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to city <br> Title: Ship to city: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToCity value cannot exceed 100 characters. ")]
        public string ShipToCity { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToCity => ShipToCity != null;

		/// <summary>
		/// Ship to state <br> Title: Ship to state: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to state <br> Title: Ship to state: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ShipToState value cannot exceed 50 characters. ")]
        public string ShipToState { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToState => ShipToState != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(100, ErrorMessage = "The ShipToStateFullName value cannot exceed 100 characters. ")]
        public string ShipToStateFullName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToStateFullName => ShipToStateFullName != null;

		/// <summary>
		/// Ship to zip code <br> Title: Ship to zip Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to zip code <br> Title: Ship to zip Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ShipToPostalCode value cannot exceed 50 characters. ")]
        public string ShipToPostalCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToPostalCode => ShipToPostalCode != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The ShipToPostalCodeExt value cannot exceed 50 characters. ")]
        public string ShipToPostalCodeExt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToPostalCodeExt => ShipToPostalCodeExt != null;

		/// <summary>
		/// Ship to county <br> Title: Ship to county: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to county <br> Title: Ship to county: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToCounty value cannot exceed 100 characters. ")]
        public string ShipToCounty { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToCounty => ShipToCounty != null;

		/// <summary>
		/// Ship to country <br> Title: Ship to country: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to country <br> Title: Ship to country: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToCountry value cannot exceed 100 characters. ")]
        public string ShipToCountry { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToCountry => ShipToCountry != null;

		/// <summary>
		/// Ship to email <br> Title: Ship to email: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to email <br> Title: Ship to email: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ShipToEmail value cannot exceed 100 characters. ")]
        public string ShipToEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToEmail => ShipToEmail != null;

		/// <summary>
		/// Ship to phone <br> Title: Ship to phone: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Ship to phone <br> Title: Ship to phone: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ShipToDaytimePhone value cannot exceed 50 characters. ")]
        public string ShipToDaytimePhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToDaytimePhone => ShipToDaytimePhone != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The ShipToNightPhone value cannot exceed 50 characters. ")]
        public string ShipToNightPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToNightPhone => ShipToNightPhone != null;

		/// <summary>
		/// Bill to name <br> Title: Bill to name: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to name <br> Title: Bill to name: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The BillToName value cannot exceed 100 characters. ")]
        public string BillToName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToName => BillToName != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The BillToFirstName value cannot exceed 50 characters. ")]
        public string BillToFirstName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToFirstName => BillToFirstName != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The BillToLastName value cannot exceed 50 characters. ")]
        public string BillToLastName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToLastName => BillToLastName != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The BillToSuffix value cannot exceed 50 characters. ")]
        public string BillToSuffix { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToSuffix => BillToSuffix != null;

		/// <summary>
		/// Bill to company name. <br> Title: Bill to company: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to company name. <br> Title: Bill to company: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The BillToCompany value cannot exceed 100 characters. ")]
        public string BillToCompany { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCompany => BillToCompany != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(100, ErrorMessage = "The BillToCompanyJobTitle value cannot exceed 100 characters. ")]
        public string BillToCompanyJobTitle { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCompanyJobTitle => BillToCompanyJobTitle != null;

		/// <summary>
		/// Bill to contact <br> Title: Bill to contact: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to contact <br> Title: Bill to contact: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The BillToAttention value cannot exceed 100 characters. ")]
        public string BillToAttention { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAttention => BillToAttention != null;

		/// <summary>
		/// Bill to address 1 <br> Title: Bill to address 1: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to address 1 <br> Title: Bill to address 1: Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The BillToAddressLine1 value cannot exceed 200 characters. ")]
        public string BillToAddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAddressLine1 => BillToAddressLine1 != null;

		/// <summary>
		/// Bill to address 2 <br> Title: Bill to address 2: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to address 2 <br> Title: Bill to address 2: Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The BillToAddressLine2 value cannot exceed 200 characters. ")]
        public string BillToAddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAddressLine2 => BillToAddressLine2 != null;

		/// <summary>
		/// Bill to address 3 <br> Title: Bill to address 3: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to address 3 <br> Title: Bill to address 3: Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The BillToAddressLine3 value cannot exceed 200 characters. ")]
        public string BillToAddressLine3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAddressLine3 => BillToAddressLine3 != null;

		/// <summary>
		/// Bill to city <br> Title: Bill to city: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to city <br> Title: Bill to city: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The BillToCity value cannot exceed 100 characters. ")]
        public string BillToCity { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCity => BillToCity != null;

		/// <summary>
		/// Bill to state <br> Title: Bill to state: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to state <br> Title: Bill to state: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The BillToState value cannot exceed 50 characters. ")]
        public string BillToState { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToState => BillToState != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(100, ErrorMessage = "The BillToStateFullName value cannot exceed 100 characters. ")]
        public string BillToStateFullName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToStateFullName => BillToStateFullName != null;

		/// <summary>
		/// Bill to zip code <br> Title: Bill to zip Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to zip code <br> Title: Bill to zip Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The BillToPostalCode value cannot exceed 50 characters. ")]
        public string BillToPostalCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToPostalCode => BillToPostalCode != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The BillToPostalCodeExt value cannot exceed 50 characters. ")]
        public string BillToPostalCodeExt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToPostalCodeExt => BillToPostalCodeExt != null;

		/// <summary>
		/// Bill to county <br> Title: Bill to county: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to county <br> Title: Bill to county: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The BillToCounty value cannot exceed 50 characters. ")]
        public string BillToCounty { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCounty => BillToCounty != null;

		/// <summary>
		/// Bill to country <br> Title: Bill to country: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to country <br> Title: Bill to country: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The BillToCountry value cannot exceed 100 characters. ")]
        public string BillToCountry { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCountry => BillToCountry != null;

		/// <summary>
		/// Bill to email <br> Title: Bill to email: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to email <br> Title: Bill to email: Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The BillToEmail value cannot exceed 100 characters. ")]
        public string BillToEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToEmail => BillToEmail != null;

		/// <summary>
		/// Bill to phone <br> Title: Bill to phone: Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Bill to phone <br> Title: Bill to phone: Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The BillToDaytimePhone value cannot exceed 50 characters. ")]
        public string BillToDaytimePhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToDaytimePhone => BillToDaytimePhone != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(50, ErrorMessage = "The BillToNightPhone value cannot exceed 50 characters. ")]
        public string BillToNightPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToNightPhone => BillToNightPhone != null;

		/// <summary>
		/// Order notes. <br> Title: Notes, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Order notes. <br> Title: Notes, Display: true, Editable: true")]
        [StringLength(1000, ErrorMessage = "The Notes value cannot exceed 1000 characters. ")]
        public string Notes { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasNotes => Notes != null;

		/// <summary>
		/// C&C DC DCAssignment Number. <br> Title: DCAssignment, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("C&C DC DCAssignment Number. <br> Title: DCAssignment, Display: true, Editable: false")]
        public long? OrderDCAssignmentNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasOrderDCAssignmentNum => OrderDCAssignmentNum != null;

		/// <summary>
		/// Channel Order Header RowID. <br> Title: OrderRowID, Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Channel Order Header RowID. <br> Title: OrderRowID, Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The DBChannelOrderHeaderRowID value cannot exceed 50 characters. ")]
        public string DBChannelOrderHeaderRowID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDBChannelOrderHeaderRowID => DBChannelOrderHeaderRowID != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateDateUtc => UpdateDateUtc != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(100, ErrorMessage = "The EnterBy value cannot exceed 100 characters. ")]
        public string EnterBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEnterBy => EnterBy != null;

		/// <summary>
		/// (Ignore)
		/// </summary>
		[OpenApiPropertyDescription("(Ignore)")]
        [StringLength(100, ErrorMessage = "The UpdateBy value cannot exceed 100 characters. ")]
        public string UpdateBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateBy => UpdateBy != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

        #region added for import
        public string ShippingCode { get; set; }

        #endregion

    }
}



