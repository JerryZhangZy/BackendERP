
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a CustomerAddress SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class CustomerAddressHelper
    {
        public static readonly string TableName = "CustomerAddress";
        public static readonly string TableAllies = "cusd";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string RowNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum"} ";
        public static string AddressUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.AddressUuid) AS {name ?? "AddressUuid"} ";
        public static string CustomerUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.CustomerUuid) AS {name ?? "CustomerUuid"} ";
        public static string AddressCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.AddressCode) AS {name ?? "AddressCode"} ";
        public static string AddressType(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.AddressType AS {name ?? "AddressType"} ";
        public static string Description(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Description) AS {name ?? "Description"} ";
        public static string Name(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Name) AS {name ?? "Name"} ";
        public static string FirstName(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.FirstName) AS {name ?? "FirstName"} ";
        public static string LastName(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.LastName) AS {name ?? "LastName"} ";
        public static string Suffix(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Suffix) AS {name ?? "Suffix"} ";
        public static string Company(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Company) AS {name ?? "Company"} ";
        public static string CompanyJobTitle(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.CompanyJobTitle) AS {name ?? "CompanyJobTitle"} ";
        public static string Attention(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Attention) AS {name ?? "Attention"} ";
        public static string AddressLine1(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.AddressLine1) AS {name ?? "AddressLine1"} ";
        public static string AddressLine2(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.AddressLine2) AS {name ?? "AddressLine2"} ";
        public static string AddressLine3(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.AddressLine3) AS {name ?? "AddressLine3"} ";
        public static string City(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.City) AS {name ?? "City"} ";
        public static string State(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.State) AS {name ?? "State"} ";
        public static string StateFullName(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.StateFullName) AS {name ?? "StateFullName"} ";
        public static string PostalCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.PostalCode) AS {name ?? "PostalCode"} ";
        public static string PostalCodeExt(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.PostalCodeExt) AS {name ?? "PostalCodeExt"} ";
        public static string County(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.County) AS {name ?? "County"} ";
        public static string Country(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Country) AS {name ?? "Country"} ";
        public static string Email(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Email) AS {name ?? "Email"} ";
        public static string DaytimePhone(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.DaytimePhone) AS {name ?? "DaytimePhone"} ";
        public static string NightPhone(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.NightPhone) AS {name ?? "NightPhone"} ";
        public static string UpdateDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.UpdateDateUtc AS {name ?? "UpdateDateUtc"} ";
        public static string EnterBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.EnterBy) AS {name ?? "EnterBy"} ";
        public static string UpdateBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.UpdateBy) AS {name ?? "UpdateBy"} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc"} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid"} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}RowNum AS RowNum,
RTRIM({allies}AddressUuid) AS AddressUuid,
RTRIM({allies}CustomerUuid) AS CustomerUuid,
RTRIM({allies}AddressCode) AS AddressCode,
{allies}AddressType AS AddressType,
RTRIM({allies}Description) AS Description,
RTRIM({allies}Name) AS Name,
RTRIM({allies}FirstName) AS FirstName,
RTRIM({allies}LastName) AS LastName,
RTRIM({allies}Suffix) AS Suffix,
RTRIM({allies}Company) AS Company,
RTRIM({allies}CompanyJobTitle) AS CompanyJobTitle,
RTRIM({allies}Attention) AS Attention,
RTRIM({allies}AddressLine1) AS AddressLine1,
RTRIM({allies}AddressLine2) AS AddressLine2,
RTRIM({allies}AddressLine3) AS AddressLine3,
RTRIM({allies}City) AS City,
RTRIM({allies}State) AS State,
RTRIM({allies}StateFullName) AS StateFullName,
RTRIM({allies}PostalCode) AS PostalCode,
RTRIM({allies}PostalCodeExt) AS PostalCodeExt,
RTRIM({allies}County) AS County,
RTRIM({allies}Country) AS Country,
RTRIM({allies}Email) AS Email,
RTRIM({allies}DaytimePhone) AS DaytimePhone,
RTRIM({allies}NightPhone) AS NightPhone,
{allies}UpdateDateUtc AS UpdateDateUtc,
RTRIM({allies}EnterBy) AS EnterBy,
RTRIM({allies}UpdateBy) AS UpdateBy,
{allies}EnterDateUtc AS EnterDateUtc,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

