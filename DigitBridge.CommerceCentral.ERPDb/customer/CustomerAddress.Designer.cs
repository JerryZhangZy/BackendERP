
              

              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a CustomerAddress.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("CustomerAddress")]
    [PrimaryKey("RowNum", AutoIncrement = true)]
    [UniqueId("AddressUuid")]
    [DtoName("CustomerAddressDto")]
    public partial class CustomerAddress : TableRepository<CustomerAddress, long>
    {

        public CustomerAddress() : base() {}
        public CustomerAddress(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("AddressUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _addressUuid;

        [Column("CustomerUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _customerUuid;

        [Column("AddressCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _addressCode;

        [Column("AddressType",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _addressType;

        [Column("Description",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _description;

        [Column("Name",SqlDbType.NVarChar)]
        private string _name;

        [Column("FirstName",SqlDbType.NVarChar)]
        private string _firstName;

        [Column("LastName",SqlDbType.NVarChar)]
        private string _lastName;

        [Column("Suffix",SqlDbType.NVarChar)]
        private string _suffix;

        [Column("Company",SqlDbType.NVarChar)]
        private string _company;

        [Column("CompanyJobTitle",SqlDbType.NVarChar)]
        private string _companyJobTitle;

        [Column("Attention",SqlDbType.NVarChar)]
        private string _attention;

        [Column("AddressLine1",SqlDbType.NVarChar)]
        private string _addressLine1;

        [Column("AddressLine2",SqlDbType.NVarChar)]
        private string _addressLine2;

        [Column("AddressLine3",SqlDbType.NVarChar)]
        private string _addressLine3;

        [Column("City",SqlDbType.NVarChar)]
        private string _city;

        [Column("State",SqlDbType.NVarChar)]
        private string _state;

        [Column("StateFullName",SqlDbType.NVarChar)]
        private string _stateFullName;

        [Column("PostalCode",SqlDbType.VarChar)]
        private string _postalCode;

        [Column("PostalCodeExt",SqlDbType.VarChar)]
        private string _postalCodeExt;

        [Column("County",SqlDbType.NVarChar)]
        private string _county;

        [Column("Country",SqlDbType.NVarChar)]
        private string _country;

        [Column("Email",SqlDbType.VarChar)]
        private string _email;

        [Column("DaytimePhone",SqlDbType.VarChar)]
        private string _daytimePhone;

        [Column("NightPhone",SqlDbType.VarChar)]
        private string _nightPhone;

        [Column("UpdateDateUtc",SqlDbType.DateTime)]
        private DateTime? _updateDateUtc;

        [Column("EnterBy",SqlDbType.VarChar,NotNull=true)]
        private string _enterBy;

        [Column("UpdateBy",SqlDbType.VarChar,NotNull=true)]
        private string _updateBy;

        #endregion Fields - Generated 

        #region Properties - Generated 
		public override string UniqueId => AddressUuid; 
		public void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(AddressUuid)) 
				AddressUuid = Guid.NewGuid().ToString(); 
		}
        public virtual string AddressUuid
        {
            get
            {
				return _addressUuid?.TrimEnd(); 
            }
            set
            {
				_addressUuid = value.TruncateTo(50); 
            }
        }

        public virtual string CustomerUuid
        {
            get
            {
				return _customerUuid?.TrimEnd(); 
            }
            set
            {
				_customerUuid = value.TruncateTo(50); 
            }
        }

        public virtual string AddressCode
        {
            get
            {
				return _addressCode?.TrimEnd(); 
            }
            set
            {
				_addressCode = value.TruncateTo(50); 
            }
        }

        public virtual int AddressType
        {
            get
            {
				return _addressType; 
            }
            set
            {
				_addressType = value; 
            }
        }

        public virtual string Description
        {
            get
            {
				return _description?.TrimEnd(); 
            }
            set
            {
				_description = value.TruncateTo(200); 
            }
        }

        public virtual string Name
        {
            get
            {
				if (!AllowNull && _name is null) 
					_name = String.Empty; 
				return _name?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_name = value.TruncateTo(100); 
            }
        }

        public virtual string FirstName
        {
            get
            {
				if (!AllowNull && _firstName is null) 
					_firstName = String.Empty; 
				return _firstName?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_firstName = value.TruncateTo(50); 
            }
        }

        public virtual string LastName
        {
            get
            {
				if (!AllowNull && _lastName is null) 
					_lastName = String.Empty; 
				return _lastName?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_lastName = value.TruncateTo(50); 
            }
        }

        public virtual string Suffix
        {
            get
            {
				if (!AllowNull && _suffix is null) 
					_suffix = String.Empty; 
				return _suffix?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_suffix = value.TruncateTo(50); 
            }
        }

        public virtual string Company
        {
            get
            {
				if (!AllowNull && _company is null) 
					_company = String.Empty; 
				return _company?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_company = value.TruncateTo(100); 
            }
        }

        public virtual string CompanyJobTitle
        {
            get
            {
				if (!AllowNull && _companyJobTitle is null) 
					_companyJobTitle = String.Empty; 
				return _companyJobTitle?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_companyJobTitle = value.TruncateTo(100); 
            }
        }

        public virtual string Attention
        {
            get
            {
				if (!AllowNull && _attention is null) 
					_attention = String.Empty; 
				return _attention?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_attention = value.TruncateTo(100); 
            }
        }

        public virtual string AddressLine1
        {
            get
            {
				if (!AllowNull && _addressLine1 is null) 
					_addressLine1 = String.Empty; 
				return _addressLine1?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_addressLine1 = value.TruncateTo(200); 
            }
        }

        public virtual string AddressLine2
        {
            get
            {
				if (!AllowNull && _addressLine2 is null) 
					_addressLine2 = String.Empty; 
				return _addressLine2?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_addressLine2 = value.TruncateTo(200); 
            }
        }

        public virtual string AddressLine3
        {
            get
            {
				if (!AllowNull && _addressLine3 is null) 
					_addressLine3 = String.Empty; 
				return _addressLine3?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_addressLine3 = value.TruncateTo(200); 
            }
        }

        public virtual string City
        {
            get
            {
				if (!AllowNull && _city is null) 
					_city = String.Empty; 
				return _city?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_city = value.TruncateTo(100); 
            }
        }

        public virtual string State
        {
            get
            {
				if (!AllowNull && _state is null) 
					_state = String.Empty; 
				return _state?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_state = value.TruncateTo(50); 
            }
        }

        public virtual string StateFullName
        {
            get
            {
				if (!AllowNull && _stateFullName is null) 
					_stateFullName = String.Empty; 
				return _stateFullName?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_stateFullName = value.TruncateTo(100); 
            }
        }

        public virtual string PostalCode
        {
            get
            {
				if (!AllowNull && _postalCode is null) 
					_postalCode = String.Empty; 
				return _postalCode?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_postalCode = value.TruncateTo(50); 
            }
        }

        public virtual string PostalCodeExt
        {
            get
            {
				if (!AllowNull && _postalCodeExt is null) 
					_postalCodeExt = String.Empty; 
				return _postalCodeExt?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_postalCodeExt = value.TruncateTo(50); 
            }
        }

        public virtual string County
        {
            get
            {
				if (!AllowNull && _county is null) 
					_county = String.Empty; 
				return _county?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_county = value.TruncateTo(100); 
            }
        }

        public virtual string Country
        {
            get
            {
				if (!AllowNull && _country is null) 
					_country = String.Empty; 
				return _country?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_country = value.TruncateTo(100); 
            }
        }

        public virtual string Email
        {
            get
            {
				if (!AllowNull && _email is null) 
					_email = String.Empty; 
				return _email?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_email = value.TruncateTo(100); 
            }
        }

        public virtual string DaytimePhone
        {
            get
            {
				if (!AllowNull && _daytimePhone is null) 
					_daytimePhone = String.Empty; 
				return _daytimePhone?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_daytimePhone = value.TruncateTo(50); 
            }
        }

        public virtual string NightPhone
        {
            get
            {
				if (!AllowNull && _nightPhone is null) 
					_nightPhone = String.Empty; 
				return _nightPhone?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
					_nightPhone = value.TruncateTo(50); 
            }
        }

        public virtual DateTime? UpdateDateUtc
        {
            get
            {
				if (!AllowNull && _updateDateUtc is null) 
					_updateDateUtc = new DateTime().MinValueSql(); 
				return _updateDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
					_updateDateUtc = (value is null) ? (DateTime?) null : value?.Date.ToSqlSafeValue(); 
            }
        }

        public virtual string EnterBy
        {
            get
            {
				return _enterBy?.TrimEnd(); 
            }
            set
            {
				_enterBy = value.TruncateTo(100); 
            }
        }

        public virtual string UpdateBy
        {
            get
            {
				return _updateBy?.TrimEnd(); 
            }
            set
            {
				_updateBy = value.TruncateTo(100); 
            }
        }

        #endregion Properties - Generated 

        #region Methods - Parent

		[XmlIgnore, JsonIgnore, IgnoreCompare]
		private CustomerData Parent { get; set; }
		public CustomerData GetParent() => Parent;
		public CustomerAddress SetParent(CustomerData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			AddressUuid = Guid.NewGuid().ToString(); 
            return;
        }

        public override CustomerAddress Clear()
        {
			_addressUuid = String.Empty; 
			_customerUuid = String.Empty; 
			_addressCode = String.Empty; 
			_addressType = default(int); 
			_description = String.Empty; 
			_name = AllowNull ? (string)null : String.Empty; 
			_firstName = AllowNull ? (string)null : String.Empty; 
			_lastName = AllowNull ? (string)null : String.Empty; 
			_suffix = AllowNull ? (string)null : String.Empty; 
			_company = AllowNull ? (string)null : String.Empty; 
			_companyJobTitle = AllowNull ? (string)null : String.Empty; 
			_attention = AllowNull ? (string)null : String.Empty; 
			_addressLine1 = AllowNull ? (string)null : String.Empty; 
			_addressLine2 = AllowNull ? (string)null : String.Empty; 
			_addressLine3 = AllowNull ? (string)null : String.Empty; 
			_city = AllowNull ? (string)null : String.Empty; 
			_state = AllowNull ? (string)null : String.Empty; 
			_stateFullName = AllowNull ? (string)null : String.Empty; 
			_postalCode = AllowNull ? (string)null : String.Empty; 
			_postalCodeExt = AllowNull ? (string)null : String.Empty; 
			_county = AllowNull ? (string)null : String.Empty; 
			_country = AllowNull ? (string)null : String.Empty; 
			_email = AllowNull ? (string)null : String.Empty; 
			_daytimePhone = AllowNull ? (string)null : String.Empty; 
			_nightPhone = AllowNull ? (string)null : String.Empty; 
			_updateDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_enterBy = String.Empty; 
			_updateBy = String.Empty; 
            ClearChildren();
            return this;
        }

        public virtual CustomerAddress ClearChildren()
        {
            return this;
        }

        public virtual CustomerAddress NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(CustomerAddress data)
        {
            return;
        }

        #endregion Methods - Generated 
    }
}



