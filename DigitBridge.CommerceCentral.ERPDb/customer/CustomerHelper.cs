
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a Customer SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class CustomerHelper
    {
        public static readonly string TableName = "Customer";
        public static readonly string TableAllies = "cus";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string RowNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum"} ";
        public static string DatabaseNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DatabaseNum AS {name ?? "DatabaseNum"} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum"} ";
        public static string ProfileNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum"} ";
        public static string Digit_seller_id(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Digit_seller_id) AS {name ?? "Digit_seller_id"} ";
        public static string CustomerUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.CustomerUuid) AS {name ?? "CustomerUuid"} ";
        public static string CustomerNum(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.CustomerNum) AS {name ?? "CustomerNum"} ";
        public static string CustomerName(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.CustomerName) AS {name ?? "CustomerName"} ";
        public static string Contact(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Contact) AS {name ?? "Contact"} ";
        public static string Phone1(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Phone1) AS {name ?? "Phone1"} ";
        public static string Phone2(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Phone2) AS {name ?? "Phone2"} ";
        public static string Phone3(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Phone3) AS {name ?? "Phone3"} ";
        public static string Phone4(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Phone4) AS {name ?? "Phone4"} ";
        public static string Email(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Email) AS {name ?? "Email"} ";
        public static string CustomerType(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.CustomerType AS {name ?? "CustomerType"} ";
        public static string CustomerStatus(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.CustomerStatus AS {name ?? "CustomerStatus"} ";
        public static string BusinessType(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.BusinessType) AS {name ?? "BusinessType"} ";
        public static string PriceRule(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.PriceRule) AS {name ?? "PriceRule"} ";
        public static string FirstDate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.FirstDate AS {name ?? "FirstDate"} ";
        public static string Currency(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Currency) AS {name ?? "Currency"} ";
        public static string CreditLimit(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.CreditLimit AS {name ?? "CreditLimit"} ";
        public static string TaxRate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxRate AS {name ?? "TaxRate"} ";
        public static string DiscountRate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DiscountRate AS {name ?? "DiscountRate"} ";
        public static string ShippingCarrier(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShippingCarrier) AS {name ?? "ShippingCarrier"} ";
        public static string ShippingClass(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShippingClass) AS {name ?? "ShippingClass"} ";
        public static string ShippingAccount(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShippingAccount) AS {name ?? "ShippingAccount"} ";
        public static string Priority(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Priority) AS {name ?? "Priority"} ";
        public static string Area(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Area) AS {name ?? "Area"} ";
        public static string TaxId(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.TaxId) AS {name ?? "TaxId"} ";
        public static string ResaleLicense(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ResaleLicense) AS {name ?? "ResaleLicense"} ";
        public static string ClassCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ClassCode) AS {name ?? "ClassCode"} ";
        public static string DepartmentCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.DepartmentCode) AS {name ?? "DepartmentCode"} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc"} ";
        public static string UpdateDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.UpdateDateUtc AS {name ?? "UpdateDateUtc"} ";
        public static string EnterBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.EnterBy) AS {name ?? "EnterBy"} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid"} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}RowNum AS RowNum,
{allies}DatabaseNum AS DatabaseNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
RTRIM({allies}Digit_seller_id) AS Digit_seller_id,
RTRIM({allies}CustomerUuid) AS CustomerUuid,
RTRIM({allies}CustomerNum) AS CustomerNum,
RTRIM({allies}CustomerName) AS CustomerName,
RTRIM({allies}Contact) AS Contact,
RTRIM({allies}Phone1) AS Phone1,
RTRIM({allies}Phone2) AS Phone2,
RTRIM({allies}Phone3) AS Phone3,
RTRIM({allies}Phone4) AS Phone4,
RTRIM({allies}Email) AS Email,
{allies}CustomerType AS CustomerType,
{allies}CustomerStatus AS CustomerStatus,
RTRIM({allies}BusinessType) AS BusinessType,
RTRIM({allies}PriceRule) AS PriceRule,
{allies}FirstDate AS FirstDate,
RTRIM({allies}Currency) AS Currency,
{allies}CreditLimit AS CreditLimit,
{allies}TaxRate AS TaxRate,
{allies}DiscountRate AS DiscountRate,
RTRIM({allies}ShippingCarrier) AS ShippingCarrier,
RTRIM({allies}ShippingClass) AS ShippingClass,
RTRIM({allies}ShippingAccount) AS ShippingAccount,
RTRIM({allies}Priority) AS Priority,
RTRIM({allies}Area) AS Area,
RTRIM({allies}TaxId) AS TaxId,
RTRIM({allies}ResaleLicense) AS ResaleLicense,
RTRIM({allies}ClassCode) AS ClassCode,
RTRIM({allies}DepartmentCode) AS DepartmentCode,
{allies}EnterDateUtc AS EnterDateUtc,
{allies}UpdateDateUtc AS UpdateDateUtc,
RTRIM({allies}EnterBy) AS EnterBy,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

