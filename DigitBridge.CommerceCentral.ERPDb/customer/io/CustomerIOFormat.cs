              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Newtonsoft.Json;
using DigitBridge.CommerceCentral.YoPoco;
using CsvHelper;
using System.IO;
using DigitBridge.Base.Utility;
using System.Dynamic;
using System.Linq;
using DigitBridge.CommerceCentral.ERPDb;
using CsvHelper.Configuration;
using System.Threading.Tasks;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a CustomerIOFormat Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public partial class CustomerIOFormat : CsvFormat
    {
        public CustomerIOFormat() : base()
        {
            InitConfig();
			InitCustomer();
			InitCustomerAddress();
			InitCustomerAttributes();
        }

        protected virtual void InitConfig()
        {
            FormatNum = 1;
            FormatName = "Customer Deafult Format";
            KeyName = "";
			DefaultKeyName = "CustomerUuid";
            HasHeaderRecord = true;
        }

    
		protected virtual void InitCustomer()
		{
			var obj = this.InitParentObject<CustomerDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("RowNum", "", idx++, null, false),
				new CsvFormatColumn("DatabaseNum", "", idx++, null, false),
				new CsvFormatColumn("MasterAccountNum", "", idx++, null, false),
				new CsvFormatColumn("ProfileNum", "", idx++, null, false),
				new CsvFormatColumn("Digit_seller_id", "", idx++, null, false),
				new CsvFormatColumn("CustomerUuid", "", idx++, null, false),
				new CsvFormatColumn("CustomerCode", "", idx++, null, false),
				new CsvFormatColumn("CustomerName", "", idx++, null, false),
				new CsvFormatColumn("Contact", "", idx++, null, false),
				new CsvFormatColumn("Contact2", "", idx++, null, false),
				new CsvFormatColumn("Contact3", "", idx++, null, false),
				new CsvFormatColumn("Phone1", "", idx++, null, false),
				new CsvFormatColumn("Phone2", "", idx++, null, false),
				new CsvFormatColumn("Phone3", "", idx++, null, false),
				new CsvFormatColumn("Phone4", "", idx++, null, false),
				new CsvFormatColumn("Email", "", idx++, null, false),
				new CsvFormatColumn("WebSite", "", idx++, null, false),
				new CsvFormatColumn("ChannelNum", "", idx++, null, false),
				new CsvFormatColumn("ChannelAccountNum", "", idx++, null, false),
				new CsvFormatColumn("CustomerType", "", idx++, null, false),
				new CsvFormatColumn("CustomerStatus", "", idx++, null, false),
				new CsvFormatColumn("BusinessType", "", idx++, null, false),
				new CsvFormatColumn("PriceRule", "", idx++, null, false),
				new CsvFormatColumn("FirstDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("Currency", "", idx++, null, false),
				new CsvFormatColumn("CreditLimit", "", idx++, null, false),
				new CsvFormatColumn("TaxRate", "", idx++, FormatType.TaxRate, false),
				new CsvFormatColumn("DiscountRate", "", idx++, FormatType.Rate, false),
				new CsvFormatColumn("ShippingCarrier", "", idx++, null, false),
				new CsvFormatColumn("ShippingClass", "", idx++, null, false),
				new CsvFormatColumn("ShippingAccount", "", idx++, null, false),
				new CsvFormatColumn("Priority", "", idx++, null, false),
				new CsvFormatColumn("Area", "", idx++, null, false),
				new CsvFormatColumn("Region", "", idx++, null, false),
				new CsvFormatColumn("Districtn", "", idx++, null, false),
				new CsvFormatColumn("Zone", "", idx++, null, false),
				new CsvFormatColumn("TaxId", "", idx++, null, false),
				new CsvFormatColumn("ResaleLicense", "", idx++, null, false),
				new CsvFormatColumn("ClassCode", "", idx++, null, false),
				new CsvFormatColumn("DepartmentCode", "", idx++, null, false),
				new CsvFormatColumn("DivisionCode", "", idx++, null, false),
				new CsvFormatColumn("SourceCode", "", idx++, null, false),
				new CsvFormatColumn("Terms", "", idx++, null, false),
				new CsvFormatColumn("TermsDays", "", idx++, null, false),
				new CsvFormatColumn("SalesRep", "", idx++, null, false),
				new CsvFormatColumn("SalesRep2", "", idx++, null, false),
				new CsvFormatColumn("SalesRep3", "", idx++, null, false),
				new CsvFormatColumn("SalesRep4", "", idx++, null, false),
				new CsvFormatColumn("CommissionRate", "", idx++, FormatType.Rate, false),
				new CsvFormatColumn("CommissionRate2", "", idx++, FormatType.Rate, false),
				new CsvFormatColumn("CommissionRate3", "", idx++, FormatType.Rate, false),
				new CsvFormatColumn("CommissionRate4", "", idx++, FormatType.Rate, false),
				new CsvFormatColumn("UpdateDateUtc", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("EnterBy", "", idx++, null, false),
				new CsvFormatColumn("UpdateBy", "", idx++, null, false),
			};
		}



    
		protected virtual void InitCustomerAddress()
		{
			var obj = this.InitParentObject<CustomerAddressDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("AddressUuid", "", idx++, null, false),
				new CsvFormatColumn("AddressCode", "", idx++, null, false),
				new CsvFormatColumn("AddressType", "", idx++, null, false),
				new CsvFormatColumn("Description", "", idx++, null, false),
				new CsvFormatColumn("Name", "", idx++, null, false),
				new CsvFormatColumn("FirstName", "", idx++, null, false),
				new CsvFormatColumn("LastName", "", idx++, null, false),
				new CsvFormatColumn("Suffix", "", idx++, null, false),
				new CsvFormatColumn("Company", "", idx++, null, false),
				new CsvFormatColumn("CompanyJobTitle", "", idx++, null, false),
				new CsvFormatColumn("Attention", "", idx++, null, false),
				new CsvFormatColumn("AddressLine1", "", idx++, null, false),
				new CsvFormatColumn("AddressLine2", "", idx++, null, false),
				new CsvFormatColumn("AddressLine3", "", idx++, null, false),
				new CsvFormatColumn("City", "", idx++, null, false),
				new CsvFormatColumn("State", "", idx++, null, false),
				new CsvFormatColumn("StateFullName", "", idx++, null, false),
				new CsvFormatColumn("PostalCode", "", idx++, null, false),
				new CsvFormatColumn("PostalCodeExt", "", idx++, null, false),
				new CsvFormatColumn("County", "", idx++, null, false),
				new CsvFormatColumn("Country", "", idx++, null, false),
				new CsvFormatColumn("DaytimePhone", "", idx++, null, false),
				new CsvFormatColumn("NightPhone", "", idx++, null, false),
			};
		}



    
		protected virtual void InitCustomerAttributes()
		{
			var obj = this.InitParentObject<CustomerAttributesDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("JsonFields", "", idx++, null, false),
			};
		}



    }
}



