              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a EventProcessERP Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class EventProcessERPDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Database Number. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? DatabaseNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDatabaseNum => DatabaseNum != null;

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user account. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? MasterAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMasterAccountNum => MasterAccountNum != null;

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user profile. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? ProfileNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProfileNum => ProfileNum != null;

		/// <summary>
		/// Event uuid. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("Event uuid. <br> Display: false, Editable: false.")]
        [StringLength(50, ErrorMessage = "The EventUuid value cannot exceed 50 characters. ")]
        public string EventUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEventUuid => EventUuid != null;

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false")]
        public int? ChannelNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelNum => ChannelNum != null;

		/// <summary>
		/// (Readonly) The unique number of this profile’s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) The unique number of this profile’s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false")]
        public int? ChannelAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelAccountNum => ChannelAccountNum != null;

		/// <summary>
		/// ERP Event type. <br> Title: EventType, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("ERP Event type. <br> Title: EventType, Display: true, Editable: true")]
        public int? ERPEventProcessType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasERPEventProcessType => ERPEventProcessType != null;

		/// <summary>
		/// process source.<br> Title:ProcessSource,Display:true,Editable:false
		/// </summary>
		[OpenApiPropertyDescription("process source.<br> Title:ProcessSource,Display:true,Editable:false")]
        [StringLength(50, ErrorMessage = "The ProcessSource value cannot exceed 50 characters. ")]
        public string ProcessSource { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProcessSource => ProcessSource != null;

		/// <summary>
		/// process uuid. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("process uuid. <br> Display: false, Editable: false.")]
        [StringLength(50, ErrorMessage = "The ProcessUuid value cannot exceed 50 characters. ")]
        public string ProcessUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProcessUuid => ProcessUuid != null;

		/// <summary>
		/// process data. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("process data. <br> Display: false, Editable: false.")]
        public string ProcessData { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProcessData => ProcessData != null;

		/// <summary>
		/// event message. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("event message. <br> Display: false, Editable: false.")]
        [StringLength(300, ErrorMessage = "The EventMessage value cannot exceed 300 characters. ")]
        public string EventMessage { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEventMessage => EventMessage != null;

		/// <summary>
		/// Download Acknowledge Status. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Download Acknowledge Status. <br> Title: Type, Display: true, Editable: false")]
        public int? ActionStatus { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasActionStatus => ActionStatus != null;

		/// <summary>
		/// Download Acknowledge Date. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Download Acknowledge Date. <br> Title: Type, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? ActionDate { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasActionDate => ActionDate != null;

		/// <summary>
		/// Process Status. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Process Status. <br> Title: Type, Display: true, Editable: false")]
        public int? ProcessStatus { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProcessStatus => ProcessStatus != null;

		/// <summary>
		/// Process Date. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Process Date. <br> Title: Type, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? ProcessDate { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProcessDate => ProcessDate != null;

		/// <summary>
		/// Close Status. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Close Status. <br> Title: Type, Display: true, Editable: false")]
        public int? CloseStatus { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCloseStatus => CloseStatus != null;

		/// <summary>
		/// Close Date. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Close Date. <br> Title: Type, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? CloseDate { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCloseDate => CloseDate != null;

		/// <summary>
		/// Close Date. <br> Title: Type, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Close Date. <br> Title: Type, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? LastUpdateDate { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasLastUpdateDate => LastUpdateDate != null;

		/// <summary>
		/// (Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateDateUtc => UpdateDateUtc != null;

		/// <summary>
		/// (Readonly) User who created this order. <br> Title: Created By, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) User who created this order. <br> Title: Created By, Display: true, Editable: false")]
        [StringLength(100, ErrorMessage = "The EnterBy value cannot exceed 100 characters. ")]
        public string EnterBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEnterBy => EnterBy != null;

		/// <summary>
		/// (Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false")]
        [StringLength(100, ErrorMessage = "The UpdateBy value cannot exceed 100 characters. ")]
        public string UpdateBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateBy => UpdateBy != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



