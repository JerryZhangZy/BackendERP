



//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;
using Microsoft.Data.SqlClient;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InvoiceTransaction SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class InvoiceTransactionHelper
    {
        public static readonly string TableName = "InvoiceTransaction";
        public static readonly string TableAllies = "trs";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string RowNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum"} ";
        public static string DatabaseNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DatabaseNum AS {name ?? "DatabaseNum"} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum"} ";
        public static string ProfileNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum"} ";
        public static string TransUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.TransUuid) AS {name ?? "TransUuid"} ";
        public static string TransNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TransNum AS {name ?? "TransNum"} ";
        public static string InvoiceUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceUuid) AS {name ?? "InvoiceUuid"} ";
        public static string InvoiceNumber(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceNumber) AS {name ?? "InvoiceNumber"} ";
        public static string TransType(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TransType AS {name ?? "TransType"} ";
        public static string TransStatus(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TransStatus AS {name ?? "TransStatus"} ";
        public static string TransDate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TransDate AS {name ?? "TransDate"} ";
        public static string TransTime(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TransTime AS {name ?? "TransTime"} ";
        public static string Description(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Description) AS {name ?? "Description"} ";
        public static string Notes(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Notes) AS {name ?? "Notes"} ";
        public static string PaidBy(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.PaidBy AS {name ?? "PaidBy"} ";
        public static string BankAccountUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.BankAccountUuid) AS {name ?? "BankAccountUuid"} ";
        public static string BankAccountCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.BankAccountCode) AS {name ?? "BankAccountCode"} ";
        public static string CheckNum(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.CheckNum) AS {name ?? "CheckNum"} ";
        public static string AuthCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.AuthCode) AS {name ?? "AuthCode"} ";
        public static string Currency(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Currency) AS {name ?? "Currency"} ";
        public static string ExchangeRate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ExchangeRate AS {name ?? "ExchangeRate"} ";
        public static string SubTotalAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.SubTotalAmount AS {name ?? "SubTotalAmount"} ";
        public static string SalesAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.SalesAmount AS {name ?? "SalesAmount"} ";
        public static string TotalAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TotalAmount AS {name ?? "TotalAmount"} ";
        public static string TaxableAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxableAmount AS {name ?? "TaxableAmount"} ";
        public static string NonTaxableAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.NonTaxableAmount AS {name ?? "NonTaxableAmount"} ";
        public static string TaxRate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxRate AS {name ?? "TaxRate"} ";
        public static string TaxAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxAmount AS {name ?? "TaxAmount"} ";
        public static string DiscountRate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DiscountRate AS {name ?? "DiscountRate"} ";
        public static string DiscountAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DiscountAmount AS {name ?? "DiscountAmount"} ";
        public static string ShippingAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShippingAmount AS {name ?? "ShippingAmount"} ";
        public static string ShippingTaxAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShippingTaxAmount AS {name ?? "ShippingTaxAmount"} ";
        public static string MiscAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MiscAmount AS {name ?? "MiscAmount"} ";
        public static string MiscTaxAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MiscTaxAmount AS {name ?? "MiscTaxAmount"} ";
        public static string ChargeAndAllowanceAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ChargeAndAllowanceAmount AS {name ?? "ChargeAndAllowanceAmount"} ";
        public static string CreditAccount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.CreditAccount AS {name ?? "CreditAccount"} ";
        public static string DebitAccount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DebitAccount AS {name ?? "DebitAccount"} ";
        public static string TransSourceCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.TransSourceCode) AS {name ?? "TransSourceCode"} ";
        public static string UpdateDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.UpdateDateUtc AS {name ?? "UpdateDateUtc"} ";
        public static string EnterBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.EnterBy) AS {name ?? "EnterBy"} ";
        public static string UpdateBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.UpdateBy) AS {name ?? "UpdateBy"} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc"} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid"} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null)
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}RowNum AS RowNum,
{allies}DatabaseNum AS DatabaseNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
RTRIM({allies}TransUuid) AS TransUuid,
{allies}TransNum AS TransNum,
RTRIM({allies}InvoiceUuid) AS InvoiceUuid,
RTRIM({allies}InvoiceNumber) AS InvoiceNumber,
{allies}TransType AS TransType,
{allies}TransStatus AS TransStatus,
{allies}TransDate AS TransDate,
{allies}TransTime AS TransTime,
RTRIM({allies}Description) AS Description,
RTRIM({allies}Notes) AS Notes,
{allies}PaidBy AS PaidBy,
RTRIM({allies}BankAccountUuid) AS BankAccountUuid,
RTRIM({allies}BankAccountCode) AS BankAccountCode,
RTRIM({allies}CheckNum) AS CheckNum,
RTRIM({allies}AuthCode) AS AuthCode,
RTRIM({allies}Currency) AS Currency,
{allies}ExchangeRate AS ExchangeRate,
{allies}SubTotalAmount AS SubTotalAmount,
{allies}SalesAmount AS SalesAmount,
{allies}TotalAmount AS TotalAmount,
{allies}TaxableAmount AS TaxableAmount,
{allies}NonTaxableAmount AS NonTaxableAmount,
{allies}TaxRate AS TaxRate,
{allies}TaxAmount AS TaxAmount,
{allies}DiscountRate AS DiscountRate,
{allies}DiscountAmount AS DiscountAmount,
{allies}ShippingAmount AS ShippingAmount,
{allies}ShippingTaxAmount AS ShippingTaxAmount,
{allies}MiscAmount AS MiscAmount,
{allies}MiscTaxAmount AS MiscTaxAmount,
{allies}ChargeAndAllowanceAmount AS ChargeAndAllowanceAmount,
{allies}CreditAccount AS CreditAccount,
{allies}DebitAccount AS DebitAccount,
RTRIM({allies}TransSourceCode) AS TransSourceCode,
{allies}UpdateDateUtc AS UpdateDateUtc,
RTRIM({allies}EnterBy) AS EnterBy,
RTRIM({allies}UpdateBy) AS UpdateBy,
{allies}EnterDateUtc AS EnterDateUtc,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false)
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

        /// <summary>
        /// delete data
        /// </summary>
        /// <param name="invoiceNumber"></param>
        /// <returns></returns>
        public static async Task DeleteByInvoiceNumberAsync(string invoiceNumber)
        {
            await SqlQuery.ExecuteNonQueryAsync($"Delete FROM [InvoiceTransaction] where InvoiceNumber=@InvoiceNumber", new SqlParameter("@InvoiceNumber", invoiceNumber));
        }
    }
}

