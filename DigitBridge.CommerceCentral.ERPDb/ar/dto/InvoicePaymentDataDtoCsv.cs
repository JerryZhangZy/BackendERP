

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Newtonsoft.Json;
using DigitBridge.CommerceCentral.YoPoco;
using CsvHelper;
using System.IO;
using DigitBridge.Base.Utility;
using System.Dynamic;
using System.Linq;
using System.Text;
using Newtonsoft.Json.Linq;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InvoiceTransactionDataDtoCsv Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public partial class InvoicePaymentDataDtoCsv : CsvHelper<InvoiceTransactionDataDto>
    {
        public override void GetFormat()
        {

        }

        public override void RegisterMapper(CsvContext context)
        {
            context.RegisterClassMap(new CsvAutoMapper<InvoiceTransactionDto>());
        }

        protected override void WriteCsv(JObject data, CsvWriter csv)
        {
            //"The data path in json file. Depend on the json file formate you set."
            var path = "InvoiceTransaction";
            var wirteheader = csv.Row == 1;
            Write(data, path, csv, wirteheader);
        }
        public override void ReadEntities(CsvReader csv, IList<InvoiceTransactionDataDto> data)
        {
            InvoiceTransactionDataDto dto = new InvoiceTransactionDataDto();
            while (csv.Read())
            {
                // it is header line
                if (csv.GetField(0).EqualsIgnoreSpace("InvoiceNumber"))
                {
                    csv.ReadHeader();
                    continue;
                }
                dto = new InvoiceTransactionDataDto();
                dto.InvoiceTransaction = csv.GetRecord<InvoiceTransactionDto>();
                if (dto.HasInvoiceTransaction)
                    data.Add(dto);
            }
        }
    }
}


