
    
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using DigitBridge.Base.Utility;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Request and Response payload object
    /// </summary>
    [Serializable()]
    public class InvoiceListForPayment
    {
        public long rowNum { get; set; }
        public string invoiceUuid { get; set; }
        public string qboDocNumber { get; set; }
        public string salesOrderUuid { get; set; }
        public int invoiceType { get; set; }
        public string invoiceNumber { get; set; }
        public string invoiceTypeText { get; set; }
        public int invoiceStatus { get; set; }
        public string invoiceStatusText { get; set; }
        public DateTime invoiceDate { get; set; }
        public DateTime dueDate { get; set; }
        public string customerUuid { get; set; }
        public string customerCode { get; set; }
        public string customerName { get; set; }
        public string terms { get; set; }
        public int termsDays { get; set; }
        public decimal subTotalAmount { get; set; }
        public decimal totalAmount { get; set; }
        public decimal paidAmount { get; set; }
        public decimal creditAmount { get; set; }
        public decimal balance { get; set; }
        public string invoiceSourceCode { get; set; }
        public long centralFulfillmentNum { get; set; }
        public long orderShipmentNum { get; set; }
        public string orderShipmentUuid { get; set; }
        public string shippingCarrier { get; set; }
        public string shippingClass { get; set; }
        public int distributionCenterNum { get; set; }
        public long centralOrderNum { get; set; }
        public int channelNum { get; set; }
        public int channelAccountNum { get; set; }
        public string channelName { get; set; }
        public string channelAccountName { get; set; }
        public string channelOrderID { get; set; }
        public string warehouseUuid { get; set; }
        public string warehouseCode { get; set; }
        public string refNum { get; set; }
        public string customerPoNum { get; set; }
        public string shipToName { get; set; }
        public string shipToAttention { get; set; }
        public string shipToAddressLine1 { get; set; }
        public string shipToAddressLine2 { get; set; }
        public string shipToCity { get; set; }
        public string shipToState { get; set; }
        public string shipToPostalCode { get; set; }
        public string shipToCountry { get; set; }
        public string shipToEmail { get; set; }
        public string billToEmail { get; set; }


        public long TransRowNum { get; set; } = 0;
        public string TransUuid { get; set; } = string.Empty;
        public int TransNum { get; set; } = 0;
        public string Description { get; set; } = string.Empty;
        public string Notes { get; set; } = string.Empty;
        public decimal pay { get; set; } = 0;
    }

    public static class InvoiceListForPaymentExtensions
    {

        public static InvoiceListForPayment FindByInvoiceUuid(this IList<InvoiceListForPayment> lst, string invoiceUuid)
            => (lst == null || string.IsNullOrEmpty(invoiceUuid))
                ? null
                : lst.FirstOrDefault(item => item.invoiceUuid.EqualsIgnoreSpace(invoiceUuid));

        public static InvoiceListForPayment FindByTransUuid(this IList<InvoiceListForPayment> lst, string TransUuid)
            => (lst == null || string.IsNullOrEmpty(TransUuid))
                ? null
                : lst.FirstOrDefault(item => item.TransUuid.EqualsIgnoreSpace(TransUuid));

    }

}

