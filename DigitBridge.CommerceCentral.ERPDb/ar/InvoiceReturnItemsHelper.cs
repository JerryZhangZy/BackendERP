
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InvoiceReturnItems SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class InvoiceReturnItemsHelper
    {
        public static readonly string TableName = "InvoiceReturnItems";
        public static readonly string TableAllies = "trsl";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string RowNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum"} ";
        public static string ReturnItemUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ReturnItemUuid) AS {name ?? "ReturnItemUuid"} ";
        public static string TransUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.TransUuid) AS {name ?? "TransUuid"} ";
        public static string Seq(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.Seq AS {name ?? "Seq"} ";
        public static string InvoiceUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceUuid) AS {name ?? "InvoiceUuid"} ";
        public static string InvoiceItemsUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceItemsUuid) AS {name ?? "InvoiceItemsUuid"} ";
        public static string ReturnItemType(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReturnItemType AS {name ?? "ReturnItemType"} ";
        public static string ReturnItemStatus(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReturnItemStatus AS {name ?? "ReturnItemStatus"} ";
        public static string ReturnDate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReturnDate AS {name ?? "ReturnDate"} ";
        public static string ReturnTime(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReturnTime AS {name ?? "ReturnTime"} ";
        public static string ReceiveDate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReceiveDate AS {name ?? "ReceiveDate"} ";
        public static string StockDate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.StockDate AS {name ?? "StockDate"} ";
        public static string SKU(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.SKU) AS {name ?? "SKU"} ";
        public static string ProductUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ProductUuid) AS {name ?? "ProductUuid"} ";
        public static string InventoryUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InventoryUuid) AS {name ?? "InventoryUuid"} ";
        public static string InvoiceWarehouseUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceWarehouseUuid) AS {name ?? "InvoiceWarehouseUuid"} ";
        public static string InvoiceWarehouseCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceWarehouseCode) AS {name ?? "InvoiceWarehouseCode"} ";
        public static string WarehouseUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.WarehouseUuid) AS {name ?? "WarehouseUuid"} ";
        public static string WarehouseCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.WarehouseCode) AS {name ?? "WarehouseCode"} ";
        public static string LotNum(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.LotNum) AS {name ?? "LotNum"} ";
        public static string Reason(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Reason) AS {name ?? "Reason"} ";
        public static string Description(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Description) AS {name ?? "Description"} ";
        public static string Notes(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Notes) AS {name ?? "Notes"} ";
        public static string Currency(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.Currency) AS {name ?? "Currency"} ";
        public static string UOM(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.UOM) AS {name ?? "UOM"} ";
        public static string PackType(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.PackType) AS {name ?? "PackType"} ";
        public static string PackQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.PackQty AS {name ?? "PackQty"} ";
        public static string ReturnPack(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReturnPack AS {name ?? "ReturnPack"} ";
        public static string ReceivePack(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReceivePack AS {name ?? "ReceivePack"} ";
        public static string StockPack(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.StockPack AS {name ?? "StockPack"} ";
        public static string NonStockPack(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.NonStockPack AS {name ?? "NonStockPack"} ";
        public static string ReturnQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReturnQty AS {name ?? "ReturnQty"} ";
        public static string ReceiveQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ReceiveQty AS {name ?? "ReceiveQty"} ";
        public static string StockQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.StockQty AS {name ?? "StockQty"} ";
        public static string NonStockQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.NonStockQty AS {name ?? "NonStockQty"} ";
        public static string PutBackWarehouseUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.PutBackWarehouseUuid) AS {name ?? "PutBackWarehouseUuid"} ";
        public static string PutBackWarehouseCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.PutBackWarehouseCode) AS {name ?? "PutBackWarehouseCode"} ";
        public static string DamageWarehouseUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.DamageWarehouseUuid) AS {name ?? "DamageWarehouseUuid"} ";
        public static string DamageWarehouseCode(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.DamageWarehouseCode) AS {name ?? "DamageWarehouseCode"} ";
        public static string InvoiceDiscountPrice(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.InvoiceDiscountPrice AS {name ?? "InvoiceDiscountPrice"} ";
        public static string Price(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.Price AS {name ?? "Price"} ";
        public static string ExtAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ExtAmount AS {name ?? "ExtAmount"} ";
        public static string TaxableAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxableAmount AS {name ?? "TaxableAmount"} ";
        public static string NonTaxableAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.NonTaxableAmount AS {name ?? "NonTaxableAmount"} ";
        public static string TaxRate(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxRate AS {name ?? "TaxRate"} ";
        public static string TaxAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TaxAmount AS {name ?? "TaxAmount"} ";
        public static string ShippingAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShippingAmount AS {name ?? "ShippingAmount"} ";
        public static string ShippingTaxAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShippingTaxAmount AS {name ?? "ShippingTaxAmount"} ";
        public static string MiscAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MiscAmount AS {name ?? "MiscAmount"} ";
        public static string MiscTaxAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MiscTaxAmount AS {name ?? "MiscTaxAmount"} ";
        public static string ChargeAndAllowanceAmount(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ChargeAndAllowanceAmount AS {name ?? "ChargeAndAllowanceAmount"} ";
        public static string Stockable(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.Stockable AS {name ?? "Stockable"} ";
        public static string IsAr(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.IsAr AS {name ?? "IsAr"} ";
        public static string Taxable(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.Taxable AS {name ?? "Taxable"} ";
        public static string UpdateDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.UpdateDateUtc AS {name ?? "UpdateDateUtc"} ";
        public static string EnterBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.EnterBy) AS {name ?? "EnterBy"} ";
        public static string UpdateBy(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.UpdateBy) AS {name ?? "UpdateBy"} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc"} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid"} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}RowNum AS RowNum,
RTRIM({allies}ReturnItemUuid) AS ReturnItemUuid,
RTRIM({allies}TransUuid) AS TransUuid,
{allies}Seq AS Seq,
RTRIM({allies}InvoiceUuid) AS InvoiceUuid,
RTRIM({allies}InvoiceItemsUuid) AS InvoiceItemsUuid,
{allies}ReturnItemType AS ReturnItemType,
{allies}ReturnItemStatus AS ReturnItemStatus,
{allies}ReturnDate AS ReturnDate,
{allies}ReturnTime AS ReturnTime,
{allies}ReceiveDate AS ReceiveDate,
{allies}StockDate AS StockDate,
RTRIM({allies}SKU) AS SKU,
RTRIM({allies}ProductUuid) AS ProductUuid,
RTRIM({allies}InventoryUuid) AS InventoryUuid,
RTRIM({allies}InvoiceWarehouseUuid) AS InvoiceWarehouseUuid,
RTRIM({allies}InvoiceWarehouseCode) AS InvoiceWarehouseCode,
RTRIM({allies}WarehouseUuid) AS WarehouseUuid,
RTRIM({allies}WarehouseCode) AS WarehouseCode,
RTRIM({allies}LotNum) AS LotNum,
RTRIM({allies}Reason) AS Reason,
RTRIM({allies}Description) AS Description,
RTRIM({allies}Notes) AS Notes,
RTRIM({allies}Currency) AS Currency,
RTRIM({allies}UOM) AS UOM,
RTRIM({allies}PackType) AS PackType,
{allies}PackQty AS PackQty,
{allies}ReturnPack AS ReturnPack,
{allies}ReceivePack AS ReceivePack,
{allies}StockPack AS StockPack,
{allies}NonStockPack AS NonStockPack,
{allies}ReturnQty AS ReturnQty,
{allies}ReceiveQty AS ReceiveQty,
{allies}StockQty AS StockQty,
{allies}NonStockQty AS NonStockQty,
RTRIM({allies}PutBackWarehouseUuid) AS PutBackWarehouseUuid,
RTRIM({allies}PutBackWarehouseCode) AS PutBackWarehouseCode,
RTRIM({allies}DamageWarehouseUuid) AS DamageWarehouseUuid,
RTRIM({allies}DamageWarehouseCode) AS DamageWarehouseCode,
{allies}InvoiceDiscountPrice AS InvoiceDiscountPrice,
{allies}Price AS Price,
{allies}ExtAmount AS ExtAmount,
{allies}TaxableAmount AS TaxableAmount,
{allies}NonTaxableAmount AS NonTaxableAmount,
{allies}TaxRate AS TaxRate,
{allies}TaxAmount AS TaxAmount,
{allies}ShippingAmount AS ShippingAmount,
{allies}ShippingTaxAmount AS ShippingTaxAmount,
{allies}MiscAmount AS MiscAmount,
{allies}MiscTaxAmount AS MiscTaxAmount,
{allies}ChargeAndAllowanceAmount AS ChargeAndAllowanceAmount,
{allies}Stockable AS Stockable,
{allies}IsAr AS IsAr,
{allies}Taxable AS Taxable,
{allies}UpdateDateUtc AS UpdateDateUtc,
RTRIM({allies}EnterBy) AS EnterBy,
RTRIM({allies}UpdateBy) AS UpdateBy,
{allies}EnterDateUtc AS EnterDateUtc,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

