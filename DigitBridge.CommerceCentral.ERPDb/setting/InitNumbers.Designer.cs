

              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InitNumbers.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("InitNumbers")]
    [PrimaryKey("RowNum", AutoIncrement = true)]
    [UniqueId("InitNumbersUuid")]
    [DtoName("InitNumbersDto")]
    public partial class InitNumbers : TableRepository<InitNumbers, long>
    {

        public InitNumbers() : base() {}
        public InitNumbers(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("InitNumbersUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _initNumbersUuid;

        [Column("CustomerUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _customerUuid;

        [Column("InActive",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _inActive;

        [Column("Type",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _type;

        [Column("Number",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _number;

        [Column("Prefix",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _prefix;

        [Column("Suffix",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _suffix;

        [Column("UpdateDateUtc",SqlDbType.DateTime)]
        private DateTime? _updateDateUtc;

        [Column("EnterBy",SqlDbType.VarChar,NotNull=true)]
        private string _enterBy;

        [Column("UpdateBy",SqlDbType.VarChar,NotNull=true)]
        private string _updateBy;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => InitNumbersUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(InitNumbersUuid)) 
				InitNumbersUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// Global Unique Guid
		/// </summary>
        public virtual string InitNumbersUuid
        {
            get
            {
				return _initNumbersUuid?.TrimEnd(); 
            }
            set
            {
				_initNumbersUuid = value.TruncateTo(50); 
				OnPropertyChanged("InitNumbersUuid", value);
            }
        }

		/// <summary>
		/// Customer uuid. CustomerUuid = DEFAULT for system init number <br> Display: false, Editable: false.
		/// </summary>
        public virtual string CustomerUuid
        {
            get
            {
				return _customerUuid?.TrimEnd(); 
            }
            set
            {
				_customerUuid = value.TruncateTo(50); 
				OnPropertyChanged("CustomerUuid", value);
            }
        }

		/// <summary>
		/// Disable this record
		/// </summary>
        public virtual bool InActive
        {
            get
            {
				return (_inActive == 1); 
            }
            set
            {
				_inActive = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("InActive", value);
            }
        }

		/// <summary>
		/// InitNumber type, like Invoice#, S/O#, P/O#
		/// </summary>
        public virtual string Type
        {
            get
            {
				return _type?.TrimEnd(); 
            }
            set
            {
				_type = value.TruncateTo(20); 
				OnPropertyChanged("Type", value);
            }
        }

		/// <summary>
		/// Init number, real number will be more than init number and not exist number
		/// </summary>
        public virtual int Number
        {
            get
            {
				return _number; 
            }
            set
            {
				_number = value; 
				OnPropertyChanged("Number", value);
            }
        }

		/// <summary>
		/// Prefix append to Init number
		/// </summary>
        public virtual string Prefix
        {
            get
            {
				return _prefix?.TrimEnd(); 
            }
            set
            {
				_prefix = value.TruncateTo(20); 
				OnPropertyChanged("Prefix", value);
            }
        }

		/// <summary>
		/// Suffix follow by Init number
		/// </summary>
        public virtual string Suffix
        {
            get
            {
				return _suffix?.TrimEnd(); 
            }
            set
            {
				_suffix = value.TruncateTo(20); 
				OnPropertyChanged("Suffix", value);
            }
        }

		/// <summary>
		/// (Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false
		/// </summary>
        public virtual DateTime? UpdateDateUtc
        {
            get
            {
				if (!AllowNull && _updateDateUtc is null) 
					_updateDateUtc = new DateTime().MinValueSql(); 
				return _updateDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_updateDateUtc = (value is null) ? (DateTime?) null : value?.Date.ToSqlSafeValue(); 
					OnPropertyChanged("UpdateDateUtc", value);
				}
            }
        }

		/// <summary>
		/// (Readonly) User who created this order. <br> Title: Created By, Display: true, Editable: false
		/// </summary>
        public virtual string EnterBy
        {
            get
            {
				return _enterBy?.TrimEnd(); 
            }
            set
            {
				_enterBy = value.TruncateTo(100); 
				OnPropertyChanged("EnterBy", value);
            }
        }

		/// <summary>
		/// (Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false
		/// </summary>
        public virtual string UpdateBy
        {
            get
            {
				return _updateBy?.TrimEnd(); 
            }
            set
            {
				_updateBy = value.TruncateTo(100); 
				OnPropertyChanged("UpdateBy", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private InitNumbersData Parent { get; set; }
		public InitNumbersData GetParent() => Parent;
		public InitNumbers SetParent(InitNumbersData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			InitNumbersUuid = Guid.NewGuid().ToString(); 
            return;
        }

        public override InitNumbers Clear()
        {
            base.Clear();
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_initNumbersUuid = String.Empty; 
			_customerUuid = String.Empty; 
			_inActive = default(byte); 
			_type = String.Empty; 
			_number = default(int); 
			_prefix = String.Empty; 
			_suffix = String.Empty; 
			_updateDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_enterBy = String.Empty; 
			_updateBy = String.Empty; 
            ClearChildren();
            return this;
        }

        public override InitNumbers CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual InitNumbers ClearChildren()
        {
            return this;
        }

        public virtual InitNumbers NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(InitNumbers data)
        {
            if (data is null) return;
            return;
        }

		public static IList<InitNumbers> FindByCustomerUuid(IDataBaseFactory dbFactory, string customerUuid)
		{
			return dbFactory.Find<InitNumbers>("WHERE CustomerUuid = @0 ", customerUuid).ToList();
		}
		public static long CountByCustomerUuid(IDataBaseFactory dbFactory, string customerUuid)
		{
			return dbFactory.Count<InitNumbers>("WHERE CustomerUuid = @0 ", customerUuid);
		}
		public static async Task<IList<InitNumbers>> FindByAsyncCustomerUuid(IDataBaseFactory dbFactory, string customerUuid)
		{
			return (await dbFactory.FindAsync<InitNumbers>("WHERE CustomerUuid = @0 ", customerUuid)).ToList();
		}
		public static async Task<long> CountByAsyncCustomerUuid(IDataBaseFactory dbFactory, string customerUuid)
		{
			return await dbFactory.CountAsync<InitNumbers>("WHERE CustomerUuid = @0 ", customerUuid);
		}


        #endregion Methods - Generated 
    }
}



