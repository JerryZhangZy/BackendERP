
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderShipmentShippedItem SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class OrderShipmentShippedItemHelper
    {
        public static readonly string TableName = "OrderShipmentShippedItem";
        public static readonly string TableAllies = "shpl";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string OrderShipmentShippedItemNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.OrderShipmentShippedItemNum AS {name ?? "OrderShipmentShippedItemNum"} ";
        public static string DatabaseNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DatabaseNum AS {name ?? "DatabaseNum"} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum"} ";
        public static string ProfileNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum"} ";
        public static string ChannelNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ChannelNum AS {name ?? "ChannelNum"} ";
        public static string ChannelAccountNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ChannelAccountNum AS {name ?? "ChannelAccountNum"} ";
        public static string OrderShipmentNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.OrderShipmentNum AS {name ?? "OrderShipmentNum"} ";
        public static string OrderShipmentPackageNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.OrderShipmentPackageNum AS {name ?? "OrderShipmentPackageNum"} ";
        public static string ChannelOrderID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ChannelOrderID) AS {name ?? "ChannelOrderID"} ";
        public static string OrderDCAssignmentLineNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.OrderDCAssignmentLineNum AS {name ?? "OrderDCAssignmentLineNum"} ";
        public static string SKU(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.SKU) AS {name ?? "SKU"} ";
        public static string ShippedQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShippedQty AS {name ?? "ShippedQty"} ";
        public static string DBChannelOrderLineRowID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.DBChannelOrderLineRowID) AS {name ?? "DBChannelOrderLineRowID"} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc"} ";
        public static string OrderShipmentUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.OrderShipmentUuid) AS {name ?? "OrderShipmentUuid"} ";
        public static string OrderShipmentPackageUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.OrderShipmentPackageUuid) AS {name ?? "OrderShipmentPackageUuid"} ";
        public static string OrderShipmentShippedItemUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.OrderShipmentShippedItemUuid) AS {name ?? "OrderShipmentShippedItemUuid"} ";
        public static string RowNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum"} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid"} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}OrderShipmentShippedItemNum AS OrderShipmentShippedItemNum,
{allies}DatabaseNum AS DatabaseNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
{allies}ChannelNum AS ChannelNum,
{allies}ChannelAccountNum AS ChannelAccountNum,
{allies}OrderShipmentNum AS OrderShipmentNum,
{allies}OrderShipmentPackageNum AS OrderShipmentPackageNum,
RTRIM({allies}ChannelOrderID) AS ChannelOrderID,
{allies}OrderDCAssignmentLineNum AS OrderDCAssignmentLineNum,
RTRIM({allies}SKU) AS SKU,
{allies}ShippedQty AS ShippedQty,
RTRIM({allies}DBChannelOrderLineRowID) AS DBChannelOrderLineRowID,
{allies}EnterDateUtc AS EnterDateUtc,
RTRIM({allies}OrderShipmentUuid) AS OrderShipmentUuid,
RTRIM({allies}OrderShipmentPackageUuid) AS OrderShipmentPackageUuid,
RTRIM({allies}OrderShipmentShippedItemUuid) AS OrderShipmentShippedItemUuid,
{allies}RowNum AS RowNum,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

