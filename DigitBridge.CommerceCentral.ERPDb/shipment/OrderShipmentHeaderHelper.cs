
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderShipmentHeader SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class OrderShipmentHeaderHelper
    {
        public static readonly string TableName = "OrderShipmentHeader";
        public static readonly string TableAllies = "shp";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string OrderShipmentNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.OrderShipmentNum AS {name ?? "OrderShipmentNum"} ";
        public static string DatabaseNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DatabaseNum AS {name ?? "DatabaseNum"} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum"} ";
        public static string ProfileNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum"} ";
        public static string ChannelNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ChannelNum AS {name ?? "ChannelNum"} ";
        public static string ChannelAccountNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ChannelAccountNum AS {name ?? "ChannelAccountNum"} ";
        public static string OrderDCAssignmentNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.OrderDCAssignmentNum AS {name ?? "OrderDCAssignmentNum"} ";
        public static string DistributionCenterNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DistributionCenterNum AS {name ?? "DistributionCenterNum"} ";
        public static string CentralOrderNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.CentralOrderNum AS {name ?? "CentralOrderNum"} ";
        public static string ChannelOrderID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ChannelOrderID) AS {name ?? "ChannelOrderID"} ";
        public static string ShipmentID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShipmentID) AS {name ?? "ShipmentID"} ";
        public static string WarehouseID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.WarehouseID) AS {name ?? "WarehouseID"} ";
        public static string ShipmentType(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShipmentType AS {name ?? "ShipmentType"} ";
        public static string ShipmentReferenceID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShipmentReferenceID) AS {name ?? "ShipmentReferenceID"} ";
        public static string ShipmentDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShipmentDateUtc AS {name ?? "ShipmentDateUtc"} ";
        public static string ShippingCarrier(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShippingCarrier) AS {name ?? "ShippingCarrier"} ";
        public static string ShippingClass(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.ShippingClass) AS {name ?? "ShippingClass"} ";
        public static string ShippingCost(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShippingCost AS {name ?? "ShippingCost"} ";
        public static string MainTrackingNumber(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.MainTrackingNumber) AS {name ?? "MainTrackingNumber"} ";
        public static string MainReturnTrackingNumber(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.MainReturnTrackingNumber) AS {name ?? "MainReturnTrackingNumber"} ";
        public static string BillOfLadingID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.BillOfLadingID) AS {name ?? "BillOfLadingID"} ";
        public static string TotalPackages(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TotalPackages AS {name ?? "TotalPackages"} ";
        public static string TotalShippedQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TotalShippedQty AS {name ?? "TotalShippedQty"} ";
        public static string TotalCanceledQty(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TotalCanceledQty AS {name ?? "TotalCanceledQty"} ";
        public static string TotalWeight(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TotalWeight AS {name ?? "TotalWeight"} ";
        public static string TotalVolume(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.TotalVolume AS {name ?? "TotalVolume"} ";
        public static string WeightUnit(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.WeightUnit AS {name ?? "WeightUnit"} ";
        public static string LengthUnit(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.LengthUnit AS {name ?? "LengthUnit"} ";
        public static string VolumeUnit(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.VolumeUnit AS {name ?? "VolumeUnit"} ";
        public static string ShipmentStatus(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ShipmentStatus AS {name ?? "ShipmentStatus"} ";
        public static string DBChannelOrderHeaderRowID(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.DBChannelOrderHeaderRowID) AS {name ?? "DBChannelOrderHeaderRowID"} ";
        public static string ProcessStatus(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ProcessStatus AS {name ?? "ProcessStatus"} ";
        public static string ProcessDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.ProcessDateUtc AS {name ?? "ProcessDateUtc"} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc"} ";
        public static string OrderShipmentUuid(string tableAllies = null, string name = null) => $"RTRIM({tableAllies ?? TableAllies}.OrderShipmentUuid) AS {name ?? "OrderShipmentUuid"} ";
        public static string RowNum(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum"} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid"} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}OrderShipmentNum AS OrderShipmentNum,
{allies}DatabaseNum AS DatabaseNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
{allies}ChannelNum AS ChannelNum,
{allies}ChannelAccountNum AS ChannelAccountNum,
{allies}OrderDCAssignmentNum AS OrderDCAssignmentNum,
{allies}DistributionCenterNum AS DistributionCenterNum,
{allies}CentralOrderNum AS CentralOrderNum,
RTRIM({allies}ChannelOrderID) AS ChannelOrderID,
RTRIM({allies}ShipmentID) AS ShipmentID,
RTRIM({allies}WarehouseID) AS WarehouseID,
{allies}ShipmentType AS ShipmentType,
RTRIM({allies}ShipmentReferenceID) AS ShipmentReferenceID,
{allies}ShipmentDateUtc AS ShipmentDateUtc,
RTRIM({allies}ShippingCarrier) AS ShippingCarrier,
RTRIM({allies}ShippingClass) AS ShippingClass,
{allies}ShippingCost AS ShippingCost,
RTRIM({allies}MainTrackingNumber) AS MainTrackingNumber,
RTRIM({allies}MainReturnTrackingNumber) AS MainReturnTrackingNumber,
RTRIM({allies}BillOfLadingID) AS BillOfLadingID,
{allies}TotalPackages AS TotalPackages,
{allies}TotalShippedQty AS TotalShippedQty,
{allies}TotalCanceledQty AS TotalCanceledQty,
{allies}TotalWeight AS TotalWeight,
{allies}TotalVolume AS TotalVolume,
{allies}WeightUnit AS WeightUnit,
{allies}LengthUnit AS LengthUnit,
{allies}VolumeUnit AS VolumeUnit,
{allies}ShipmentStatus AS ShipmentStatus,
RTRIM({allies}DBChannelOrderHeaderRowID) AS DBChannelOrderHeaderRowID,
{allies}ProcessStatus AS ProcessStatus,
{allies}ProcessDateUtc AS ProcessDateUtc,
{allies}EnterDateUtc AS EnterDateUtc,
RTRIM({allies}OrderShipmentUuid) AS OrderShipmentUuid,
{allies}RowNum AS RowNum,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

