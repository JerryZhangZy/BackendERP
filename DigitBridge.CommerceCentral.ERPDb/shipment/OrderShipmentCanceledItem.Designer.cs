





              

              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderShipmentCanceledItem.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("OrderShipmentCanceledItem")]
    [PrimaryKey("OrderShipmentCanceledItemNum", AutoIncrement = true)]
    [UniqueId("OrderShipmentCanceledItemUuid")]
    [DtoName("OrderShipmentCanceledItemDto")]
    public partial class OrderShipmentCanceledItem : TableRepository<OrderShipmentCanceledItem, long>
    {

        public OrderShipmentCanceledItem() : base() {}
        public OrderShipmentCanceledItem(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
		[ResultColumn(Name = "OrderShipmentCanceledItemNum", IncludeInAutoSelect = IncludeInAutoSelect.Yes)] 
		protected long _orderShipmentCanceledItemNum; 
		[XmlIgnore, IgnoreCompare] 
		public virtual long OrderShipmentCanceledItemNum
		{
			get => _orderShipmentCanceledItemNum;
			set => _orderShipmentCanceledItemNum = value;
		}
		[XmlIgnore, IgnoreCompare] 
		public override long RowNum
		{
			get => OrderShipmentCanceledItemNum.ToLong();
			set => OrderShipmentCanceledItemNum = value.ToLong();
		}
		[JsonIgnore, XmlIgnore, IgnoreCompare] 
		public override bool IsNew => OrderShipmentCanceledItemNum <= 0; 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("ChannelNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelNum;

        [Column("ChannelAccountNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelAccountNum;

        [Column("OrderShipmentNum",SqlDbType.BigInt,IsDefault=true)]
        private long? _orderShipmentNum;

        [Column("ChannelOrderID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _channelOrderID;

        [Column("OrderDCAssignmentLineNum",SqlDbType.BigInt,IsDefault=true)]
        private long? _orderDCAssignmentLineNum;

        [Column("SKU",SqlDbType.VarChar,IsDefault=true)]
        private string _sKU;

        [Column("CanceledQty",SqlDbType.Decimal,NotNull=true)]
        private decimal _canceledQty;

        [Column("CancelCode",SqlDbType.VarChar,NotNull=true)]
        private string _cancelCode;

        [Column("CancelOtherReason",SqlDbType.NVarChar)]
        private string _cancelOtherReason;

        [Column("DBChannelOrderLineRowID",SqlDbType.VarChar,NotNull=true)]
        private string _dBChannelOrderLineRowID;

        [Column("OrderShipmentUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _orderShipmentUuid;

        [Column("OrderShipmentCanceledItemUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _orderShipmentCanceledItemUuid;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => OrderShipmentCanceledItemUuid; 
		public void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(OrderShipmentCanceledItemUuid)) 
				OrderShipmentCanceledItemUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
        public virtual int ChannelNum
        {
            get
            {
				return _channelNum; 
            }
            set
            {
				_channelNum = value; 
				OnPropertyChanged("ChannelNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The unique number of this profileâ€™s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
        public virtual int ChannelAccountNum
        {
            get
            {
				return _channelAccountNum; 
            }
            set
            {
				_channelAccountNum = value; 
				OnPropertyChanged("ChannelAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Shipment Unique Number. Required, <br> Title: Shipment Number Display: true, Editable: false.
		/// </summary>
        public virtual long? OrderShipmentNum
        {
            get
            {
				if (!AllowNull && _orderShipmentNum is null) 
					_orderShipmentNum = default(long); 
				return _orderShipmentNum; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_orderShipmentNum = value; 
					OnPropertyChanged("OrderShipmentNum", value);
				}
            }
        }

		/// <summary>
		/// (Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false
		/// </summary>
        public virtual string ChannelOrderID
        {
            get
            {
				return _channelOrderID?.TrimEnd(); 
            }
            set
            {
				_channelOrderID = value.TruncateTo(130); 
				OnPropertyChanged("ChannelOrderID", value);
            }
        }

		/// <summary>
		/// (Readonly) The unique number of Order DC Assignment. <br> Title: Assignment Number: Display: true, Editable: false
		/// </summary>
        public virtual long? OrderDCAssignmentLineNum
        {
            get
            {
				if (!AllowNull && _orderDCAssignmentLineNum is null) 
					_orderDCAssignmentLineNum = default(long); 
				return _orderDCAssignmentLineNum; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_orderDCAssignmentLineNum = value; 
					OnPropertyChanged("OrderDCAssignmentLineNum", value);
				}
            }
        }

		/// <summary>
		/// Product SKU. <br> Title: Sku, Display: true, Editable: false
		/// </summary>
        public virtual string SKU
        {
            get
            {
				if (!AllowNull && _sKU is null) 
					_sKU = String.Empty; 
				return _sKU?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_sKU = value.TruncateTo(100); 
					OnPropertyChanged("SKU", value);
				}
            }
        }

		/// <summary>
		/// Canceled Qty. <br> Title: Canceled Qty, Display: true, Editable: true
		/// </summary>
        public virtual decimal CanceledQty
        {
            get
            {
				return _canceledQty; 
            }
            set
            {
				_canceledQty = value; 
				OnPropertyChanged("CanceledQty", value);
            }
        }

		/// <summary>
		/// Cancel code. <br> Title: Cancel Code, Display: true, Editable: true
		/// </summary>
        public virtual string CancelCode
        {
            get
            {
				return _cancelCode?.TrimEnd(); 
            }
            set
            {
				_cancelCode = value.TruncateTo(50); 
				OnPropertyChanged("CancelCode", value);
            }
        }

		/// <summary>
		/// Cancel Reason. <br> Title: Cancel Reason, Display: true, Editable: true
		/// </summary>
        public virtual string CancelOtherReason
        {
            get
            {
				if (!AllowNull && _cancelOtherReason is null) 
					_cancelOtherReason = String.Empty; 
				return _cancelOtherReason?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_cancelOtherReason = value.TruncateTo(200); 
					OnPropertyChanged("CancelOtherReason", value);
				}
            }
        }

		/// <summary>
		/// (Ignore)
		/// </summary>
        public virtual string DBChannelOrderLineRowID
        {
            get
            {
				return _dBChannelOrderLineRowID?.TrimEnd(); 
            }
            set
            {
				_dBChannelOrderLineRowID = value.TruncateTo(50); 
				OnPropertyChanged("DBChannelOrderLineRowID", value);
            }
        }

		/// <summary>
		/// Shipment uuid. <br> Display: false, Editable: false.
		/// </summary>
        public virtual string OrderShipmentUuid
        {
            get
            {
				return _orderShipmentUuid?.TrimEnd(); 
            }
            set
            {
				_orderShipmentUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderShipmentUuid", value);
            }
        }

		/// <summary>
		/// Shipment Canceled Item uuid. <br> Display: false, Editable: false.
		/// </summary>
        public virtual string OrderShipmentCanceledItemUuid
        {
            get
            {
				return _orderShipmentCanceledItemUuid?.TrimEnd(); 
            }
            set
            {
				_orderShipmentCanceledItemUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderShipmentCanceledItemUuid", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private OrderShipmentData Parent { get; set; }
		public OrderShipmentData GetParent() => Parent;
		public OrderShipmentCanceledItem SetParent(OrderShipmentData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			OrderShipmentCanceledItemUuid = Guid.NewGuid().ToString(); 
			_orderShipmentCanceledItemNum = 0; 
            return;
        }

        public override OrderShipmentCanceledItem Clear()
        {
            base.Clear();
			_orderShipmentCanceledItemNum = default(long); 
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_channelNum = default(int); 
			_channelAccountNum = default(int); 
			_orderShipmentNum = AllowNull ? (long?)null : default(long); 
			_channelOrderID = String.Empty; 
			_orderDCAssignmentLineNum = AllowNull ? (long?)null : default(long); 
			_sKU = AllowNull ? (string)null : String.Empty; 
			_canceledQty = default(decimal); 
			_cancelCode = String.Empty; 
			_cancelOtherReason = AllowNull ? (string)null : String.Empty; 
			_dBChannelOrderLineRowID = String.Empty; 
			_orderShipmentUuid = String.Empty; 
			_orderShipmentCanceledItemUuid = String.Empty; 
            ClearChildren();
            return this;
        }

        public virtual OrderShipmentCanceledItem CheckIntegrity()
        {
            return this;
        }

        public virtual OrderShipmentCanceledItem ClearChildren()
        {
            return this;
        }

        public virtual OrderShipmentCanceledItem NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(OrderShipmentCanceledItem data)
        {
            if (data is null) return;
            return;
        }

		public static IList<OrderShipmentCanceledItem> FindByOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return dbFactory.Find<OrderShipmentCanceledItem>("WHERE OrderShipmentUuid = @0 ORDER BY OrderShipmentCanceledItemNum ", orderShipmentUuid).ToList();
		}
		public static long CountByOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return dbFactory.Count<OrderShipmentCanceledItem>("WHERE OrderShipmentUuid = @0 ", orderShipmentUuid);
		}
		public static async Task<IList<OrderShipmentCanceledItem>> FindByAsyncOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return (await dbFactory.FindAsync<OrderShipmentCanceledItem>("WHERE OrderShipmentUuid = @0 ORDER BY OrderShipmentCanceledItemNum ", orderShipmentUuid)).ToList();
		}
		public static async Task<long> CountByAsyncOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return await dbFactory.CountAsync<OrderShipmentCanceledItem>("WHERE OrderShipmentUuid = @0 ", orderShipmentUuid);
		}


        #endregion Methods - Generated 
    }
}



