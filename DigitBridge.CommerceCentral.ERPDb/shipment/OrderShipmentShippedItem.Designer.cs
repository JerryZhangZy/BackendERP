
              

              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderShipmentShippedItem.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("OrderShipmentShippedItem")]
    [PrimaryKey("OrderShipmentShippedItemNum", AutoIncrement = true)]
    [UniqueId("OrderShipmentShippedItemUuid")]
    [DtoName("OrderShipmentShippedItemDto")]
    public partial class OrderShipmentShippedItem : TableRepository<OrderShipmentShippedItem, long>
    {

        public OrderShipmentShippedItem() : base() {}
        public OrderShipmentShippedItem(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
		[ResultColumn(Name = "OrderShipmentShippedItemNum", IncludeInAutoSelect = IncludeInAutoSelect.Yes)] 
		protected long _orderShipmentShippedItemNum; 
		[XmlIgnore, IgnoreCompare] 
		public virtual long OrderShipmentShippedItemNum
		{
			get => _orderShipmentShippedItemNum;
			set => _orderShipmentShippedItemNum = value;
		}
		[XmlIgnore, IgnoreCompare] 
		public override long RowNum
		{
			get => OrderShipmentShippedItemNum.ToLong();
			set => OrderShipmentShippedItemNum = value.ToLong();
		}
		[JsonIgnore, XmlIgnore, IgnoreCompare] 
		public override bool IsNew => OrderShipmentShippedItemNum <= 0; 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("ChannelNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelNum;

        [Column("ChannelAccountNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelAccountNum;

        [Column("OrderShipmentNum",SqlDbType.BigInt,IsDefault=true)]
        private long? _orderShipmentNum;

        [Column("OrderShipmentPackageNum",SqlDbType.BigInt,IsDefault=true)]
        private long? _orderShipmentPackageNum;

        [Column("ChannelOrderID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _channelOrderID;

        [Column("OrderDCAssignmentLineNum",SqlDbType.BigInt,IsDefault=true)]
        private long? _orderDCAssignmentLineNum;

        [Column("SKU",SqlDbType.VarChar,IsDefault=true)]
        private string _sKU;

        [Column("ShippedQty",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _shippedQty;

        [Column("DBChannelOrderLineRowID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _dBChannelOrderLineRowID;

        [Column("OrderShipmentUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _orderShipmentUuid;

        [Column("OrderShipmentPackageUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _orderShipmentPackageUuid;

        [Column("OrderShipmentShippedItemUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _orderShipmentShippedItemUuid;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => OrderShipmentShippedItemUuid; 
		public void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(OrderShipmentShippedItemUuid)) 
				OrderShipmentShippedItemUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
        public virtual int ChannelNum
        {
            get
            {
				return _channelNum; 
            }
            set
            {
				_channelNum = value; 
				OnPropertyChanged("ChannelNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The unique number of this profileâ€™s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
        public virtual int ChannelAccountNum
        {
            get
            {
				return _channelAccountNum; 
            }
            set
            {
				_channelAccountNum = value; 
				OnPropertyChanged("ChannelAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Shipment Unique Number. Required, <br> Title: Shipment Number Display: true, Editable: false.
		/// </summary>
        public virtual long? OrderShipmentNum
        {
            get
            {
				if (!AllowNull && _orderShipmentNum is null) 
					_orderShipmentNum = default(long); 
				return _orderShipmentNum; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_orderShipmentNum = value; 
					OnPropertyChanged("OrderShipmentNum", value);
				}
            }
        }

		/// <summary>
		/// (Readonly) Shipment Package Unique Number. Required, <br> Title: Package Number, Display: true, Editable: false.
		/// </summary>
        public virtual long? OrderShipmentPackageNum
        {
            get
            {
				if (!AllowNull && _orderShipmentPackageNum is null) 
					_orderShipmentPackageNum = default(long); 
				return _orderShipmentPackageNum; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_orderShipmentPackageNum = value; 
					OnPropertyChanged("OrderShipmentPackageNum", value);
				}
            }
        }

		/// <summary>
		/// (Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false
		/// </summary>
        public virtual string ChannelOrderID
        {
            get
            {
				return _channelOrderID?.TrimEnd(); 
            }
            set
            {
				_channelOrderID = value.TruncateTo(130); 
				OnPropertyChanged("ChannelOrderID", value);
            }
        }

		/// <summary>
		/// (Readonly) The unique number of Order DC Assignment. <br> Title: Assignment Number: Display: true, Editable: false
		/// </summary>
        public virtual long? OrderDCAssignmentLineNum
        {
            get
            {
				if (!AllowNull && _orderDCAssignmentLineNum is null) 
					_orderDCAssignmentLineNum = default(long); 
				return _orderDCAssignmentLineNum; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_orderDCAssignmentLineNum = value; 
					OnPropertyChanged("OrderDCAssignmentLineNum", value);
				}
            }
        }

		/// <summary>
		/// Product SKU. <br> Title: Sku, Display: true, Editable: false
		/// </summary>
        public virtual string SKU
        {
            get
            {
				if (!AllowNull && _sKU is null) 
					_sKU = String.Empty; 
				return _sKU?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_sKU = value.TruncateTo(100); 
					OnPropertyChanged("SKU", value);
				}
            }
        }

		/// <summary>
		/// Shipped Qty. <br> Title: Shipped Qty, Display: true, Editable: true
		/// </summary>
        public virtual decimal ShippedQty
        {
            get
            {
				return _shippedQty; 
            }
            set
            {
				_shippedQty = value; 
				OnPropertyChanged("ShippedQty", value);
            }
        }

		/// <summary>
		/// (Ignore)
		/// </summary>
        public virtual string DBChannelOrderLineRowID
        {
            get
            {
				return _dBChannelOrderLineRowID?.TrimEnd(); 
            }
            set
            {
				_dBChannelOrderLineRowID = value.TruncateTo(50); 
				OnPropertyChanged("DBChannelOrderLineRowID", value);
            }
        }

		/// <summary>
		/// Shipment uuid. <br> Display: false, Editable: false.
		/// </summary>
        public virtual string OrderShipmentUuid
        {
            get
            {
				return _orderShipmentUuid?.TrimEnd(); 
            }
            set
            {
				_orderShipmentUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderShipmentUuid", value);
            }
        }

		/// <summary>
		/// Shipment Pachage uuid. <br> Display: false, Editable: false.
		/// </summary>
        public virtual string OrderShipmentPackageUuid
        {
            get
            {
				return _orderShipmentPackageUuid?.TrimEnd(); 
            }
            set
            {
				_orderShipmentPackageUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderShipmentPackageUuid", value);
            }
        }

		/// <summary>
		/// Shipment Shipped Item uuid. <br> Display: false, Editable: false.
		/// </summary>
        public virtual string OrderShipmentShippedItemUuid
        {
            get
            {
				return _orderShipmentShippedItemUuid?.TrimEnd(); 
            }
            set
            {
				_orderShipmentShippedItemUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderShipmentShippedItemUuid", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private OrderShipmentData Parent { get; set; }
		public OrderShipmentData GetParent() => Parent;
		public OrderShipmentShippedItem SetParent(OrderShipmentData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			OrderShipmentShippedItemUuid = Guid.NewGuid().ToString(); 
			_orderShipmentShippedItemNum = 0; 
            return;
        }

        public override OrderShipmentShippedItem Clear()
        {
            base.Clear();
			_orderShipmentShippedItemNum = default(long); 
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_channelNum = default(int); 
			_channelAccountNum = default(int); 
			_orderShipmentNum = AllowNull ? (long?)null : default(long); 
			_orderShipmentPackageNum = AllowNull ? (long?)null : default(long); 
			_channelOrderID = String.Empty; 
			_orderDCAssignmentLineNum = AllowNull ? (long?)null : default(long); 
			_sKU = AllowNull ? (string)null : String.Empty; 
			_shippedQty = default(decimal); 
			_dBChannelOrderLineRowID = String.Empty; 
			_orderShipmentUuid = String.Empty; 
			_orderShipmentPackageUuid = String.Empty; 
			_orderShipmentShippedItemUuid = String.Empty; 
            ClearChildren();
            return this;
        }

        public virtual OrderShipmentShippedItem ClearChildren()
        {
            return this;
        }

        public virtual OrderShipmentShippedItem NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(OrderShipmentShippedItem data)
        {
            if (data is null) return;
            return;
        }

		public static IList<OrderShipmentShippedItem> FindByOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return dbFactory.Find<OrderShipmentShippedItem>("WHERE OrderShipmentUuid = @0 ORDER BY OrderShipmentShippedItemNum ", orderShipmentUuid).ToList();
		}
		public static long CountByOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return dbFactory.Count<OrderShipmentShippedItem>("WHERE OrderShipmentUuid = @0 ", orderShipmentUuid);
		}
		public static async Task<IList<OrderShipmentShippedItem>> FindByAsyncOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return (await dbFactory.FindAsync<OrderShipmentShippedItem>("WHERE OrderShipmentUuid = @0 ORDER BY OrderShipmentShippedItemNum ", orderShipmentUuid)).ToList();
		}
		public static async Task<long> CountByAsyncOrderShipmentUuid(IDataBaseFactory dbFactory, string orderShipmentUuid)
		{
			return await dbFactory.CountAsync<OrderShipmentShippedItem>("WHERE OrderShipmentUuid = @0 ", orderShipmentUuid);
		}


        #endregion Methods - Generated 
    }
}



