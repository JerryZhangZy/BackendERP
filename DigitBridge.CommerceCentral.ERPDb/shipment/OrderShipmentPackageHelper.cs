




              



              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderShipmentPackage SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you want re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class OrderShipmentPackageHelper
    {
        public static readonly string TableName = "OrderShipmentPackage";
        public static readonly string TableAllies = "shpp";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string OrderShipmentPackageNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.OrderShipmentPackageNum AS {name ?? "OrderShipmentPackageNum".ToCamelCase(camelCase)} ";
        public static string DatabaseNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.DatabaseNum AS {name ?? "DatabaseNum".ToCamelCase(camelCase)} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum".ToCamelCase(camelCase)} ";
        public static string ProfileNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum".ToCamelCase(camelCase)} ";
        public static string ChannelNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ChannelNum AS {name ?? "ChannelNum".ToCamelCase(camelCase)} ";
        public static string ChannelAccountNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ChannelAccountNum AS {name ?? "ChannelAccountNum".ToCamelCase(camelCase)} ";
        public static string OrderShipmentNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.OrderShipmentNum AS {name ?? "OrderShipmentNum".ToCamelCase(camelCase)} ";
        public static string PackageID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PackageID) AS {name ?? "PackageID".ToCamelCase(camelCase)} ";
        public static string PackageType(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageType AS {name ?? "PackageType".ToCamelCase(camelCase)} ";
        public static string PackagePatternNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackagePatternNum AS {name ?? "PackagePatternNum".ToCamelCase(camelCase)} ";
        public static string PackageTrackingNumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PackageTrackingNumber) AS {name ?? "PackageTrackingNumber".ToCamelCase(camelCase)} ";
        public static string PackageReturnTrackingNumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PackageReturnTrackingNumber) AS {name ?? "PackageReturnTrackingNumber".ToCamelCase(camelCase)} ";
        public static string PackageWeight(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageWeight AS {name ?? "PackageWeight".ToCamelCase(camelCase)} ";
        public static string PackageLength(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageLength AS {name ?? "PackageLength".ToCamelCase(camelCase)} ";
        public static string PackageWidth(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageWidth AS {name ?? "PackageWidth".ToCamelCase(camelCase)} ";
        public static string PackageHeight(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageHeight AS {name ?? "PackageHeight".ToCamelCase(camelCase)} ";
        public static string PackageVolume(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageVolume AS {name ?? "PackageVolume".ToCamelCase(camelCase)} ";
        public static string PackageQty(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackageQty AS {name ?? "PackageQty".ToCamelCase(camelCase)} ";
        public static string ParentPackageNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ParentPackageNum AS {name ?? "ParentPackageNum".ToCamelCase(camelCase)} ";
        public static string HasChildPackage(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.HasChildPackage AS {name ?? "HasChildPackage".ToCamelCase(camelCase)} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc".ToCamelCase(camelCase)} ";
        public static string OrderShipmentUuid(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.OrderShipmentUuid) AS {name ?? "OrderShipmentUuid".ToCamelCase(camelCase)} ";
        public static string OrderShipmentPackageUuid(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.OrderShipmentPackageUuid) AS {name ?? "OrderShipmentPackageUuid".ToCamelCase(camelCase)} ";
        public static string RowNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum".ToCamelCase(camelCase)} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid".ToCamelCase(camelCase)} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}OrderShipmentPackageNum AS OrderShipmentPackageNum,
{allies}DatabaseNum AS DatabaseNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
{allies}ChannelNum AS ChannelNum,
{allies}ChannelAccountNum AS ChannelAccountNum,
{allies}OrderShipmentNum AS OrderShipmentNum,
RTRIM({allies}PackageID) AS PackageID,
{allies}PackageType AS PackageType,
{allies}PackagePatternNum AS PackagePatternNum,
RTRIM({allies}PackageTrackingNumber) AS PackageTrackingNumber,
RTRIM({allies}PackageReturnTrackingNumber) AS PackageReturnTrackingNumber,
{allies}PackageWeight AS PackageWeight,
{allies}PackageLength AS PackageLength,
{allies}PackageWidth AS PackageWidth,
{allies}PackageHeight AS PackageHeight,
{allies}PackageVolume AS PackageVolume,
{allies}PackageQty AS PackageQty,
{allies}ParentPackageNum AS ParentPackageNum,
{allies}HasChildPackage AS HasChildPackage,
{allies}EnterDateUtc AS EnterDateUtc,
RTRIM({allies}OrderShipmentUuid) AS OrderShipmentUuid,
RTRIM({allies}OrderShipmentPackageUuid) AS OrderShipmentPackageUuid,
{allies}RowNum AS RowNum,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

