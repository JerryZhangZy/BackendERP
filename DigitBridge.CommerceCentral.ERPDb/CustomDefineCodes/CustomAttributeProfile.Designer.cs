



    

              

              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a CustomAttributeProfile.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("CustomAttributeProfile")]
    [PrimaryKey("AttributeNum", AutoIncrement = true)]
    [UniqueId("AttributeUuid")]
    [DtoName("CustomAttributeProfileDto")]
    public partial class CustomAttributeProfile : TableRepository<CustomAttributeProfile, long>
    {

        public CustomAttributeProfile() : base() {}
        public CustomAttributeProfile(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

		[ResultColumn(Name = "AttributeNum", IncludeInAutoSelect = IncludeInAutoSelect.Yes)] 
		[XmlIgnore] 
		protected long _attributeNum; 
		public override long RowNum => _attributeNum;
		public virtual long AttributeNum => _attributeNum;
        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("AttributeUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _attributeUuid;

        [Column("AttributeFor",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _attributeFor;

        [Column("AttributeName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _attributeName;

        [Column("AttributeType",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _attributeType;

        [Column("AttributeDataType",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _attributeDataType;

        [Column("DefaultValue",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _defaultValue;

        [Column("OptionList",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _optionList;

        [Column("Group1",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _group1;

        [Column("Group2",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _group2;

        [Column("Group3",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _group3;

        [Column("MaxLength",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _maxLength;

        [Column("Searchable",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _searchable;

        [Column("Seq",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _seq;

        [Column("UpdateDateUtc",SqlDbType.DateTime)]
        private DateTime? _updateDateUtc;

        [Column("CreateBy",SqlDbType.NVarChar,IsDefault=true)]
        private string _createBy;

        [Column("UpdateBy",SqlDbType.NVarChar,IsDefault=true)]
        private string _updateBy;

        #endregion Fields - Generated 

        #region Properties - Generated 
		public override string UniqueId => AttributeUuid; 
		public void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(AttributeUuid)) 
				AttributeUuid = Guid.NewGuid().ToString(); 
		}
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

        public virtual string AttributeUuid
        {
            get
            {
				return _attributeUuid?.TrimEnd(); 
            }
            set
            {
				_attributeUuid = value.TruncateTo(50); 
				OnPropertyChanged("AttributeUuid", value);
            }
        }

        public virtual string AttributeFor
        {
            get
            {
				return _attributeFor?.TrimEnd(); 
            }
            set
            {
				_attributeFor = value.TruncateTo(50); 
				OnPropertyChanged("AttributeFor", value);
            }
        }

        public virtual string AttributeName
        {
            get
            {
				return _attributeName?.TrimEnd(); 
            }
            set
            {
				_attributeName = value.TruncateTo(200); 
				OnPropertyChanged("AttributeName", value);
            }
        }

        public virtual int AttributeType
        {
            get
            {
				return _attributeType; 
            }
            set
            {
				_attributeType = value; 
				OnPropertyChanged("AttributeType", value);
            }
        }

        public virtual int AttributeDataType
        {
            get
            {
				return _attributeDataType; 
            }
            set
            {
				_attributeDataType = value; 
				OnPropertyChanged("AttributeDataType", value);
            }
        }

        public virtual string DefaultValue
        {
            get
            {
				return _defaultValue?.TrimEnd(); 
            }
            set
            {
				_defaultValue = value.TruncateTo(200); 
				OnPropertyChanged("DefaultValue", value);
            }
        }

        public virtual string OptionList
        {
            get
            {
				return _optionList?.TrimEnd(); 
            }
            set
            {
				_optionList = value.TrimEnd(); 
				OnPropertyChanged("OptionList", value);
            }
        }

        public virtual string Group1
        {
            get
            {
				return _group1?.TrimEnd(); 
            }
            set
            {
				_group1 = value.TruncateTo(200); 
				OnPropertyChanged("Group1", value);
            }
        }

        public virtual string Group2
        {
            get
            {
				return _group2?.TrimEnd(); 
            }
            set
            {
				_group2 = value.TruncateTo(200); 
				OnPropertyChanged("Group2", value);
            }
        }

        public virtual string Group3
        {
            get
            {
				return _group3?.TrimEnd(); 
            }
            set
            {
				_group3 = value.TruncateTo(200); 
				OnPropertyChanged("Group3", value);
            }
        }

        public virtual int MaxLength
        {
            get
            {
				return _maxLength; 
            }
            set
            {
				_maxLength = value; 
				OnPropertyChanged("MaxLength", value);
            }
        }

        public virtual bool Searchable
        {
            get
            {
				return (_searchable == 1); 
            }
            set
            {
				_searchable = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("Searchable", value);
            }
        }

        public virtual int Seq
        {
            get
            {
				return _seq; 
            }
            set
            {
				_seq = value; 
				OnPropertyChanged("Seq", value);
            }
        }

        public virtual DateTime? UpdateDateUtc
        {
            get
            {
				if (!AllowNull && _updateDateUtc is null) 
					_updateDateUtc = new DateTime().MinValueSql(); 
				return _updateDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_updateDateUtc = (value is null) ? (DateTime?) null : value?.Date.ToSqlSafeValue(); 
					OnPropertyChanged("UpdateDateUtc", value);
				}
            }
        }

        public virtual string CreateBy
        {
            get
            {
				if (!AllowNull && _createBy is null) 
					_createBy = String.Empty; 
				return _createBy?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_createBy = value.TruncateTo(100); 
					OnPropertyChanged("CreateBy", value);
				}
            }
        }

        public virtual string UpdateBy
        {
            get
            {
				if (!AllowNull && _updateBy is null) 
					_updateBy = String.Empty; 
				return _updateBy?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_updateBy = value.TruncateTo(100); 
					OnPropertyChanged("UpdateBy", value);
				}
            }
        }

        #endregion Properties - Generated 

        #region Methods - Parent

        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			AttributeUuid = Guid.NewGuid().ToString(); 
			_attributeNum = 0; 
            return;
        }

        public override CustomAttributeProfile Clear()
        {
			_databaseNum = default(int); 
			_attributeNum = default(long); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_attributeUuid = String.Empty; 
			_attributeFor = String.Empty; 
			_attributeName = String.Empty; 
			_attributeType = default(int); 
			_attributeDataType = default(int); 
			_defaultValue = String.Empty; 
			_optionList = String.Empty; 
			_group1 = String.Empty; 
			_group2 = String.Empty; 
			_group3 = String.Empty; 
			_maxLength = default(int); 
			_searchable = default(byte); 
			_seq = default(int); 
			_updateDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_createBy = AllowNull ? (string)null : String.Empty; 
			_updateBy = AllowNull ? (string)null : String.Empty; 
            ClearChildren();
            return this;
        }

        public virtual CustomAttributeProfile ClearChildren()
        {
            return this;
        }

        public virtual CustomAttributeProfile NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(CustomAttributeProfile data)
        {
            if (data is null) return;
            return;
        }

        #endregion Methods - Generated 
    }
}



