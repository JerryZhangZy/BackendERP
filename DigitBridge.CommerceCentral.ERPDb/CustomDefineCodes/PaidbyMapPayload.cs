    
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using DigitBridge.Base.Utility;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Request and Response payload object
    /// </summary>
    [Serializable()]
    public class PaidbyMapPayload : PayloadBase
    {
        /// <summary>
        /// Delegate function to load request parameter to payload property.
        /// </summary>
        public override IDictionary<string, Action<string>> GetOtherParameters()
        {
            return new Dictionary<string, Action<string>>
            {
                { "PaidbyMapUuids", val => PaidbyMapUuids = val.Split(",").ToList() }
            };
        }


        #region multiple Dto list

        /// <summary>
        /// (Request Parameter) Array of uuid to load multiple PaidbyMap dto data.
        /// </summary>
        [OpenApiPropertyDescription("(Request Parameter) Array of uuid to load multiple PaidbyMap dto data.")]
        public IList<string> PaidbyMapUuids { get; set; } = new List<string>();
        [JsonIgnore] 
        public virtual bool HasPaidbyMapUuids => PaidbyMapUuids != null && PaidbyMapUuids.Count > 0;
        public bool ShouldSerializeSalesOrderUuids() => HasPaidbyMapUuids;

        /// <summary>
        /// (Response Data) Array of PaidbyMap entity object which load by uuid array.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Array of entity object which load by uuid array.")]
        public IList<PaidbyMapDataDto> PaidbyMaps { get; set; }
        [JsonIgnore] public virtual bool HasPaidbyMaps => PaidbyMaps != null && PaidbyMaps.Count > 0;
        public bool ShouldSerializePaidbyMaps() => HasPaidbyMaps;

        #endregion multiple Dto list


        #region single Dto object

        /// <summary>
        /// (Request and Response Data) Single PaidbyMap entity object which load by Number.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Single entity object which load by Number.")]
        public PaidbyMapDataDto PaidbyMap { get; set; }
        [JsonIgnore] public virtual bool HasPaidbyMap => PaidbyMap != null;
        public bool ShouldSerializePaidbyMap() => HasPaidbyMap;

        #endregion single Dto object


        #region list service

        /// <summary>
        /// (Response Data) List result which load filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder PaidbyMapList { get; set; }
        [JsonIgnore] public virtual bool HasPaidbyMapList => PaidbyMapList != null && PaidbyMapList.Length > 0;
        public bool ShouldSerializePaidbyMapList() => HasPaidbyMapList;

        /// <summary>
        /// (Response Data) List result count which load filter and paging.
        /// </summary>
        public int PaidbyMapListCount { get; set; }
        [JsonIgnore] public virtual bool HasPaidbyMapListCount => PaidbyMapListCount > 0;
        public bool ShouldSerializePaidbyMapListCount() => HasPaidbyMapListCount;

        #endregion list service
    }
}

