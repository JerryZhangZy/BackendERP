              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Newtonsoft.Json;
using DigitBridge.CommerceCentral.YoPoco;
using CsvHelper;
using System.IO;
using DigitBridge.Base.Utility;
using System.Dynamic;
using System.Linq;
using DigitBridge.CommerceCentral.ERPDb;
using CsvHelper.Configuration;
using System.Threading.Tasks;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InventoryUpdateIOFormat Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public partial class InventoryUpdateIOFormat : CsvFormat
    {
        public InventoryUpdateIOFormat() : base()
        {
            InitConfig();
			InitInventoryUpdateHeader();
			InitInventoryUpdateItems();
        }

        protected virtual void InitConfig()
        {
            FormatNum = 1;
            FormatName = "InventoryUpdate Deafult Format";
            KeyName = "";
			DefaultKeyName = "InventoryUpdateUuid";
            HasHeaderRecord = true;
        }

    
		protected virtual void InitInventoryUpdateHeader()
		{
			var obj = this.InitParentObject<InventoryUpdateHeaderDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("RowNum", "", idx++, null, false),
				new CsvFormatColumn("InventoryUpdateUuid", "", idx++, null, false),
				new CsvFormatColumn("BatchNumber", "", idx++, null, false),
				new CsvFormatColumn("InventoryUpdateType", "", idx++, null, false),
				new CsvFormatColumn("InventoryUpdateStatus", "", idx++, null, false),
				new CsvFormatColumn("UpdateDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("UpdateTime", "", idx++, FormatType.Time, false),
				new CsvFormatColumn("Processor", "", idx++, null, false),
				new CsvFormatColumn("CustomerUuid", "", idx++, null, false),
				new CsvFormatColumn("CustomerCode", "", idx++, null, false),
				new CsvFormatColumn("CustomerName", "", idx++, null, false),
				new CsvFormatColumn("VendorUuid", "", idx++, null, false),
				new CsvFormatColumn("VendorCode", "", idx++, null, false),
				new CsvFormatColumn("VendorName", "", idx++, null, false),
				new CsvFormatColumn("ReferenceType", "", idx++, null, false),
				new CsvFormatColumn("ReferenceUuid", "", idx++, null, false),
				new CsvFormatColumn("ReferenceNum", "", idx++, null, false),
				new CsvFormatColumn("InventoryUpdateSourceCode", "", idx++, null, false),
				new CsvFormatColumn("UpdateDateUtc", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("EnterBy", "", idx++, null, false),
				new CsvFormatColumn("UpdateBy", "", idx++, null, false),
			};
		}



    
		protected virtual void InitInventoryUpdateItems()
		{
			var obj = this.InitParentObject<InventoryUpdateItemsDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("InventoryUpdateItemsUuid", "", idx++, null, false),
				new CsvFormatColumn("Seq", "", idx++, null, false),
				new CsvFormatColumn("ItemDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("ItemTime", "", idx++, FormatType.Time, false),
				new CsvFormatColumn("SKU", "", idx++, null, false),
				new CsvFormatColumn("ProductUuid", "", idx++, null, false),
				new CsvFormatColumn("InventoryUuid", "", idx++, null, false),
				new CsvFormatColumn("WarehouseUuid", "", idx++, null, false),
				new CsvFormatColumn("WarehouseCode", "", idx++, null, false),
				new CsvFormatColumn("LotNum", "", idx++, null, false),
				new CsvFormatColumn("Description", "", idx++, null, false),
				new CsvFormatColumn("Notes", "", idx++, null, false),
				new CsvFormatColumn("UOM", "", idx++, null, false),
				new CsvFormatColumn("PackType", "", idx++, null, false),
				new CsvFormatColumn("PackQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("UpdatePack", "", idx++, null, false),
				new CsvFormatColumn("CountPack", "", idx++, null, false),
				new CsvFormatColumn("BeforeInstockPack", "", idx++, null, false),
				new CsvFormatColumn("UpdateQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("CountQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("BeforeInstockQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("UnitCost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("AvgCost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("LotCost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("LotInDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("LotExpDate", "", idx++, FormatType.Date, false),
			};
		}



    }
}



