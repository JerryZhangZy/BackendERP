              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InventoryUpdateHeader Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class InventoryUpdateHeaderDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Database Number. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? DatabaseNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDatabaseNum => DatabaseNum != null;

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user account. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? MasterAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMasterAccountNum => MasterAccountNum != null;

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user profile. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? ProfileNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProfileNum => ProfileNum != null;

		/// <summary>
		/// InventoryUpdate uuid. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("InventoryUpdate uuid. <br> Display: false, Editable: false.")]
        [StringLength(50, ErrorMessage = "The InventoryUpdateUuid value cannot exceed 50 characters. ")]
        public string InventoryUpdateUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInventoryUpdateUuid => InventoryUpdateUuid != null;

		/// <summary>
		/// Readable InventoryUpdate number, unique in same database and profile. <br> Parameter should pass ProfileNum-BatchNumber. <br> Title: InventoryUpdate Number, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Readable InventoryUpdate number, unique in same database and profile. <br> Parameter should pass ProfileNum-BatchNumber. <br> Title: InventoryUpdate Number, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The BatchNumber value cannot exceed 50 characters. ")]
        public string BatchNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBatchNumber => BatchNumber != null;

		/// <summary>
		/// InventoryUpdate type (Adjust/Damage/Cycle Count/Physical Count). <br> Title: Type, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("InventoryUpdate type (Adjust/Damage/Cycle Count/Physical Count). <br> Title: Type, Display: true, Editable: true")]
        public int? InventoryUpdateType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInventoryUpdateType => InventoryUpdateType != null;

		/// <summary>
		/// InventoryUpdate status. <br> Title: Status, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("InventoryUpdate status. <br> Title: Status, Display: true, Editable: true")]
        public int? InventoryUpdateStatus { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInventoryUpdateStatus => InventoryUpdateStatus != null;

		/// <summary>
		/// InventoryUpdate date. <br> Title: Date, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("InventoryUpdate date. <br> Title: Date, Display: true, Editable: true")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateDate { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateDate => UpdateDate != null;

		/// <summary>
		/// InventoryUpdate time. <br> Title: Time, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("InventoryUpdate time. <br> Title: Time, Display: true, Editable: true")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateTime { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateTime => UpdateTime != null;

		/// <summary>
		/// InventoryUpdate processor account. <br> Title: Processor, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("InventoryUpdate processor account. <br> Title: Processor, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The Processor value cannot exceed 50 characters. ")]
        public string Processor { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProcessor => Processor != null;

		/// <summary>
		/// (Readonly) Warehouse uuid, warehouse. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Warehouse uuid, warehouse. <br> Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The WarehouseUuid value cannot exceed 50 characters. ")]
        public string WarehouseUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasWarehouseUuid => WarehouseUuid != null;

		/// <summary>
		/// Readable warehouse code, warehouse to update inventory. <br> Title: Warehouse Code, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Readable warehouse code, warehouse to update inventory. <br> Title: Warehouse Code, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The WarehouseCode value cannot exceed 50 characters. ")]
        public string WarehouseCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasWarehouseCode => WarehouseCode != null;

		/// <summary>
		/// Customer uuid, load from customer data. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Customer uuid, load from customer data. <br> Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The CustomerUuid value cannot exceed 50 characters. ")]
        public string CustomerUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerUuid => CustomerUuid != null;

		/// <summary>
		/// Customer number. use DatabaseNum-CustomerCode too load customer data. <br> Title: Customer Number, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Customer number. use DatabaseNum-CustomerCode too load customer data. <br> Title: Customer Number, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The CustomerCode value cannot exceed 50 characters. ")]
        public string CustomerCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerCode => CustomerCode != null;

		/// <summary>
		/// (Readonly) Customer name, load from customer data. <br> Title: Customer Name, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Customer name, load from customer data. <br> Title: Customer Name, Display: true, Editable: false")]
        [StringLength(200, ErrorMessage = "The CustomerName value cannot exceed 200 characters. ")]
        public string CustomerName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerName => CustomerName != null;

		/// <summary>
		/// Vendor uuid, load from Vendor data. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Vendor uuid, load from Vendor data. <br> Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The VendorUuid value cannot exceed 50 characters. ")]
        public string VendorUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorUuid => VendorUuid != null;

		/// <summary>
		/// Vendor number. use DatabaseNum-VendorCode too load Vendor data. <br> Title: Vendor code, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Vendor number. use DatabaseNum-VendorCode too load Vendor data. <br> Title: Vendor code, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The VendorCode value cannot exceed 50 characters. ")]
        public string VendorCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorCode => VendorCode != null;

		/// <summary>
		/// (Readonly) Vendor name, load from Vendor data. <br> Title: Vendor Name, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Vendor name, load from Vendor data. <br> Title: Vendor Name, Display: true, Editable: false")]
        [StringLength(200, ErrorMessage = "The VendorName value cannot exceed 200 characters. ")]
        public string VendorName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorName => VendorName != null;

		/// <summary>
		/// Reference Transaction Type, reference to invoice, P/O. <br> Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Reference Transaction Type, reference to invoice, P/O. <br> Display: true, Editable: true")]
        public int? ReferenceType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReferenceType => ReferenceType != null;

		/// <summary>
		/// Reference Transaction uuid, reference to uuid of invoice, P/O#. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("Reference Transaction uuid, reference to uuid of invoice, P/O#. <br> Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The ReferenceUuid value cannot exceed 50 characters. ")]
        public string ReferenceUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReferenceUuid => ReferenceUuid != null;

		/// <summary>
		/// Reference Transaction number, reference to invoice#, P/O#. <br> Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Reference Transaction number, reference to invoice#, P/O#. <br> Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ReferenceNum value cannot exceed 50 characters. ")]
        public string ReferenceNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReferenceNum => ReferenceNum != null;

		/// <summary>
		/// (Readonly) InventoryUpdate created from other entity number, use to prevent import duplicate InventoryUpdate. <br> Title: Source Number, Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) InventoryUpdate created from other entity number, use to prevent import duplicate InventoryUpdate. <br> Title: Source Number, Display: false, Editable: false")]
        [StringLength(100, ErrorMessage = "The InventoryUpdateSourceCode value cannot exceed 100 characters. ")]
        public string InventoryUpdateSourceCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInventoryUpdateSourceCode => InventoryUpdateSourceCode != null;

		/// <summary>
		/// (Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateDateUtc => UpdateDateUtc != null;

		/// <summary>
		/// (Readonly) User who created this InventoryUpdate. <br> Title: Created By, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) User who created this InventoryUpdate. <br> Title: Created By, Display: true, Editable: false")]
        [StringLength(100, ErrorMessage = "The EnterBy value cannot exceed 100 characters. ")]
        public string EnterBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEnterBy => EnterBy != null;

		/// <summary>
		/// (Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false")]
        [StringLength(100, ErrorMessage = "The UpdateBy value cannot exceed 100 characters. ")]
        public string UpdateBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateBy => UpdateBy != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



