
    
//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using DigitBridge.Base.Utility;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Request and Response payload object
    /// </summary>
    [Serializable()]
    public class InventoryLogPayload : PayloadBase
    {
        /// <summary>
        /// Delegate function to load request parameter to payload property.
        /// </summary>
        public override IDictionary<string, Action<string>> GetOtherParameters()
        {
            return new Dictionary<string, Action<string>>
            {
                { "InventoryLogUuids", val => InventoryLogUuids = val.Split(",").ToList() },
                { "LogUuids", val => LogUuids = val.Split(",").ToList() },
            };
        }

        [JsonIgnore]
        public long BatchNum { get; set; }


        #region multiple Dto list

        /// <summary>
        /// (Request Parameter) Array of uuid to load multiple InventoryLog dto data.
        /// </summary>
        [OpenApiPropertyDescription("(Request Parameter) Array of uuid to load multiple InventoryLog dto data.")]
        public IList<string> InventoryLogUuids { get; set; } = new List<string>();
        [JsonIgnore] 
        public virtual bool HasInventoryLogUuids => InventoryLogUuids != null && InventoryLogUuids.Count > 0;
        public bool ShouldSerializeInventoryLogUuids() => HasInventoryLogUuids;
        /// <summary>
        /// (Request Parameter) Array of uuid to load multiple InventoryLog dto data.
        /// </summary>
        [OpenApiPropertyDescription("(Request Parameter) Array of uuid to load multiple InventoryLog dto data.")]
        public IList<string> LogUuids { get; set; } = new List<string>();
        [JsonIgnore] 
        public virtual bool HasLogUuids => LogUuids != null && LogUuids.Count > 0;
        public bool ShouldSerializeLogUuids() => HasLogUuids;

        /// <summary>
        /// (Response Data) Array of InventoryLog entity object which load by uuid array.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Array of entity object which load by uuid array.")]
        public IList<InventoryLogDataDto> InventoryLogs { get; set; } = new List<InventoryLogDataDto>();
        [JsonIgnore] public virtual bool HasInventoryLogs => InventoryLogs != null && InventoryLogs.Count > 0;
        public bool ShouldSerializeInventoryLogs() => HasInventoryLogs;

        #endregion multiple Dto list


        #region single Dto object

        /// <summary>
        /// (Request and Response Data) Single InventoryLog entity object which load by Number.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Single entity object which load by Number.")]
        public InventoryLogDataDto InventoryLog { get; set; }
        [JsonIgnore] public virtual bool HasInventoryLog => InventoryLog != null;
        public bool ShouldSerializeInventoryLog() => HasInventoryLog;

        #endregion single Dto object


        #region list service

        /// <summary>
        /// (Response Data) List result which load filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder InventoryLogList { get; set; }
        [JsonIgnore] public virtual bool HasInventoryLogList => InventoryLogList != null && InventoryLogList.Length > 0;
        public bool ShouldSerializeInventoryLogList() => HasInventoryLogList;

        /// <summary>
        /// (Response Data) List result count which load filter and paging.
        /// </summary>
        public int InventoryLogListCount { get; set; }
        [JsonIgnore] public virtual bool HasInventoryLogListCount => InventoryLogListCount > 0;
        public bool ShouldSerializeInventoryLogListCount() => HasInventoryLogListCount;

        #endregion list service

        #region summary service 

        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder InventoryLogSummary { get; set; }
        [JsonIgnore] public virtual bool HasInventoryLogSummary => InventoryLogSummary != null;
        public bool ShouldSerializeSalesOrderSummary() => HasInventoryLogSummary;
        #endregion
    }
}

