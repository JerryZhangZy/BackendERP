              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a ProductExt.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("ProductExt")]
    [PrimaryKey("RowNum", AutoIncrement = true)]
    [UniqueId("ProductUuid")]
    [DtoName("ProductExtDto")]
    public partial class ProductExt : TableRepository<ProductExt, long>
    {

        public ProductExt() : base() {}
        public ProductExt(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("ProductUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _productUuid;

        [Column("CentralProductNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _centralProductNum;

        [Column("SKU",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _sku;

        [Column("StyleCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _styleCode;

        [Column("ColorPatternCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _colorPatternCode;

        [Column("SizeType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _sizeType;

        [Column("SizeCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _sizeCode;

        [Column("WidthCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _widthCode;

        [Column("LengthCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _lengthCode;

        [Column("ClassCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _classCode;

        [Column("SubClassCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _subClassCode;

        [Column("DepartmentCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _departmentCode;

        [Column("DivisionCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _divisionCode;

        [Column("OEMCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _oEMCode;

        [Column("AlternateCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _alternateCode;

        [Column("Remark",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _remark;

        [Column("Model",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _model;

        [Column("CatalogPage",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _catalogPage;

        [Column("CategoryCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _categoryCode;

        [Column("GroupCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _groupCode;

        [Column("SubGroupCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _subGroupCode;

        [Column("ProductStatus",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _productStatus;

        [Column("PriceRule",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _priceRule;

        [Column("Stockable",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _stockable;

        [Column("IsAr",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _isAr;

        [Column("IsAp",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _isAp;

        [Column("Taxable",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _taxable;

        [Column("Costable",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _costable;

        [Column("IsProfit",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _isProfit;

        [Column("Release",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _release;

        [Column("Currency",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _currency;

        [Column("UOM",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _uom;

        [Column("QtyPerPallot",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _qtyPerPallot;

        [Column("QtyPerCase",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _qtyPerCase;

        [Column("QtyPerBox",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _qtyPerBox;

        [Column("PackType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _packType;

        [Column("PackQty",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _packQty;

        [Column("DefaultPackType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _defaultPackType;

        [Column("DefaultWarehouseCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _defaultWarehouseCode;

        [Column("DefaultVendorCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _defaultVendorCode;

        [Column("PoSize",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _poSize;

        [Column("MinStock",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _minStock;

        [Column("SalesCost",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _salesCost;

        [Column("LeadTimeDay",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _leadTimeDay;

        [Column("ProductYear",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _productYear;

        [Column("UpdateDateUtc",SqlDbType.DateTime)]
        private DateTime? _updateDateUtc;

        [Column("EnterBy",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _enterBy;

        [Column("UpdateBy",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _updateBy;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => ProductUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(ProductUuid)) 
				ProductUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Product uuid. load from ProductBasic data. <br> Display: false, Editable: false
		/// </summary>
        public virtual string ProductUuid
        {
            get
            {
				return _productUuid?.TrimEnd(); 
            }
            set
            {
				_productUuid = value.TruncateTo(50); 
				OnPropertyChanged("ProductUuid", value);
            }
        }

		/// <summary>
		/// (Readonly) Product Number. load from ProductBasic data. <br> Display: false, Editable: false
		/// </summary>
        public virtual long CentralProductNum
        {
            get
            {
				return _centralProductNum; 
            }
            set
            {
				_centralProductNum = value; 
				OnPropertyChanged("CentralProductNum", value);
            }
        }

		/// <summary>
		/// Product SKU. load from ProductBasic data. <br> Display: false, Editable: false
		/// </summary>
        public virtual string SKU
        {
            get
            {
				return _sku?.TrimEnd(); 
            }
            set
            {
				_sku = value.TruncateTo(100); 
				OnPropertyChanged("SKU", value);
            }
        }

		/// <summary>
		/// Product style code use to group multiple SKU. load from ProductExt data. <br> Title: Style Code, Display: true, Editable: true
		/// </summary>
        public virtual string StyleCode
        {
            get
            {
				return _styleCode?.TrimEnd(); 
            }
            set
            {
				_styleCode = value.TruncateTo(100); 
				OnPropertyChanged("StyleCode", value);
            }
        }

		/// <summary>
		/// Product color and pattern code. <br> Title: Color, Display: true, Editable: true
		/// </summary>
        public virtual string ColorPatternCode
        {
            get
            {
				return _colorPatternCode?.TrimEnd(); 
            }
            set
            {
				_colorPatternCode = value.TruncateTo(50); 
				OnPropertyChanged("ColorPatternCode", value);
            }
        }

		/// <summary>
		/// Product size type. <br> Title: Size Type, Display: true, Editable: true
		/// </summary>
        public virtual string SizeType
        {
            get
            {
				return _sizeType?.TrimEnd(); 
            }
            set
            {
				_sizeType = value.TruncateTo(50); 
				OnPropertyChanged("SizeType", value);
            }
        }

		/// <summary>
		/// Product size code. <br> Title: Size, Display: true, Editable: true
		/// </summary>
        public virtual string SizeCode
        {
            get
            {
				return _sizeCode?.TrimEnd(); 
            }
            set
            {
				_sizeCode = value.TruncateTo(50); 
				OnPropertyChanged("SizeCode", value);
            }
        }

		/// <summary>
		/// Product width code. <br> Title: Width, Display: true, Editable: true
		/// </summary>
        public virtual string WidthCode
        {
            get
            {
				return _widthCode?.TrimEnd(); 
            }
            set
            {
				_widthCode = value.TruncateTo(30); 
				OnPropertyChanged("WidthCode", value);
            }
        }

		/// <summary>
		/// Product length code. <br> Title: Length, Display: true, Editable: true
		/// </summary>
        public virtual string LengthCode
        {
            get
            {
				return _lengthCode?.TrimEnd(); 
            }
            set
            {
				_lengthCode = value.TruncateTo(30); 
				OnPropertyChanged("LengthCode", value);
            }
        }

		/// <summary>
		/// Product class code. <br> Title: Class, Display: true, Editable: true
		/// </summary>
        public virtual string ClassCode
        {
            get
            {
				return _classCode?.TrimEnd(); 
            }
            set
            {
				_classCode = value.TruncateTo(50); 
				OnPropertyChanged("ClassCode", value);
            }
        }

		/// <summary>
		/// Product sub class code. <br> Title: Sub Class, Display: true, Editable: true
		/// </summary>
        public virtual string SubClassCode
        {
            get
            {
				return _subClassCode?.TrimEnd(); 
            }
            set
            {
				_subClassCode = value.TruncateTo(50); 
				OnPropertyChanged("SubClassCode", value);
            }
        }

		/// <summary>
		/// Product department code. <br> Title: Department, Display: true, Editable: true
		/// </summary>
        public virtual string DepartmentCode
        {
            get
            {
				return _departmentCode?.TrimEnd(); 
            }
            set
            {
				_departmentCode = value.TruncateTo(50); 
				OnPropertyChanged("DepartmentCode", value);
            }
        }

		/// <summary>
		/// Product division code. <br> Title: Division, Display: true, Editable: true
		/// </summary>
        public virtual string DivisionCode
        {
            get
            {
				return _divisionCode?.TrimEnd(); 
            }
            set
            {
				_divisionCode = value.TruncateTo(50); 
				OnPropertyChanged("DivisionCode", value);
            }
        }

		/// <summary>
		/// Product OEM code. <br> Title: OEM, Display: true, Editable: true
		/// </summary>
        public virtual string OEMCode
        {
            get
            {
				return _oEMCode?.TrimEnd(); 
            }
            set
            {
				_oEMCode = value.TruncateTo(50); 
				OnPropertyChanged("OEMCode", value);
            }
        }

		/// <summary>
		/// Product alternate number. <br> Title: Alt. Code, Display: true, Editable: true
		/// </summary>
        public virtual string AlternateCode
        {
            get
            {
				return _alternateCode?.TrimEnd(); 
            }
            set
            {
				_alternateCode = value.TruncateTo(50); 
				OnPropertyChanged("AlternateCode", value);
            }
        }

		/// <summary>
		/// Product remark. <br> Title: Remark, Display: true, Editable: true
		/// </summary>
        public virtual string Remark
        {
            get
            {
				return _remark?.TrimEnd(); 
            }
            set
            {
				_remark = value.TruncateTo(50); 
				OnPropertyChanged("Remark", value);
            }
        }

		/// <summary>
		/// Product model. <br> Title: Model, Display: true, Editable: true
		/// </summary>
        public virtual string Model
        {
            get
            {
				return _model?.TrimEnd(); 
            }
            set
            {
				_model = value.TruncateTo(50); 
				OnPropertyChanged("Model", value);
            }
        }

		/// <summary>
		/// Product in page of catalog. <br> Title: Catalog, Display: true, Editable: true
		/// </summary>
        public virtual string CatalogPage
        {
            get
            {
				return _catalogPage?.TrimEnd(); 
            }
            set
            {
				_catalogPage = value.TruncateTo(50); 
				OnPropertyChanged("CatalogPage", value);
            }
        }

		/// <summary>
		/// Product Category. <br> Title: Category, Display: true, Editable: true
		/// </summary>
        public virtual string CategoryCode
        {
            get
            {
				return _categoryCode?.TrimEnd(); 
            }
            set
            {
				_categoryCode = value.TruncateTo(50); 
				OnPropertyChanged("CategoryCode", value);
            }
        }

		/// <summary>
		/// Product Group. <br> Title: Group, Display: true, Editable: true
		/// </summary>
        public virtual string GroupCode
        {
            get
            {
				return _groupCode?.TrimEnd(); 
            }
            set
            {
				_groupCode = value.TruncateTo(50); 
				OnPropertyChanged("GroupCode", value);
            }
        }

		/// <summary>
		/// Product Sub Group. <br> Title: Sub Group, Display: true, Editable: true
		/// </summary>
        public virtual string SubGroupCode
        {
            get
            {
				return _subGroupCode?.TrimEnd(); 
            }
            set
            {
				_subGroupCode = value.TruncateTo(50); 
				OnPropertyChanged("SubGroupCode", value);
            }
        }

		/// <summary>
		/// Product status. <br> Title: Status, Display: true, Editable: true
		/// </summary>
        public virtual int ProductStatus
        {
            get
            {
				return _productStatus; 
            }
            set
            {
				_productStatus = value; 
				OnPropertyChanged("ProductStatus", value);
            }
        }

		/// <summary>
		/// Product Default Price Rule. <br> Title: Price Rule, Display: true, Editable: true
		/// </summary>
        public virtual string PriceRule
        {
            get
            {
				return _priceRule?.TrimEnd(); 
            }
            set
            {
				_priceRule = value.TruncateTo(50); 
				OnPropertyChanged("PriceRule", value);
            }
        }

		/// <summary>
		/// Product need calculate inventory instock qty. <br> Title: Stockable, Display: true, Editable: true
		/// </summary>
        public virtual bool Stockable
        {
            get
            {
				return (_stockable == 1); 
            }
            set
            {
				_stockable = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("Stockable", value);
            }
        }

		/// <summary>
		/// Product need add to Invoice sales amount amount. <br> Title: A/R, Display: true, Editable: true
		/// </summary>
        public virtual bool IsAr
        {
            get
            {
				return (_isAr == 1); 
            }
            set
            {
				_isAr = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("IsAr", value);
            }
        }

		/// <summary>
		/// Product need add to A/P Invoice payable amount. <br> Title: A/P, Display: true, Editable: true
		/// </summary>
        public virtual bool IsAp
        {
            get
            {
				return (_isAp == 1); 
            }
            set
            {
				_isAp = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("IsAp", value);
            }
        }

		/// <summary>
		/// Product need apply tax. <br> Title: Taxable, Display: true, Editable: true
		/// </summary>
        public virtual bool Taxable
        {
            get
            {
				return (_taxable == 1); 
            }
            set
            {
				_taxable = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("Taxable", value);
            }
        }

		/// <summary>
		/// Product need calculate total cost. <br> Title: Apply Cost, Display: true, Editable: true
		/// </summary>
        public virtual bool Costable
        {
            get
            {
				return (_costable == 1); 
            }
            set
            {
				_costable = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("Costable", value);
            }
        }

		/// <summary>
		/// Product need calculate profit. <br> Title: Apply Profit, Display: true, Editable: true
		/// </summary>
        public virtual bool IsProfit
        {
            get
            {
				return (_isProfit == 1); 
            }
            set
            {
				_isProfit = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("IsProfit", value);
            }
        }

		/// <summary>
		/// Product is release to sales
		/// </summary>
        public virtual bool Release
        {
            get
            {
				return (_release == 1); 
            }
            set
            {
				_release = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("Release", value);
            }
        }

		/// <summary>
		/// (Ignore) Inventory price in currency. <br> Title: Currency, Display: false, Editable: false
		/// </summary>
        public virtual string Currency
        {
            get
            {
				return _currency?.TrimEnd(); 
            }
            set
            {
				_currency = value.TruncateTo(10); 
				OnPropertyChanged("Currency", value);
            }
        }

		/// <summary>
		/// Product SKU Qty unit of measure. <br> Title: UOM, Display: true, Editable: true
		/// </summary>
        public virtual string UOM
        {
            get
            {
				return _uom?.TrimEnd(); 
            }
            set
            {
				_uom = value.TruncateTo(50); 
				OnPropertyChanged("UOM", value);
            }
        }

		/// <summary>
		/// Item Qty per Pallot. <br> Title: Qty/Pallot, Display: true, Editable: true
		/// </summary>
        public virtual decimal QtyPerPallot
        {
            get
            {
				return _qtyPerPallot; 
            }
            set
            {
				_qtyPerPallot = value; 
				OnPropertyChanged("QtyPerPallot", value);
            }
        }

		/// <summary>
		/// Item Qty per case. <br> Title: Qty/Case, Display: true, Editable: true
		/// </summary>
        public virtual decimal QtyPerCase
        {
            get
            {
				return _qtyPerCase; 
            }
            set
            {
				_qtyPerCase = value; 
				OnPropertyChanged("QtyPerCase", value);
            }
        }

		/// <summary>
		/// Item Qty per box. <br> Title: Qty/Box, Display: true, Editable: true
		/// </summary>
        public virtual decimal QtyPerBox
        {
            get
            {
				return _qtyPerBox; 
            }
            set
            {
				_qtyPerBox = value; 
				OnPropertyChanged("QtyPerBox", value);
            }
        }

		/// <summary>
		/// Product specified pack type name. <br> Title: Pack Type, Display: true, Editable: true
		/// </summary>
        public virtual string PackType
        {
            get
            {
				return _packType?.TrimEnd(); 
            }
            set
            {
				_packType = value.TruncateTo(50); 
				OnPropertyChanged("PackType", value);
            }
        }

		/// <summary>
		/// Qty per each pack. <br> Title: Qty/Pack, Display: true, Editable: true
		/// </summary>
        public virtual decimal PackQty
        {
            get
            {
				return _packQty; 
            }
            set
            {
				_packQty = value; 
				OnPropertyChanged("PackQty", value);
            }
        }

		/// <summary>
		/// Default pack type in S/O or invoice. <br> Title: Default Pack, Display: true, Editable: true
		/// </summary>
        public virtual string DefaultPackType
        {
            get
            {
				return _defaultPackType?.TrimEnd(); 
            }
            set
            {
				_defaultPackType = value.TruncateTo(50); 
				OnPropertyChanged("DefaultPackType", value);
            }
        }

		/// <summary>
		/// Default Warehouse. <br> Title: Deafult Warehouse, Display: true, Editable: true
		/// </summary>
        public virtual string DefaultWarehouseCode
        {
            get
            {
				return _defaultWarehouseCode?.TrimEnd(); 
            }
            set
            {
				_defaultWarehouseCode = value.TruncateTo(50); 
				OnPropertyChanged("DefaultWarehouseCode", value);
            }
        }

		/// <summary>
		/// Default Vendor code when make P/O. <br> Title: Deafult Warehouse, Display: true, Editable: true
		/// </summary>
        public virtual string DefaultVendorCode
        {
            get
            {
				return _defaultVendorCode?.TrimEnd(); 
            }
            set
            {
				_defaultVendorCode = value.TruncateTo(50); 
				OnPropertyChanged("DefaultVendorCode", value);
            }
        }

		/// <summary>
		/// Default P/O qty. <br> Title: Deafult P/O Qty, Display: true, Editable: true
		/// </summary>
        public virtual decimal PoSize
        {
            get
            {
				return _poSize; 
            }
            set
            {
				_poSize = value; 
				OnPropertyChanged("PoSize", value);
            }
        }

		/// <summary>
		/// Garantee minimal Instock in anytime. <br> Title: Min.Stock, Display: true, Editable: true
		/// </summary>
        public virtual decimal MinStock
        {
            get
            {
				return _minStock; 
            }
            set
            {
				_minStock = value; 
				OnPropertyChanged("MinStock", value);
            }
        }

		/// <summary>
		/// A display cost for sales. <br> Title: Sales Cost, Display: true, Editable: true
		/// </summary>
        public virtual decimal SalesCost
        {
            get
            {
				return _salesCost; 
            }
            set
            {
				_salesCost = value; 
				OnPropertyChanged("SalesCost", value);
            }
        }

		/// <summary>
		/// Processing days before shipping. <br> Title: Leading Days, Display: true, Editable: true
		/// </summary>
        public virtual int LeadTimeDay
        {
            get
            {
				return _leadTimeDay; 
            }
            set
            {
				_leadTimeDay = value; 
				OnPropertyChanged("LeadTimeDay", value);
            }
        }

		/// <summary>
		/// Product year. <br> Title: Year od Product, Display: true, Editable: true
		/// </summary>
        public virtual string ProductYear
        {
            get
            {
				return _productYear?.TrimEnd(); 
            }
            set
            {
				_productYear = value.TruncateTo(50); 
				OnPropertyChanged("ProductYear", value);
            }
        }

		/// <summary>
		/// (Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false
		/// </summary>
        public virtual DateTime? UpdateDateUtc
        {
            get
            {
				if (!AllowNull && _updateDateUtc is null) 
					_updateDateUtc = new DateTime().MinValueSql(); 
				return _updateDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_updateDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("UpdateDateUtc", value);
				}
            }
        }

		/// <summary>
		/// (Readonly) User who created this transaction. <br> Title: Created By, Display: true, Editable: false
		/// </summary>
        public virtual string EnterBy
        {
            get
            {
				return _enterBy?.TrimEnd(); 
            }
            set
            {
				_enterBy = value.TruncateTo(100); 
				OnPropertyChanged("EnterBy", value);
            }
        }

		/// <summary>
		/// (Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false
		/// </summary>
        public virtual string UpdateBy
        {
            get
            {
				return _updateBy?.TrimEnd(); 
            }
            set
            {
				_updateBy = value.TruncateTo(100); 
				OnPropertyChanged("UpdateBy", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private InventoryData Parent { get; set; }
		public InventoryData GetParent() => Parent;
		public ProductExt SetParent(InventoryData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			ProductUuid = Guid.NewGuid().ToString(); 
            return;
        }

        public override ProductExt Clear()
        {
            base.Clear();
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_productUuid = String.Empty; 
			_centralProductNum = default(long); 
			_sku = String.Empty; 
			_styleCode = String.Empty; 
			_colorPatternCode = String.Empty; 
			_sizeType = String.Empty; 
			_sizeCode = String.Empty; 
			_widthCode = String.Empty; 
			_lengthCode = String.Empty; 
			_classCode = String.Empty; 
			_subClassCode = String.Empty; 
			_departmentCode = String.Empty; 
			_divisionCode = String.Empty; 
			_oEMCode = String.Empty; 
			_alternateCode = String.Empty; 
			_remark = String.Empty; 
			_model = String.Empty; 
			_catalogPage = String.Empty; 
			_categoryCode = String.Empty; 
			_groupCode = String.Empty; 
			_subGroupCode = String.Empty; 
			_productStatus = default(int); 
			_priceRule = String.Empty; 
			_stockable = default(byte); 
			_isAr = default(byte); 
			_isAp = default(byte); 
			_taxable = default(byte); 
			_costable = default(byte); 
			_isProfit = default(byte); 
			_release = default(byte); 
			_currency = String.Empty; 
			_uom = String.Empty; 
			_qtyPerPallot = default(decimal); 
			_qtyPerCase = default(decimal); 
			_qtyPerBox = default(decimal); 
			_packType = String.Empty; 
			_packQty = default(decimal); 
			_defaultPackType = String.Empty; 
			_defaultWarehouseCode = String.Empty; 
			_defaultVendorCode = String.Empty; 
			_poSize = default(decimal); 
			_minStock = default(decimal); 
			_salesCost = default(decimal); 
			_leadTimeDay = default(int); 
			_productYear = String.Empty; 
			_updateDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_enterBy = String.Empty; 
			_updateBy = String.Empty; 
            ClearChildren();
            return this;
        }

        public override ProductExt CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual ProductExt ClearChildren()
        {
            return this;
        }

        public virtual ProductExt NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(ProductExt data)
        {
            if (data is null) return;
            return;
        }



        #endregion Methods - Generated 
    }
}



