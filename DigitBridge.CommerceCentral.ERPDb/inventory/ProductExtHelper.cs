




              



              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a ProductExt SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you want re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class ProductExtHelper
    {
        public static readonly string TableName = "ProductExt";
        public static readonly string TableAllies = "prdx";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string RowNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum".ToCamelCase(camelCase)} ";
        public static string DatabaseNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.DatabaseNum AS {name ?? "DatabaseNum".ToCamelCase(camelCase)} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum".ToCamelCase(camelCase)} ";
        public static string ProfileNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum".ToCamelCase(camelCase)} ";
        public static string ProductUuid(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ProductUuid) AS {name ?? "ProductUuid".ToCamelCase(camelCase)} ";
        public static string CentralProductNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.CentralProductNum AS {name ?? "CentralProductNum".ToCamelCase(camelCase)} ";
        public static string SKU(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SKU) AS {name ?? "SKU".ToCamelCase(camelCase)} ";
        public static string StyleCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.StyleCode) AS {name ?? "StyleCode".ToCamelCase(camelCase)} ";
        public static string ColorPatternCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ColorPatternCode) AS {name ?? "ColorPatternCode".ToCamelCase(camelCase)} ";
        public static string SizeType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SizeType) AS {name ?? "SizeType".ToCamelCase(camelCase)} ";
        public static string SizeCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SizeCode) AS {name ?? "SizeCode".ToCamelCase(camelCase)} ";
        public static string WidthCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.WidthCode) AS {name ?? "WidthCode".ToCamelCase(camelCase)} ";
        public static string LengthCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.LengthCode) AS {name ?? "LengthCode".ToCamelCase(camelCase)} ";
        public static string ClassCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ClassCode) AS {name ?? "ClassCode".ToCamelCase(camelCase)} ";
        public static string SubClassCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SubClassCode) AS {name ?? "SubClassCode".ToCamelCase(camelCase)} ";
        public static string DepartmentCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.DepartmentCode) AS {name ?? "DepartmentCode".ToCamelCase(camelCase)} ";
        public static string DivisionCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.DivisionCode) AS {name ?? "DivisionCode".ToCamelCase(camelCase)} ";
        public static string OEMCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.OEMCode) AS {name ?? "OEMCode".ToCamelCase(camelCase)} ";
        public static string AlternateCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.AlternateCode) AS {name ?? "AlternateCode".ToCamelCase(camelCase)} ";
        public static string Remark(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.Remark) AS {name ?? "Remark".ToCamelCase(camelCase)} ";
        public static string Model(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.Model) AS {name ?? "Model".ToCamelCase(camelCase)} ";
        public static string CatalogPage(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CatalogPage) AS {name ?? "CatalogPage".ToCamelCase(camelCase)} ";
        public static string CategoryCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CategoryCode) AS {name ?? "CategoryCode".ToCamelCase(camelCase)} ";
        public static string GroupCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.GroupCode) AS {name ?? "GroupCode".ToCamelCase(camelCase)} ";
        public static string SubGroupCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SubGroupCode) AS {name ?? "SubGroupCode".ToCamelCase(camelCase)} ";
        public static string PriceRule(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PriceRule) AS {name ?? "PriceRule".ToCamelCase(camelCase)} ";
        public static string Stockable(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.Stockable AS {name ?? "Stockable".ToCamelCase(camelCase)} ";
        public static string IsAr(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.IsAr AS {name ?? "IsAr".ToCamelCase(camelCase)} ";
        public static string IsAp(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.IsAp AS {name ?? "IsAp".ToCamelCase(camelCase)} ";
        public static string Taxable(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.Taxable AS {name ?? "Taxable".ToCamelCase(camelCase)} ";
        public static string Costable(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.Costable AS {name ?? "Costable".ToCamelCase(camelCase)} ";
        public static string IsProfit(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.IsProfit AS {name ?? "IsProfit".ToCamelCase(camelCase)} ";
        public static string Release(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.Release AS {name ?? "Release".ToCamelCase(camelCase)} ";
        public static string Currency(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.Currency) AS {name ?? "Currency".ToCamelCase(camelCase)} ";
        public static string UOM(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.UOM) AS {name ?? "UOM".ToCamelCase(camelCase)} ";
        public static string QtyPerPallot(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.QtyPerPallot AS {name ?? "QtyPerPallot".ToCamelCase(camelCase)} ";
        public static string QtyPerCase(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.QtyPerCase AS {name ?? "QtyPerCase".ToCamelCase(camelCase)} ";
        public static string QtyPerBox(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.QtyPerBox AS {name ?? "QtyPerBox".ToCamelCase(camelCase)} ";
        public static string PackType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PackType) AS {name ?? "PackType".ToCamelCase(camelCase)} ";
        public static string PackQty(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PackQty AS {name ?? "PackQty".ToCamelCase(camelCase)} ";
        public static string DefaultPackType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.DefaultPackType) AS {name ?? "DefaultPackType".ToCamelCase(camelCase)} ";
        public static string DefaultWarehouseCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.DefaultWarehouseCode) AS {name ?? "DefaultWarehouseCode".ToCamelCase(camelCase)} ";
        public static string DefaultVendorCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.DefaultVendorCode) AS {name ?? "DefaultVendorCode".ToCamelCase(camelCase)} ";
        public static string PoSize(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PoSize AS {name ?? "PoSize".ToCamelCase(camelCase)} ";
        public static string MinStock(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.MinStock AS {name ?? "MinStock".ToCamelCase(camelCase)} ";
        public static string SalesCost(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.SalesCost AS {name ?? "SalesCost".ToCamelCase(camelCase)} ";
        public static string LeadTimeDay(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.LeadTimeDay AS {name ?? "LeadTimeDay".ToCamelCase(camelCase)} ";
        public static string ProductYear(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ProductYear) AS {name ?? "ProductYear".ToCamelCase(camelCase)} ";
        public static string UpdateDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.UpdateDateUtc AS {name ?? "UpdateDateUtc".ToCamelCase(camelCase)} ";
        public static string EnterBy(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.EnterBy) AS {name ?? "EnterBy".ToCamelCase(camelCase)} ";
        public static string UpdateBy(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.UpdateBy) AS {name ?? "UpdateBy".ToCamelCase(camelCase)} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc".ToCamelCase(camelCase)} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid".ToCamelCase(camelCase)} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}RowNum AS RowNum,
{allies}DatabaseNum AS DatabaseNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
RTRIM({allies}ProductUuid) AS ProductUuid,
{allies}CentralProductNum AS CentralProductNum,
RTRIM({allies}SKU) AS SKU,
RTRIM({allies}StyleCode) AS StyleCode,
RTRIM({allies}ColorPatternCode) AS ColorPatternCode,
RTRIM({allies}SizeType) AS SizeType,
RTRIM({allies}SizeCode) AS SizeCode,
RTRIM({allies}WidthCode) AS WidthCode,
RTRIM({allies}LengthCode) AS LengthCode,
RTRIM({allies}ClassCode) AS ClassCode,
RTRIM({allies}SubClassCode) AS SubClassCode,
RTRIM({allies}DepartmentCode) AS DepartmentCode,
RTRIM({allies}DivisionCode) AS DivisionCode,
RTRIM({allies}OEMCode) AS OEMCode,
RTRIM({allies}AlternateCode) AS AlternateCode,
RTRIM({allies}Remark) AS Remark,
RTRIM({allies}Model) AS Model,
RTRIM({allies}CatalogPage) AS CatalogPage,
RTRIM({allies}CategoryCode) AS CategoryCode,
RTRIM({allies}GroupCode) AS GroupCode,
RTRIM({allies}SubGroupCode) AS SubGroupCode,
RTRIM({allies}PriceRule) AS PriceRule,
{allies}Stockable AS Stockable,
{allies}IsAr AS IsAr,
{allies}IsAp AS IsAp,
{allies}Taxable AS Taxable,
{allies}Costable AS Costable,
{allies}IsProfit AS IsProfit,
{allies}Release AS Release,
RTRIM({allies}Currency) AS Currency,
RTRIM({allies}UOM) AS UOM,
{allies}QtyPerPallot AS QtyPerPallot,
{allies}QtyPerCase AS QtyPerCase,
{allies}QtyPerBox AS QtyPerBox,
RTRIM({allies}PackType) AS PackType,
{allies}PackQty AS PackQty,
RTRIM({allies}DefaultPackType) AS DefaultPackType,
RTRIM({allies}DefaultWarehouseCode) AS DefaultWarehouseCode,
RTRIM({allies}DefaultVendorCode) AS DefaultVendorCode,
{allies}PoSize AS PoSize,
{allies}MinStock AS MinStock,
{allies}SalesCost AS SalesCost,
{allies}LeadTimeDay AS LeadTimeDay,
RTRIM({allies}ProductYear) AS ProductYear,
{allies}UpdateDateUtc AS UpdateDateUtc,
RTRIM({allies}EnterBy) AS EnterBy,
RTRIM({allies}UpdateBy) AS UpdateBy,
{allies}EnterDateUtc AS EnterDateUtc,
{allies}DigitBridgeGuid AS DigitBridgeGuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

