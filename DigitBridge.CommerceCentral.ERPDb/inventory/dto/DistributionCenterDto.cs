
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a DistributionCenter Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class DistributionCenterDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Database Number. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? DatabaseNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDatabaseNum => DatabaseNum != null;

		/// <summary>
		/// (Readonly) Distribution Center Unique Number. Required, <br> Title: Dc Number, Display: true, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Distribution Center Unique Number. Required, <br> Title: Dc Number, Display: true, Editable: false.")]
        public int? DistributionCenterNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterNum => DistributionCenterNum != null;

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user account. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? MasterAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMasterAccountNum => MasterAccountNum != null;

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user profile. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? ProfileNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProfileNum => ProfileNum != null;

		/// <summary>
		/// Distribution Center name. Required. <br> Title: Name, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Distribution Center name. Required. <br> Title: Name, Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The DistributionCenterName value cannot exceed 200 characters. ")]
        public string DistributionCenterName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterName => DistributionCenterName != null;

		/// <summary>
		/// Distribution Center code. Required. <br> Title: Code, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Distribution Center code. Required. <br> Title: Code, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The DistributionCenterCode value cannot exceed 50 characters. ")]
        public string DistributionCenterCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterCode => DistributionCenterCode != null;

		/// <summary>
		/// Distribution Center type. Required. <br> Title: Type, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Distribution Center type. Required. <br> Title: Type, Display: true, Editable: true")]
        public int? DistributionCenterType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterType => DistributionCenterType != null;

		/// <summary>
		/// Distribution Center status. Required. <br> Title: Status, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Distribution Center status. Required. <br> Title: Status, Display: true, Editable: true")]
        public int? Status { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasStatus => Status != null;

		/// <summary>
		/// Distribution Center level. Required. <br> Title: level, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Distribution Center level. Required. <br> Title: level, Display: true, Editable: true")]
        public bool? DefaultLevel { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDefaultLevel => DefaultLevel != null;

		/// <summary>
		/// Address 1. <br> Title: Address 1, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Address 1. <br> Title: Address 1, Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The AddressLine1 value cannot exceed 200 characters. ")]
        public string AddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasAddressLine1 => AddressLine1 != null;

		/// <summary>
		/// Address 2. <br> Title: Address 2, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Address 2. <br> Title: Address 2, Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The AddressLine2 value cannot exceed 200 characters. ")]
        public string AddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasAddressLine2 => AddressLine2 != null;

		/// <summary>
		/// City. <br> Title: City, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("City. <br> Title: City, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The City value cannot exceed 50 characters. ")]
        public string City { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCity => City != null;

		/// <summary>
		/// State. <br> Title: State, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("State. <br> Title: State, Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The State value cannot exceed 100 characters. ")]
        public string State { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasState => State != null;

		/// <summary>
		/// Zip Code. <br> Title: Zip, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Zip Code. <br> Title: Zip, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ZipCode value cannot exceed 50 characters. ")]
        public string ZipCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasZipCode => ZipCode != null;

		/// <summary>
		/// Company Name. <br> Title: Company, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Company Name. <br> Title: Company, Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The CompanyName value cannot exceed 200 characters. ")]
        public string CompanyName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCompanyName => CompanyName != null;

		/// <summary>
		/// Contact person. <br> Title: Attn, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Contact person. <br> Title: Attn, Display: true, Editable: true")]
        [StringLength(200, ErrorMessage = "The ContactName value cannot exceed 200 characters. ")]
        public string ContactName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasContactName => ContactName != null;

		/// <summary>
		/// Contact Email. <br> Title: Email, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Contact Email. <br> Title: Email, Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The ContactEmail value cannot exceed 100 characters. ")]
        public string ContactEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasContactEmail => ContactEmail != null;

		/// <summary>
		/// Contact Phone. <br> Title: Phone 2, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Contact Phone. <br> Title: Phone 2, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The ContactPhone value cannot exceed 50 characters. ")]
        public string ContactPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasContactPhone => ContactPhone != null;

		/// <summary>
		/// Main Phone. <br> Title: Phone 1, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Main Phone. <br> Title: Phone 1, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The MainPhone value cannot exceed 50 characters. ")]
        public string MainPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMainPhone => MainPhone != null;

		/// <summary>
		/// Fax. <br> Title: Fax, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Fax. <br> Title: Fax, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The Fax value cannot exceed 50 characters. ")]
        public string Fax { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFax => Fax != null;

		/// <summary>
		/// Website. <br> Title: Website, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Website. <br> Title: Website, Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The Website value cannot exceed 100 characters. ")]
        public string Website { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasWebsite => Website != null;

		/// <summary>
		/// Email. <br> Title: Email 2, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Email. <br> Title: Email 2, Display: true, Editable: true")]
        [StringLength(100, ErrorMessage = "The Email value cannot exceed 100 characters. ")]
        public string Email { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEmail => Email != null;

		/// <summary>
		/// BusinessHours. <br> Title: Business Hours, Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("BusinessHours. <br> Title: Business Hours, Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The BusinessHours value cannot exceed 50 characters. ")]
        public string BusinessHours { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBusinessHours => BusinessHours != null;

		/// <summary>
		/// Notes. <br> Title: Notes, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Notes. <br> Title: Notes, Display: true, Editable: true")]
        public string Notes { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasNotes => Notes != null;

		/// <summary>
		/// Priority. <br> Title: Priority, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Priority. <br> Title: Priority, Display: true, Editable: true")]
        public int? Priority { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPriority => Priority != null;

		/// <summary>
		/// (Readonly) Product uuid. load from ProductBasic data. <br> Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Product uuid. load from ProductBasic data. <br> Display: false, Editable: false")]
        [StringLength(50, ErrorMessage = "The DistributionCenterUuid value cannot exceed 50 characters. ")]
        public string DistributionCenterUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterUuid => DistributionCenterUuid != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



