

              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a DistributionCenter.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("DistributionCenter")]
    [PrimaryKey("DistributionCenterNum", AutoIncrement = true)]
    [UniqueId("DistributionCenterUuid")]
    [DtoName("DistributionCenterDto")]
    public partial class DistributionCenter : TableRepository<DistributionCenter, long>
    {

        public DistributionCenter() : base() {}
        public DistributionCenter(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

		[ResultColumn(Name = "DistributionCenterNum", IncludeInAutoSelect = IncludeInAutoSelect.Yes)] 
		protected long _distributionCenterNum; 
		[XmlIgnore, IgnoreCompare] 
		public virtual long DistributionCenterNum
		{
			get => _distributionCenterNum;
			set => _distributionCenterNum = value;
		}
		[XmlIgnore, IgnoreCompare] 
		public override long RowNum
		{
			get => DistributionCenterNum.ToLong();
			set => DistributionCenterNum = value.ToLong();
		}
		[JsonIgnore, XmlIgnore, IgnoreCompare] 
		public override bool IsNew => DistributionCenterNum <= 0; 
        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("DistributionCenterName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _distributionCenterName;

        [Column("DistributionCenterCode",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _distributionCenterCode;

        [Column("DistributionCenterType",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _distributionCenterType;

        [Column("Status",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _status;

        [Column("DefaultLevel",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _defaultLevel;

        [Column("AddressLine1",SqlDbType.NVarChar)]
        private string _addressLine1;

        [Column("AddressLine2",SqlDbType.NVarChar)]
        private string _addressLine2;

        [Column("City",SqlDbType.NVarChar)]
        private string _city;

        [Column("State",SqlDbType.NVarChar)]
        private string _state;

        [Column("ZipCode",SqlDbType.NVarChar)]
        private string _zipCode;

        [Column("CompanyName",SqlDbType.NVarChar)]
        private string _companyName;

        [Column("ContactName",SqlDbType.NVarChar)]
        private string _contactName;

        [Column("ContactEmail",SqlDbType.NVarChar)]
        private string _contactEmail;

        [Column("ContactPhone",SqlDbType.VarChar)]
        private string _contactPhone;

        [Column("MainPhone",SqlDbType.VarChar)]
        private string _mainPhone;

        [Column("Fax",SqlDbType.VarChar)]
        private string _fax;

        [Column("Website",SqlDbType.NVarChar)]
        private string _website;

        [Column("Email",SqlDbType.NVarChar)]
        private string _email;

        [Column("BusinessHours",SqlDbType.NVarChar)]
        private string _businessHours;

        [Column("Notes",SqlDbType.NVarChar)]
        private string _notes;

        [Column("Priority",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _priority;

        [Column("DistributionCenterUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _distributionCenterUuid;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => DistributionCenterUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(DistributionCenterUuid)) 
				DistributionCenterUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// Distribution Center name. Required. <br> Title: Name, Display: true, Editable: true
		/// </summary>
        public virtual string DistributionCenterName
        {
            get
            {
				return _distributionCenterName?.TrimEnd(); 
            }
            set
            {
				_distributionCenterName = value.TruncateTo(200); 
				OnPropertyChanged("DistributionCenterName", value);
            }
        }

		/// <summary>
		/// Distribution Center code. Required. <br> Title: Code, Display: true, Editable: true
		/// </summary>
        public virtual string DistributionCenterCode
        {
            get
            {
				return _distributionCenterCode?.TrimEnd(); 
            }
            set
            {
				_distributionCenterCode = value.TruncateTo(50); 
				OnPropertyChanged("DistributionCenterCode", value);
            }
        }

		/// <summary>
		/// Distribution Center type. Required. <br> Title: Type, Display: true, Editable: true
		/// </summary>
        public virtual int DistributionCenterType
        {
            get
            {
				return _distributionCenterType; 
            }
            set
            {
				_distributionCenterType = value; 
				OnPropertyChanged("DistributionCenterType", value);
            }
        }

		/// <summary>
		/// Distribution Center status. Required. <br> Title: Status, Display: true, Editable: true
		/// </summary>
        public virtual int Status
        {
            get
            {
				return _status; 
            }
            set
            {
				_status = value; 
				OnPropertyChanged("Status", value);
            }
        }

		/// <summary>
		/// Distribution Center level. Required. <br> Title: level, Display: true, Editable: true
		/// </summary>
        public virtual bool DefaultLevel
        {
            get
            {
				return (_defaultLevel == 1); 
            }
            set
            {
				_defaultLevel = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("DefaultLevel", value);
            }
        }

		/// <summary>
		/// Address 1. <br> Title: Address 1, Display: true, Editable: true
		/// </summary>
        public virtual string AddressLine1
        {
            get
            {
				if (!AllowNull && _addressLine1 is null) 
					_addressLine1 = String.Empty; 
				return _addressLine1?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_addressLine1 = value.TruncateTo(200); 
					OnPropertyChanged("AddressLine1", value);
				}
            }
        }

		/// <summary>
		/// Address 2. <br> Title: Address 2, Display: true, Editable: true
		/// </summary>
        public virtual string AddressLine2
        {
            get
            {
				if (!AllowNull && _addressLine2 is null) 
					_addressLine2 = String.Empty; 
				return _addressLine2?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_addressLine2 = value.TruncateTo(200); 
					OnPropertyChanged("AddressLine2", value);
				}
            }
        }

		/// <summary>
		/// City. <br> Title: City, Display: true, Editable: true
		/// </summary>
        public virtual string City
        {
            get
            {
				if (!AllowNull && _city is null) 
					_city = String.Empty; 
				return _city?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_city = value.TruncateTo(50); 
					OnPropertyChanged("City", value);
				}
            }
        }

		/// <summary>
		/// State. <br> Title: State, Display: true, Editable: true
		/// </summary>
        public virtual string State
        {
            get
            {
				if (!AllowNull && _state is null) 
					_state = String.Empty; 
				return _state?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_state = value.TruncateTo(100); 
					OnPropertyChanged("State", value);
				}
            }
        }

		/// <summary>
		/// Zip Code. <br> Title: Zip, Display: true, Editable: true
		/// </summary>
        public virtual string ZipCode
        {
            get
            {
				if (!AllowNull && _zipCode is null) 
					_zipCode = String.Empty; 
				return _zipCode?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_zipCode = value.TruncateTo(50); 
					OnPropertyChanged("ZipCode", value);
				}
            }
        }

		/// <summary>
		/// Company Name. <br> Title: Company, Display: true, Editable: true
		/// </summary>
        public virtual string CompanyName
        {
            get
            {
				if (!AllowNull && _companyName is null) 
					_companyName = String.Empty; 
				return _companyName?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_companyName = value.TruncateTo(200); 
					OnPropertyChanged("CompanyName", value);
				}
            }
        }

		/// <summary>
		/// Contact person. <br> Title: Attn, Display: true, Editable: true
		/// </summary>
        public virtual string ContactName
        {
            get
            {
				if (!AllowNull && _contactName is null) 
					_contactName = String.Empty; 
				return _contactName?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_contactName = value.TruncateTo(200); 
					OnPropertyChanged("ContactName", value);
				}
            }
        }

		/// <summary>
		/// Contact Email. <br> Title: Email, Display: true, Editable: true
		/// </summary>
        public virtual string ContactEmail
        {
            get
            {
				if (!AllowNull && _contactEmail is null) 
					_contactEmail = String.Empty; 
				return _contactEmail?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_contactEmail = value.TruncateTo(100); 
					OnPropertyChanged("ContactEmail", value);
				}
            }
        }

		/// <summary>
		/// Contact Phone. <br> Title: Phone 2, Display: true, Editable: true
		/// </summary>
        public virtual string ContactPhone
        {
            get
            {
				if (!AllowNull && _contactPhone is null) 
					_contactPhone = String.Empty; 
				return _contactPhone?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_contactPhone = value.TruncateTo(50); 
					OnPropertyChanged("ContactPhone", value);
				}
            }
        }

		/// <summary>
		/// Main Phone. <br> Title: Phone 1, Display: true, Editable: true
		/// </summary>
        public virtual string MainPhone
        {
            get
            {
				if (!AllowNull && _mainPhone is null) 
					_mainPhone = String.Empty; 
				return _mainPhone?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_mainPhone = value.TruncateTo(50); 
					OnPropertyChanged("MainPhone", value);
				}
            }
        }

		/// <summary>
		/// Fax. <br> Title: Fax, Display: true, Editable: true
		/// </summary>
        public virtual string Fax
        {
            get
            {
				if (!AllowNull && _fax is null) 
					_fax = String.Empty; 
				return _fax?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_fax = value.TruncateTo(50); 
					OnPropertyChanged("Fax", value);
				}
            }
        }

		/// <summary>
		/// Website. <br> Title: Website, Display: true, Editable: true
		/// </summary>
        public virtual string Website
        {
            get
            {
				if (!AllowNull && _website is null) 
					_website = String.Empty; 
				return _website?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_website = value.TruncateTo(100); 
					OnPropertyChanged("Website", value);
				}
            }
        }

		/// <summary>
		/// Email. <br> Title: Email 2, Display: true, Editable: true
		/// </summary>
        public virtual string Email
        {
            get
            {
				if (!AllowNull && _email is null) 
					_email = String.Empty; 
				return _email?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_email = value.TruncateTo(100); 
					OnPropertyChanged("Email", value);
				}
            }
        }

		/// <summary>
		/// BusinessHours. <br> Title: Business Hours, Display: false, Editable: false
		/// </summary>
        public virtual string BusinessHours
        {
            get
            {
				if (!AllowNull && _businessHours is null) 
					_businessHours = String.Empty; 
				return _businessHours?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_businessHours = value.TruncateTo(50); 
					OnPropertyChanged("BusinessHours", value);
				}
            }
        }

		/// <summary>
		/// Notes. <br> Title: Notes, Display: true, Editable: true
		/// </summary>
        public virtual string Notes
        {
            get
            {
				if (!AllowNull && _notes is null) 
					_notes = String.Empty; 
				return _notes?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_notes = value.TrimEnd(); 
					OnPropertyChanged("Notes", value);
				}
            }
        }

		/// <summary>
		/// Priority. <br> Title: Priority, Display: true, Editable: true
		/// </summary>
        public virtual int Priority
        {
            get
            {
				return _priority; 
            }
            set
            {
				_priority = value; 
				OnPropertyChanged("Priority", value);
            }
        }

		/// <summary>
		/// (Readonly) Product uuid. load from ProductBasic data. <br> Display: false, Editable: false
		/// </summary>
        public virtual string DistributionCenterUuid
        {
            get
            {
				return _distributionCenterUuid?.TrimEnd(); 
            }
            set
            {
				_distributionCenterUuid = value.TruncateTo(50); 
				OnPropertyChanged("DistributionCenterUuid", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private WarehouseData Parent { get; set; }
		public WarehouseData GetParent() => Parent;
		public DistributionCenter SetParent(WarehouseData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			DistributionCenterUuid = Guid.NewGuid().ToString(); 
			_distributionCenterNum = 0; 
            return;
        }

        public override DistributionCenter Clear()
        {
            base.Clear();
			_databaseNum = default(int); 
			_distributionCenterNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_distributionCenterName = String.Empty; 
			_distributionCenterCode = String.Empty; 
			_distributionCenterType = default(int); 
			_status = default(int); 
			_defaultLevel = default(byte); 
			_addressLine1 = AllowNull ? (string)null : String.Empty; 
			_addressLine2 = AllowNull ? (string)null : String.Empty; 
			_city = AllowNull ? (string)null : String.Empty; 
			_state = AllowNull ? (string)null : String.Empty; 
			_zipCode = AllowNull ? (string)null : String.Empty; 
			_companyName = AllowNull ? (string)null : String.Empty; 
			_contactName = AllowNull ? (string)null : String.Empty; 
			_contactEmail = AllowNull ? (string)null : String.Empty; 
			_contactPhone = AllowNull ? (string)null : String.Empty; 
			_mainPhone = AllowNull ? (string)null : String.Empty; 
			_fax = AllowNull ? (string)null : String.Empty; 
			_website = AllowNull ? (string)null : String.Empty; 
			_email = AllowNull ? (string)null : String.Empty; 
			_businessHours = AllowNull ? (string)null : String.Empty; 
			_notes = AllowNull ? (string)null : String.Empty; 
			_priority = default(int); 
			_distributionCenterUuid = String.Empty; 
            ClearChildren();
            return this;
        }

        public override DistributionCenter CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual DistributionCenter ClearChildren()
        {
            return this;
        }

        public virtual DistributionCenter NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(DistributionCenter data)
        {
            if (data is null) return;
            return;
        }



        #endregion Methods - Generated 
    }
}



