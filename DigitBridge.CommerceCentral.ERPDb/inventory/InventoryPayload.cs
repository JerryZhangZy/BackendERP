

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using DigitBridge.Base.Utility;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Request and Response payload object
    /// </summary>
    [Serializable()]
    public class InventoryPayload : PayloadBase
    {
        /// <summary>
        /// Delegate function to load request parameter to payload property.
        /// </summary>
        public override IDictionary<string, Action<string>> GetOtherParameters()
        {
            return new Dictionary<string, Action<string>>
            {
                { "ProductUuids", val => ProductUuids = val.Split(",").ToList() },
                { "skus", val => Skus = val.Split(",").ToList() }
            };
        }


        #region multiple Dto list

        /// <summary>
        /// (Request Parameter) Array of uuid to load multiple Inventory dto data.
        /// </summary>
        [OpenApiPropertyDescription("(Request Parameter) Array of uuid to load multiple Inventory dto data.")]
        public IList<string> ProductUuids { get; set; } = new List<string>();
        [JsonIgnore]
        public virtual bool HasProductUuids => ProductUuids != null && ProductUuids.Count > 0;
        public bool ShouldSerializeSalesOrderUuids() => HasProductUuids;

        public IList<string> Skus { get; set; } = new List<string>();
        [JsonIgnore]
        public virtual bool HasSkus => Skus != null && Skus.Count > 0;
        public bool ShouldSerializeSkus() => HasSkus;

        /// <summary>
        /// (Response Data) Array of Inventory entity object which load by uuid array.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Array of entity object which load by uuid array.")]
        public IList<InventoryDataDto> Inventorys { get; set; }
        [JsonIgnore] public virtual bool HasInventorys => Inventorys != null && Inventorys.Count > 0;
        public bool ShouldSerializeInventorys() => HasInventorys;

        #endregion multiple Dto list


        #region single Dto object

        /// <summary>
        /// (Request and Response Data) Single Inventory entity object which load by Number.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Single entity object which load by Number.")]
        public InventoryDataDto Inventory { get; set; }
        [JsonIgnore] public virtual bool HasInventory => Inventory != null;
        public bool ShouldSerializeInventory() => HasInventory;

        #endregion single Dto object


        #region list service

        /// <summary>
        /// (Response Data) List result which load filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder InventoryList { get; set; }
        [JsonIgnore] public virtual bool HasInventoryList => InventoryList != null && InventoryList.Length > 0;
        public bool ShouldSerializeInventoryList() => HasInventoryList;

        /// <summary>
        /// (Response Data) List result count which load filter and paging.
        /// </summary>
        public int InventoryListCount { get; set; }
        [JsonIgnore] public virtual bool HasInventoryListCount => InventoryListCount > 0;
        public bool ShouldSerializeInventoryListCount() => HasInventoryListCount;

        /// <summary>
        /// (Response Data) List result which load filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder InventoryDataList { get; set; }
        [JsonIgnore] public virtual bool HasInventoryDataList => InventoryDataList != null && InventoryDataList.Length > 0;
        public bool ShouldSerializeInventoryDataList() => HasInventoryDataList;

        #endregion list service

        #region summary service 

        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder ProductSummary { get; set; }
        [JsonIgnore] public virtual bool HasProductSummary => ProductSummary != null;
        public bool ShouldSerializeProductSummary() => HasProductSummary;
        #endregion
    }
}

