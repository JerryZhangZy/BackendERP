              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Newtonsoft.Json;
using DigitBridge.CommerceCentral.YoPoco;
using CsvHelper;
using System.IO;
using DigitBridge.Base.Utility;
using System.Dynamic;
using System.Linq;
using DigitBridge.CommerceCentral.ERPDb;
using CsvHelper.Configuration;
using System.Threading.Tasks;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a InventoryIOFormat Class.
    /// NOTE: This class is generated from a T4 template Once - you you wanr re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public partial class InventoryIOFormat : CsvFormat
    {
        public InventoryIOFormat() : base()
        {
            InitConfig();
			InitProductBasic();
			InitProductExt();
			InitProductExtAttributes();
			InitInventory();
        }

        protected virtual void InitConfig()
        {
            FormatNum = 1;
            FormatName = "Inventory Deafult Format";
            KeyName = "";
			DefaultKeyName = "ProductUuid";
            HasHeaderRecord = true;
        }

    
		protected virtual void InitProductBasic()
		{
			var obj = this.InitParentObject<ProductBasicDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("CentralProductNum", "", idx++, null, false),
				new CsvFormatColumn("SKU", "", idx++, null, false),
				new CsvFormatColumn("FNSku", "", idx++, null, false),
				new CsvFormatColumn("Condition", "", idx++, null, false),
				new CsvFormatColumn("Brand", "", idx++, null, false),
				new CsvFormatColumn("Manufacturer", "", idx++, null, false),
				new CsvFormatColumn("ProductTitle", "", idx++, null, false),
				new CsvFormatColumn("LongDescription", "", idx++, null, false),
				new CsvFormatColumn("ShortDescription", "", idx++, null, false),
				new CsvFormatColumn("Subtitle", "", idx++, null, false),
				new CsvFormatColumn("ASIN", "", idx++, null, false),
				new CsvFormatColumn("UPC", "", idx++, null, false),
				new CsvFormatColumn("EAN", "", idx++, null, false),
				new CsvFormatColumn("ISBN", "", idx++, null, false),
				new CsvFormatColumn("MPN", "", idx++, null, false),
				new CsvFormatColumn("Price", "", idx++, FormatType.Price, false),
				new CsvFormatColumn("Cost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("AvgCost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("MAPPrice", "", idx++, FormatType.Price, false),
				new CsvFormatColumn("MSRP", "", idx++, null, false),
				new CsvFormatColumn("BundleType", "", idx++, null, false),
				new CsvFormatColumn("ProductType", "", idx++, null, false),
				new CsvFormatColumn("VariationVaryBy", "", idx++, null, false),
				new CsvFormatColumn("CopyToChildren", "", idx++, null, false),
				new CsvFormatColumn("MultipackQuantity", "", idx++, null, false),
				new CsvFormatColumn("VariationParentSKU", "", idx++, null, false),
				new CsvFormatColumn("IsInRelationship", "", idx++, null, false),
				new CsvFormatColumn("NetWeight", "", idx++, null, false),
				new CsvFormatColumn("GrossWeight", "", idx++, null, false),
				new CsvFormatColumn("WeightUnit", "", idx++, null, false),
				new CsvFormatColumn("ProductHeight", "", idx++, null, false),
				new CsvFormatColumn("ProductLength", "", idx++, null, false),
				new CsvFormatColumn("ProductWidth", "", idx++, null, false),
				new CsvFormatColumn("BoxHeight", "", idx++, null, false),
				new CsvFormatColumn("BoxLength", "", idx++, null, false),
				new CsvFormatColumn("BoxWidth", "", idx++, null, false),
				new CsvFormatColumn("DimensionUnit", "", idx++, null, false),
				new CsvFormatColumn("HarmonizedCode", "", idx++, null, false),
				new CsvFormatColumn("TaxProductCode", "", idx++, null, false),
				new CsvFormatColumn("IsBlocked", "", idx++, null, false),
				new CsvFormatColumn("Warranty", "", idx++, null, false),
				new CsvFormatColumn("CreateBy", "", idx++, null, false),
				new CsvFormatColumn("UpdateBy", "", idx++, null, false),
				new CsvFormatColumn("CreateDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("UpdateDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("ClassificationNum", "", idx++, null, false),
				new CsvFormatColumn("RowNum", "", idx++, null, false),
				new CsvFormatColumn("OriginalUPC", "", idx++, null, false),
				new CsvFormatColumn("ProductUuid", "", idx++, null, false),
			};
		}



    
		protected virtual void InitProductExt()
		{
			var obj = this.InitParentObject<ProductExtDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("StyleCode", "", idx++, null, false),
				new CsvFormatColumn("ColorPatternCode", "", idx++, null, false),
				new CsvFormatColumn("SizeType", "", idx++, null, false),
				new CsvFormatColumn("SizeCode", "", idx++, null, false),
				new CsvFormatColumn("WidthCode", "", idx++, null, false),
				new CsvFormatColumn("LengthCode", "", idx++, null, false),
				new CsvFormatColumn("ClassCode", "", idx++, null, false),
				new CsvFormatColumn("SubClassCode", "", idx++, null, false),
				new CsvFormatColumn("DepartmentCode", "", idx++, null, false),
				new CsvFormatColumn("DivisionCode", "", idx++, null, false),
				new CsvFormatColumn("OEMCode", "", idx++, null, false),
				new CsvFormatColumn("AlternateCode", "", idx++, null, false),
				new CsvFormatColumn("Remark", "", idx++, null, false),
				new CsvFormatColumn("Model", "", idx++, null, false),
				new CsvFormatColumn("CatalogPage", "", idx++, null, false),
				new CsvFormatColumn("CategoryCode", "", idx++, null, false),
				new CsvFormatColumn("GroupCode", "", idx++, null, false),
				new CsvFormatColumn("SubGroupCode", "", idx++, null, false),
				new CsvFormatColumn("ProductStatus", "", idx++, null, false),
				new CsvFormatColumn("PriceRule", "", idx++, null, false),
				new CsvFormatColumn("Stockable", "", idx++, null, false),
				new CsvFormatColumn("IsAr", "", idx++, null, false),
				new CsvFormatColumn("IsAp", "", idx++, null, false),
				new CsvFormatColumn("Taxable", "", idx++, null, false),
				new CsvFormatColumn("Costable", "", idx++, null, false),
				new CsvFormatColumn("IsProfit", "", idx++, null, false),
				new CsvFormatColumn("Release", "", idx++, null, false),
				new CsvFormatColumn("Currency", "", idx++, null, false),
				new CsvFormatColumn("UOM", "", idx++, null, false),
				new CsvFormatColumn("QtyPerPallot", "", idx++, null, false),
				new CsvFormatColumn("QtyPerCase", "", idx++, null, false),
				new CsvFormatColumn("QtyPerBox", "", idx++, null, false),
				new CsvFormatColumn("PackType", "", idx++, null, false),
				new CsvFormatColumn("PackQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("DefaultPackType", "", idx++, null, false),
				new CsvFormatColumn("DefaultWarehouseCode", "", idx++, null, false),
				new CsvFormatColumn("DefaultVendorCode", "", idx++, null, false),
				new CsvFormatColumn("PoSize", "", idx++, null, false),
				new CsvFormatColumn("MinStock", "", idx++, null, false),
				new CsvFormatColumn("SalesCost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("LeadTimeDay", "", idx++, null, false),
				new CsvFormatColumn("ProductYear", "", idx++, null, false),
				new CsvFormatColumn("UpdateDateUtc", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("EnterBy", "", idx++, null, false),
			};
		}



    
		protected virtual void InitProductExtAttributes()
		{
			var obj = this.InitParentObject<ProductExtAttributesDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("JsonFields", "", idx++, null, false),
			};
		}



    
		protected virtual void InitInventory()
		{
			var obj = this.InitParentObject<InventoryDto>();
			var idx = 0;
			obj.Columns = new List<CsvFormatColumn>()
			{
				new CsvFormatColumn("InventoryUuid", "", idx++, null, false),
				new CsvFormatColumn("WarehouseUuid", "", idx++, null, false),
				new CsvFormatColumn("WarehouseCode", "", idx++, null, false),
				new CsvFormatColumn("WarehouseName", "", idx++, null, false),
				new CsvFormatColumn("LotNum", "", idx++, null, false),
				new CsvFormatColumn("LotInDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("LotExpDate", "", idx++, FormatType.Date, false),
				new CsvFormatColumn("LotDescription", "", idx++, null, false),
				new CsvFormatColumn("LpnNum", "", idx++, null, false),
				new CsvFormatColumn("LpnDescription", "", idx++, null, false),
				new CsvFormatColumn("Notes", "", idx++, null, false),
				new CsvFormatColumn("Instock", "", idx++, null, false),
				new CsvFormatColumn("OnHand", "", idx++, null, false),
				new CsvFormatColumn("OpenSoQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("OpenFulfillmentQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("AvaQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("OpenPoQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("OpenInTransitQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("OpenWipQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("ProjectedQty", "", idx++, FormatType.Qty, false),
				new CsvFormatColumn("BaseCost", "", idx++, FormatType.Cost, false),
				new CsvFormatColumn("TaxRate", "", idx++, FormatType.TaxRate, false),
				new CsvFormatColumn("TaxAmount", "", idx++, FormatType.Amount, false),
				new CsvFormatColumn("ShippingAmount", "", idx++, FormatType.Amount, false),
				new CsvFormatColumn("MiscAmount", "", idx++, FormatType.Amount, false),
				new CsvFormatColumn("ChargeAndAllowanceAmount", "", idx++, FormatType.Amount, false),
				new CsvFormatColumn("UnitCost", "", idx++, FormatType.Cost, false),
			};
		}



    }
}



