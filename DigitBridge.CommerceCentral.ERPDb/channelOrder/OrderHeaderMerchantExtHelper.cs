              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderHeaderMerchantExt SQL Helper Static Class.
    /// NOTE: This class is generated from a T4 template Once - you want re-generate it, you need delete cs file and generate again
    /// </summary>
    public static class OrderHeaderMerchantExtHelper
    {
        public static readonly string TableName = "OrderHeaderMerchantExt";
        public static readonly string TableAllies = "choe";

        public static string From(string TableAllies = null) => $"FROM {TableName} {TableAllies ?? TableAllies} ";
        public static string InnerJoin(string TableAllies = null) => $"INNER JOIN {TableName} {TableAllies ?? TableAllies} ";
        public static string LeftJoin(string TableAllies = null) => $"LEFT JOIN {TableName} {TableAllies ?? TableAllies} ";

        #region - static SQL fileds statement

        public static string RowNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.RowNum AS {name ?? "RowNum".ToCamelCase(camelCase)} ";
        public static string CentralOrderNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.CentralOrderNum AS {name ?? "CentralOrderNum".ToCamelCase(camelCase)} ";
        public static string MasterAccountNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.MasterAccountNum AS {name ?? "MasterAccountNum".ToCamelCase(camelCase)} ";
        public static string ProfileNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ProfileNum AS {name ?? "ProfileNum".ToCamelCase(camelCase)} ";
        public static string ChannelNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ChannelNum AS {name ?? "ChannelNum".ToCamelCase(camelCase)} ";
        public static string ChannelAccountNum(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.ChannelAccountNum AS {name ?? "ChannelAccountNum".ToCamelCase(camelCase)} ";
        public static string PoType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PoType) AS {name ?? "PoType".ToCamelCase(camelCase)} ";
        public static string HubOrderID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.HubOrderID) AS {name ?? "HubOrderID".ToCamelCase(camelCase)} ";
        public static string MerchantID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantID) AS {name ?? "MerchantID".ToCamelCase(camelCase)} ";
        public static string MerchantVendorID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantVendorID) AS {name ?? "MerchantVendorID".ToCamelCase(camelCase)} ";
        public static string MerchantOrderDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.MerchantOrderDateUtc AS {name ?? "MerchantOrderDateUtc".ToCamelCase(camelCase)} ";
        public static string PackingSlipMessage(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PackingSlipMessage) AS {name ?? "PackingSlipMessage".ToCamelCase(camelCase)} ";
        public static string VendorNotes(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.VendorNotes) AS {name ?? "VendorNotes".ToCamelCase(camelCase)} ";
        public static string VendorWarehouseID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.VendorWarehouseID) AS {name ?? "VendorWarehouseID".ToCamelCase(camelCase)} ";
        public static string VendorCommitmentID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.VendorCommitmentID) AS {name ?? "VendorCommitmentID".ToCamelCase(camelCase)} ";
        public static string SalesDivision(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SalesDivision) AS {name ?? "SalesDivision".ToCamelCase(camelCase)} ";
        public static string MerchantPhone1(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantPhone1) AS {name ?? "MerchantPhone1".ToCamelCase(camelCase)} ";
        public static string MerchantPhone2(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantPhone2) AS {name ?? "MerchantPhone2".ToCamelCase(camelCase)} ";
        public static string MerchantPhone3(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantPhone3) AS {name ?? "MerchantPhone3".ToCamelCase(camelCase)} ";
        public static string MerchantCustomerID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantCustomerID) AS {name ?? "MerchantCustomerID".ToCamelCase(camelCase)} ";
        public static string MerchantCustomerOrderID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantCustomerOrderID) AS {name ?? "MerchantCustomerOrderID".ToCamelCase(camelCase)} ";
        public static string MerchantCustomerOrderDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.MerchantCustomerOrderDateUtc AS {name ?? "MerchantCustomerOrderDateUtc".ToCamelCase(camelCase)} ";
        public static string MerchantCustomerPaymentMethod(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantCustomerPaymentMethod) AS {name ?? "MerchantCustomerPaymentMethod".ToCamelCase(camelCase)} ";
        public static string CancelAfterDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.CancelAfterDateUtc AS {name ?? "CancelAfterDateUtc".ToCamelCase(camelCase)} ";
        public static string RequiredShipDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.RequiredShipDateUtc AS {name ?? "RequiredShipDateUtc".ToCamelCase(camelCase)} ";
        public static string PromoID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PromoID) AS {name ?? "PromoID".ToCamelCase(camelCase)} ";
        public static string PromoStartDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.PromoStartDateUtc AS {name ?? "PromoStartDateUtc".ToCamelCase(camelCase)} ";
        public static string MerchandiseTypeCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchandiseTypeCode) AS {name ?? "MerchandiseTypeCode".ToCamelCase(camelCase)} ";
        public static string AuthorizationForExpenseNumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.AuthorizationForExpenseNumber) AS {name ?? "AuthorizationForExpenseNumber".ToCamelCase(camelCase)} ";
        public static string ShipToAccountNO(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ShipToAccountNO) AS {name ?? "ShipToAccountNO".ToCamelCase(camelCase)} ";
        public static string ShipToGender(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ShipToGender) AS {name ?? "ShipToGender".ToCamelCase(camelCase)} ";
        public static string ShipToReceipt(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ShipToReceipt) AS {name ?? "ShipToReceipt".ToCamelCase(camelCase)} ";
        public static string ShipToVcdID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ShipToVcdID) AS {name ?? "ShipToVcdID".ToCamelCase(camelCase)} ";
        public static string ShipToDEANumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ShipToDEANumber) AS {name ?? "ShipToDEANumber".ToCamelCase(camelCase)} ";
        public static string MerchantBillToAddressType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantBillToAddressType) AS {name ?? "MerchantBillToAddressType".ToCamelCase(camelCase)} ";
        public static string SoldToAddressType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToAddressType) AS {name ?? "SoldToAddressType".ToCamelCase(camelCase)} ";
        public static string SoldToAttention(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToAttention) AS {name ?? "SoldToAttention".ToCamelCase(camelCase)} ";
        public static string SoldToCompanyname(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToCompanyname) AS {name ?? "SoldToCompanyname".ToCamelCase(camelCase)} ";
        public static string SoldToName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToName) AS {name ?? "SoldToName".ToCamelCase(camelCase)} ";
        public static string SoldToFirstName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToFirstName) AS {name ?? "SoldToFirstName".ToCamelCase(camelCase)} ";
        public static string SoldToLastName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToLastName) AS {name ?? "SoldToLastName".ToCamelCase(camelCase)} ";
        public static string SoldToAddressLine1(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToAddressLine1) AS {name ?? "SoldToAddressLine1".ToCamelCase(camelCase)} ";
        public static string SoldToAddressLine2(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToAddressLine2) AS {name ?? "SoldToAddressLine2".ToCamelCase(camelCase)} ";
        public static string SoldToAddressLine3(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToAddressLine3) AS {name ?? "SoldToAddressLine3".ToCamelCase(camelCase)} ";
        public static string SoldToCity(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToCity) AS {name ?? "SoldToCity".ToCamelCase(camelCase)} ";
        public static string SoldToState(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToState) AS {name ?? "SoldToState".ToCamelCase(camelCase)} ";
        public static string SoldToPostalCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToPostalCode) AS {name ?? "SoldToPostalCode".ToCamelCase(camelCase)} ";
        public static string SoldToPostalCodeExt(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToPostalCodeExt) AS {name ?? "SoldToPostalCodeExt".ToCamelCase(camelCase)} ";
        public static string SoldToCountry(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToCountry) AS {name ?? "SoldToCountry".ToCamelCase(camelCase)} ";
        public static string SoldToEmail(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToEmail) AS {name ?? "SoldToEmail".ToCamelCase(camelCase)} ";
        public static string SoldToDayPhone(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToDayPhone) AS {name ?? "SoldToDayPhone".ToCamelCase(camelCase)} ";
        public static string SoldToNightPhone(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToNightPhone) AS {name ?? "SoldToNightPhone".ToCamelCase(camelCase)} ";
        public static string SoldToTaxExemptNO(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToTaxExemptNO) AS {name ?? "SoldToTaxExemptNO".ToCamelCase(camelCase)} ";
        public static string SoldToAccountNO(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToAccountNO) AS {name ?? "SoldToAccountNO".ToCamelCase(camelCase)} ";
        public static string SoldToGender(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SoldToGender) AS {name ?? "SoldToGender".ToCamelCase(camelCase)} ";
        public static string CustomerGiftMessage(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CustomerGiftMessage) AS {name ?? "CustomerGiftMessage".ToCamelCase(camelCase)} ";
        public static string ReturnAddressee(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnAddressee) AS {name ?? "ReturnAddressee".ToCamelCase(camelCase)} ";
        public static string ReturnAddressLine1(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnAddressLine1) AS {name ?? "ReturnAddressLine1".ToCamelCase(camelCase)} ";
        public static string ReturnAddressLine2(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnAddressLine2) AS {name ?? "ReturnAddressLine2".ToCamelCase(camelCase)} ";
        public static string ReturnAddrelssLine3(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnAddrelssLine3) AS {name ?? "ReturnAddrelssLine3".ToCamelCase(camelCase)} ";
        public static string ReturnCity(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnCity) AS {name ?? "ReturnCity".ToCamelCase(camelCase)} ";
        public static string ReturnState(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnState) AS {name ?? "ReturnState".ToCamelCase(camelCase)} ";
        public static string ReturnPostalCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnPostalCode) AS {name ?? "ReturnPostalCode".ToCamelCase(camelCase)} ";
        public static string ReturnPostalCodeExt(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnPostalCodeExt) AS {name ?? "ReturnPostalCodeExt".ToCamelCase(camelCase)} ";
        public static string ReturnCountry(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnCountry) AS {name ?? "ReturnCountry".ToCamelCase(camelCase)} ";
        public static string ReturnEmail(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnEmail) AS {name ?? "ReturnEmail".ToCamelCase(camelCase)} ";
        public static string ReturnDayPhone(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnDayPhone) AS {name ?? "ReturnDayPhone".ToCamelCase(camelCase)} ";
        public static string ReturnNightPhone(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnNightPhone) AS {name ?? "ReturnNightPhone".ToCamelCase(camelCase)} ";
        public static string ReturnLocationID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReturnLocationID) AS {name ?? "ReturnLocationID".ToCamelCase(camelCase)} ";
        public static string InvoiceToAddressType(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToAddressType) AS {name ?? "InvoiceToAddressType".ToCamelCase(camelCase)} ";
        public static string InvoiceToAttention(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToAttention) AS {name ?? "InvoiceToAttention".ToCamelCase(camelCase)} ";
        public static string InvoiceToCompany(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToCompany) AS {name ?? "InvoiceToCompany".ToCamelCase(camelCase)} ";
        public static string InoviceToName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InoviceToName) AS {name ?? "InoviceToName".ToCamelCase(camelCase)} ";
        public static string InvoiceToFirstName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToFirstName) AS {name ?? "InvoiceToFirstName".ToCamelCase(camelCase)} ";
        public static string InvoiceToLastName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToLastName) AS {name ?? "InvoiceToLastName".ToCamelCase(camelCase)} ";
        public static string InvoiceToAddressLine1(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToAddressLine1) AS {name ?? "InvoiceToAddressLine1".ToCamelCase(camelCase)} ";
        public static string InvoiceToAddressLine2(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToAddressLine2) AS {name ?? "InvoiceToAddressLine2".ToCamelCase(camelCase)} ";
        public static string InvoiceToAddressLine3(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToAddressLine3) AS {name ?? "InvoiceToAddressLine3".ToCamelCase(camelCase)} ";
        public static string InvoiceToCity(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToCity) AS {name ?? "InvoiceToCity".ToCamelCase(camelCase)} ";
        public static string InvoiceToState(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToState) AS {name ?? "InvoiceToState".ToCamelCase(camelCase)} ";
        public static string InvoiceToPostalCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToPostalCode) AS {name ?? "InvoiceToPostalCode".ToCamelCase(camelCase)} ";
        public static string InvoiceToPostalCodeExt(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToPostalCodeExt) AS {name ?? "InvoiceToPostalCodeExt".ToCamelCase(camelCase)} ";
        public static string InvoiceToCountry(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToCountry) AS {name ?? "InvoiceToCountry".ToCamelCase(camelCase)} ";
        public static string InvoiceToDayPhone(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToDayPhone) AS {name ?? "InvoiceToDayPhone".ToCamelCase(camelCase)} ";
        public static string InvoviceToNightPhone(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoviceToNightPhone) AS {name ?? "InvoviceToNightPhone".ToCamelCase(camelCase)} ";
        public static string InvoiceToEmail(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToEmail) AS {name ?? "InvoiceToEmail".ToCamelCase(camelCase)} ";
        public static string InvoiceToAccountNO(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToAccountNO) AS {name ?? "InvoiceToAccountNO".ToCamelCase(camelCase)} ";
        public static string InvoiceToTaxExemptNO(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToTaxExemptNO) AS {name ?? "InvoiceToTaxExemptNO".ToCamelCase(camelCase)} ";
        public static string InvoiceToGender(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.InvoiceToGender) AS {name ?? "InvoiceToGender".ToCamelCase(camelCase)} ";
        public static string BuyingContract(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.BuyingContract) AS {name ?? "BuyingContract".ToCamelCase(camelCase)} ";
        public static string CcParty(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CcParty) AS {name ?? "CcParty".ToCamelCase(camelCase)} ";
        public static string APVendor(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.APVendor) AS {name ?? "APVendor".ToCamelCase(camelCase)} ";
        public static string RMEmail(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.RMEmail) AS {name ?? "RMEmail".ToCamelCase(camelCase)} ";
        public static string MarketingInserts(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MarketingInserts) AS {name ?? "MarketingInserts".ToCamelCase(camelCase)} ";
        public static string BusinessRuleCode(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.BusinessRuleCode) AS {name ?? "BusinessRuleCode".ToCamelCase(camelCase)} ";
        public static string ReleaseNumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ReleaseNumber) AS {name ?? "ReleaseNumber".ToCamelCase(camelCase)} ";
        public static string MerchantBuyerName(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantBuyerName) AS {name ?? "MerchantBuyerName".ToCamelCase(camelCase)} ";
        public static string SalesCurrency(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.SalesCurrency) AS {name ?? "SalesCurrency".ToCamelCase(camelCase)} ";
        public static string FreightCollectAccount(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.FreightCollectAccount) AS {name ?? "FreightCollectAccount".ToCamelCase(camelCase)} ";
        public static string FreightPaymentTerms(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.FreightPaymentTerms) AS {name ?? "FreightPaymentTerms".ToCamelCase(camelCase)} ";
        public static string MerchantSalesAgent(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MerchantSalesAgent) AS {name ?? "MerchantSalesAgent".ToCamelCase(camelCase)} ";
        public static string PaymentMethodDescription(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PaymentMethodDescription) AS {name ?? "PaymentMethodDescription".ToCamelCase(camelCase)} ";
        public static string OrderFulfillmentFee(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.OrderFulfillmentFee AS {name ?? "OrderFulfillmentFee".ToCamelCase(camelCase)} ";
        public static string PackingSlipTemplateIndicator(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PackingSlipTemplateIndicator) AS {name ?? "PackingSlipTemplateIndicator".ToCamelCase(camelCase)} ";
        public static string SalesTax(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.SalesTax AS {name ?? "SalesTax".ToCamelCase(camelCase)} ";
        public static string ResponsibilityRole(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ResponsibilityRole) AS {name ?? "ResponsibilityRole".ToCamelCase(camelCase)} ";
        public static string ExpectedProcessingPriority(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ExpectedProcessingPriority) AS {name ?? "ExpectedProcessingPriority".ToCamelCase(camelCase)} ";
        public static string PreassignedWaybillNumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.PreassignedWaybillNumber) AS {name ?? "PreassignedWaybillNumber".ToCamelCase(camelCase)} ";
        public static string URL(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.URL) AS {name ?? "URL".ToCamelCase(camelCase)} ";
        public static string ShipperID(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ShipperID) AS {name ?? "ShipperID".ToCamelCase(camelCase)} ";
        public static string FileIdentifier(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.FileIdentifier) AS {name ?? "FileIdentifier".ToCamelCase(camelCase)} ";
        public static string ERPCustomerOrderNumber(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.ERPCustomerOrderNumber) AS {name ?? "ERPCustomerOrderNumber".ToCamelCase(camelCase)} ";
        public static string CustomerOrderPOIndex(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CustomerOrderPOIndex) AS {name ?? "CustomerOrderPOIndex".ToCamelCase(camelCase)} ";
        public static string MultiSource(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.MultiSource) AS {name ?? "MultiSource".ToCamelCase(camelCase)} ";
        public static string NetDaysDue(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.NetDaysDue AS {name ?? "NetDaysDue".ToCamelCase(camelCase)} ";
        public static string TotalOrderCost(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.TotalOrderCost AS {name ?? "TotalOrderCost".ToCamelCase(camelCase)} ";
        public static string UpdateDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.UpdateDateUtc AS {name ?? "UpdateDateUtc".ToCamelCase(camelCase)} ";
        public static string EnterBy(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.EnterBy) AS {name ?? "EnterBy".ToCamelCase(camelCase)} ";
        public static string UpdateBy(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.UpdateBy) AS {name ?? "UpdateBy".ToCamelCase(camelCase)} ";
        public static string EnterDateUtc(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.EnterDateUtc AS {name ?? "EnterDateUtc".ToCamelCase(camelCase)} ";
        public static string DigitBridgeGuid(string tableAllies = null, string name = null, bool camelCase = true) => $"{tableAllies ?? TableAllies}.DigitBridgeGuid AS {name ?? "DigitBridgeGuid".ToCamelCase(camelCase)} ";
        public static string CentralOrderUuid(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CentralOrderUuid) AS {name ?? "CentralOrderUuid".ToCamelCase(camelCase)} ";
        public static string CentralOrderHeaderMerchantExtUuid(string tableAllies = null, string name = null, bool camelCase = true) => $"RTRIM({tableAllies ?? TableAllies}.CentralOrderHeaderMerchantExtUuid) AS {name ?? "CentralOrderHeaderMerchantExtUuid".ToCamelCase(camelCase)} ";

        #endregion - static SQL fileds statement

        public static string SelectAll(string tableAllies = null) 
        {
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : $"{tableAllies.TrimEnd()}.";
            return $@"
{allies}RowNum AS RowNum,
{allies}CentralOrderNum AS CentralOrderNum,
{allies}MasterAccountNum AS MasterAccountNum,
{allies}ProfileNum AS ProfileNum,
{allies}ChannelNum AS ChannelNum,
{allies}ChannelAccountNum AS ChannelAccountNum,
RTRIM({allies}PoType) AS PoType,
RTRIM({allies}HubOrderID) AS HubOrderID,
RTRIM({allies}MerchantID) AS MerchantID,
RTRIM({allies}MerchantVendorID) AS MerchantVendorID,
{allies}MerchantOrderDateUtc AS MerchantOrderDateUtc,
RTRIM({allies}PackingSlipMessage) AS PackingSlipMessage,
RTRIM({allies}VendorNotes) AS VendorNotes,
RTRIM({allies}VendorWarehouseID) AS VendorWarehouseID,
RTRIM({allies}VendorCommitmentID) AS VendorCommitmentID,
RTRIM({allies}SalesDivision) AS SalesDivision,
RTRIM({allies}MerchantPhone1) AS MerchantPhone1,
RTRIM({allies}MerchantPhone2) AS MerchantPhone2,
RTRIM({allies}MerchantPhone3) AS MerchantPhone3,
RTRIM({allies}MerchantCustomerID) AS MerchantCustomerID,
RTRIM({allies}MerchantCustomerOrderID) AS MerchantCustomerOrderID,
{allies}MerchantCustomerOrderDateUtc AS MerchantCustomerOrderDateUtc,
RTRIM({allies}MerchantCustomerPaymentMethod) AS MerchantCustomerPaymentMethod,
{allies}CancelAfterDateUtc AS CancelAfterDateUtc,
{allies}RequiredShipDateUtc AS RequiredShipDateUtc,
RTRIM({allies}PromoID) AS PromoID,
{allies}PromoStartDateUtc AS PromoStartDateUtc,
RTRIM({allies}MerchandiseTypeCode) AS MerchandiseTypeCode,
RTRIM({allies}AuthorizationForExpenseNumber) AS AuthorizationForExpenseNumber,
RTRIM({allies}ShipToAccountNO) AS ShipToAccountNO,
RTRIM({allies}ShipToGender) AS ShipToGender,
RTRIM({allies}ShipToReceipt) AS ShipToReceipt,
RTRIM({allies}ShipToVcdID) AS ShipToVcdID,
RTRIM({allies}ShipToDEANumber) AS ShipToDEANumber,
RTRIM({allies}MerchantBillToAddressType) AS MerchantBillToAddressType,
RTRIM({allies}SoldToAddressType) AS SoldToAddressType,
RTRIM({allies}SoldToAttention) AS SoldToAttention,
RTRIM({allies}SoldToCompanyname) AS SoldToCompanyname,
RTRIM({allies}SoldToName) AS SoldToName,
RTRIM({allies}SoldToFirstName) AS SoldToFirstName,
RTRIM({allies}SoldToLastName) AS SoldToLastName,
RTRIM({allies}SoldToAddressLine1) AS SoldToAddressLine1,
RTRIM({allies}SoldToAddressLine2) AS SoldToAddressLine2,
RTRIM({allies}SoldToAddressLine3) AS SoldToAddressLine3,
RTRIM({allies}SoldToCity) AS SoldToCity,
RTRIM({allies}SoldToState) AS SoldToState,
RTRIM({allies}SoldToPostalCode) AS SoldToPostalCode,
RTRIM({allies}SoldToPostalCodeExt) AS SoldToPostalCodeExt,
RTRIM({allies}SoldToCountry) AS SoldToCountry,
RTRIM({allies}SoldToEmail) AS SoldToEmail,
RTRIM({allies}SoldToDayPhone) AS SoldToDayPhone,
RTRIM({allies}SoldToNightPhone) AS SoldToNightPhone,
RTRIM({allies}SoldToTaxExemptNO) AS SoldToTaxExemptNO,
RTRIM({allies}SoldToAccountNO) AS SoldToAccountNO,
RTRIM({allies}SoldToGender) AS SoldToGender,
RTRIM({allies}CustomerGiftMessage) AS CustomerGiftMessage,
RTRIM({allies}ReturnAddressee) AS ReturnAddressee,
RTRIM({allies}ReturnAddressLine1) AS ReturnAddressLine1,
RTRIM({allies}ReturnAddressLine2) AS ReturnAddressLine2,
RTRIM({allies}ReturnAddrelssLine3) AS ReturnAddrelssLine3,
RTRIM({allies}ReturnCity) AS ReturnCity,
RTRIM({allies}ReturnState) AS ReturnState,
RTRIM({allies}ReturnPostalCode) AS ReturnPostalCode,
RTRIM({allies}ReturnPostalCodeExt) AS ReturnPostalCodeExt,
RTRIM({allies}ReturnCountry) AS ReturnCountry,
RTRIM({allies}ReturnEmail) AS ReturnEmail,
RTRIM({allies}ReturnDayPhone) AS ReturnDayPhone,
RTRIM({allies}ReturnNightPhone) AS ReturnNightPhone,
RTRIM({allies}ReturnLocationID) AS ReturnLocationID,
RTRIM({allies}InvoiceToAddressType) AS InvoiceToAddressType,
RTRIM({allies}InvoiceToAttention) AS InvoiceToAttention,
RTRIM({allies}InvoiceToCompany) AS InvoiceToCompany,
RTRIM({allies}InoviceToName) AS InoviceToName,
RTRIM({allies}InvoiceToFirstName) AS InvoiceToFirstName,
RTRIM({allies}InvoiceToLastName) AS InvoiceToLastName,
RTRIM({allies}InvoiceToAddressLine1) AS InvoiceToAddressLine1,
RTRIM({allies}InvoiceToAddressLine2) AS InvoiceToAddressLine2,
RTRIM({allies}InvoiceToAddressLine3) AS InvoiceToAddressLine3,
RTRIM({allies}InvoiceToCity) AS InvoiceToCity,
RTRIM({allies}InvoiceToState) AS InvoiceToState,
RTRIM({allies}InvoiceToPostalCode) AS InvoiceToPostalCode,
RTRIM({allies}InvoiceToPostalCodeExt) AS InvoiceToPostalCodeExt,
RTRIM({allies}InvoiceToCountry) AS InvoiceToCountry,
RTRIM({allies}InvoiceToDayPhone) AS InvoiceToDayPhone,
RTRIM({allies}InvoviceToNightPhone) AS InvoviceToNightPhone,
RTRIM({allies}InvoiceToEmail) AS InvoiceToEmail,
RTRIM({allies}InvoiceToAccountNO) AS InvoiceToAccountNO,
RTRIM({allies}InvoiceToTaxExemptNO) AS InvoiceToTaxExemptNO,
RTRIM({allies}InvoiceToGender) AS InvoiceToGender,
RTRIM({allies}BuyingContract) AS BuyingContract,
RTRIM({allies}CcParty) AS CcParty,
RTRIM({allies}APVendor) AS APVendor,
RTRIM({allies}RMEmail) AS RMEmail,
RTRIM({allies}MarketingInserts) AS MarketingInserts,
RTRIM({allies}BusinessRuleCode) AS BusinessRuleCode,
RTRIM({allies}ReleaseNumber) AS ReleaseNumber,
RTRIM({allies}MerchantBuyerName) AS MerchantBuyerName,
RTRIM({allies}SalesCurrency) AS SalesCurrency,
RTRIM({allies}FreightCollectAccount) AS FreightCollectAccount,
RTRIM({allies}FreightPaymentTerms) AS FreightPaymentTerms,
RTRIM({allies}MerchantSalesAgent) AS MerchantSalesAgent,
RTRIM({allies}PaymentMethodDescription) AS PaymentMethodDescription,
{allies}OrderFulfillmentFee AS OrderFulfillmentFee,
RTRIM({allies}PackingSlipTemplateIndicator) AS PackingSlipTemplateIndicator,
{allies}SalesTax AS SalesTax,
RTRIM({allies}ResponsibilityRole) AS ResponsibilityRole,
RTRIM({allies}ExpectedProcessingPriority) AS ExpectedProcessingPriority,
RTRIM({allies}PreassignedWaybillNumber) AS PreassignedWaybillNumber,
RTRIM({allies}URL) AS URL,
RTRIM({allies}ShipperID) AS ShipperID,
RTRIM({allies}FileIdentifier) AS FileIdentifier,
RTRIM({allies}ERPCustomerOrderNumber) AS ERPCustomerOrderNumber,
RTRIM({allies}CustomerOrderPOIndex) AS CustomerOrderPOIndex,
RTRIM({allies}MultiSource) AS MultiSource,
{allies}NetDaysDue AS NetDaysDue,
{allies}TotalOrderCost AS TotalOrderCost,
{allies}UpdateDateUtc AS UpdateDateUtc,
RTRIM({allies}EnterBy) AS EnterBy,
RTRIM({allies}UpdateBy) AS UpdateBy,
{allies}EnterDateUtc AS EnterDateUtc,
{allies}DigitBridgeGuid AS DigitBridgeGuid,
RTRIM({allies}CentralOrderUuid) AS CentralOrderUuid,
RTRIM({allies}CentralOrderHeaderMerchantExtUuid) AS CentralOrderHeaderMerchantExtUuid
";
        }

        public static string SelectAllWhere(string sqlWhere, string tableAllies = null, bool forJson = false) 
        {
            if (!sqlWhere.StartsWith("WHERE", StringComparison.CurrentCultureIgnoreCase))
                sqlWhere = $"WHERE {sqlWhere}";
            var forJsonString = forJson ? "FOR JSON PATH" : string.Empty;
            var allies = string.IsNullOrEmpty(tableAllies) ? string.Empty : tableAllies.TrimEnd();

            return $"SELECT {SelectAll(tableAllies)} FROM {TableName} {allies} {sqlWhere} {forJsonString}";
        }

    }
}

