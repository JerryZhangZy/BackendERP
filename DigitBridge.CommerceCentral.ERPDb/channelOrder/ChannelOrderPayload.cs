

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using DigitBridge.Base.Utility;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Request and Response payload object
    /// </summary>
    [Serializable()]
    public class ChannelOrderPayload : PayloadBase
    {
        /// <summary>
        /// Delegate function to load request parameter to payload property.
        /// </summary>
        public override IDictionary<string, Action<string>> GetOtherParameters()
        {
            return new Dictionary<string, Action<string>>
            {
                { "CentralOrderUuids", val => CentralOrderUuids = val.Split(",").Where(i=>!i.IsZero()).Distinct().ToList() }
            };
        }


        #region multiple Dto list 

        /// <summary>
        /// (Response Data) Array of ChannelOrder entity object which load by uuid array.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Array of entity object which load by uuid array.")]
        public IList<ChannelOrderDataDto> ChannelOrders { get; set; }
        [JsonIgnore] public virtual bool HasChannelOrders => ChannelOrders != null && ChannelOrders.Count > 0;
        public bool ShouldSerializeChannelOrders() => HasChannelOrders;

        #endregion multiple Dto list


        #region single Dto object

        /// <summary>
        /// (Request and Response Data) Single ChannelOrder entity object which load by Number.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) Single entity object which load by Number.")]
        public ChannelOrderDataDto ChannelOrder { get; set; }
        [JsonIgnore] public virtual bool HasChannelOrder => ChannelOrder != null;
        public bool ShouldSerializeChannelOrder() => HasChannelOrder;

        #endregion single Dto object


        #region list service

        /// <summary>
        /// (Response Data) List result which load filter and paging.
        /// </summary>
        [OpenApiPropertyDescription("(Response Data) List result which load filter and paging.")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder ChannelOrderList { get; set; }
        [JsonIgnore] public virtual bool HasChannelOrderList => ChannelOrderList != null && ChannelOrderList.Length > 0;
        public bool ShouldSerializeChannelOrderList() => HasChannelOrderList;

        /// <summary>
        /// (Response Data) List result count which load filter and paging.
        /// </summary>
        public int ChannelOrderListCount { get; set; }
        [JsonIgnore] public virtual bool HasChannelOrderListCount => ChannelOrderListCount > 0;
        public bool ShouldSerializeChannelOrderListCount() => HasChannelOrderListCount;

        #endregion list service

        #region Re send central order to erp

        /// <summary>
        /// (Request Parameter) Array of uuid that will be resend to erp.
        /// </summary>
        [OpenApiPropertyDescription(" (Request Parameter) Array of uuid that will be resend to erp.")]
        public IList<string> CentralOrderUuids { get; set; } = new List<string>();
        [JsonIgnore]
        public virtual bool HasCentralOrderUuids => CentralOrderUuids != null && CentralOrderUuids.Count > 0;
        public bool ShouldSerializeSalesOrderUuids() => HasCentralOrderUuids;

        /// <summary>
        /// successfully send loaded central order uuid to erp.
        /// </summary>
        public List<string> SentCentralOrderUuids { get; set; } = new List<string>();
        [JsonIgnore]
        public virtual bool HasSentCentralOrderUuids => SentCentralOrderUuids != null && SentCentralOrderUuids.Count > 0;
        public bool ShouldSerializeSentCentralOrderUuids() => HasSentCentralOrderUuids;

        #endregion
    }
}

