
              

              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderDCAssignmentLine.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("OrderDCAssignmentLine")]
    [PrimaryKey("OrderDCAssignmentLineNum", AutoIncrement = true)]
    [UniqueId("OrderDCAssignmentLineUuid")]
    [DtoName("OrderDCAssignmentLineDto")]
    public partial class OrderDCAssignmentLine : TableRepository<OrderDCAssignmentLine, long>
    {

        public OrderDCAssignmentLine() : base() {}
        public OrderDCAssignmentLine(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
		[ResultColumn(Name = "OrderDCAssignmentLineNum", IncludeInAutoSelect = IncludeInAutoSelect.Yes)] 
		protected long _orderDCAssignmentLineNum; 
		[XmlIgnore, IgnoreCompare] 
		public virtual long OrderDCAssignmentLineNum
		{
			get => _orderDCAssignmentLineNum;
			set => _orderDCAssignmentLineNum = value;
		}
		[XmlIgnore, IgnoreCompare] 
		public override long RowNum
		{
			get => OrderDCAssignmentLineNum.ToLong();
			set => OrderDCAssignmentLineNum = value.ToLong();
		}
		[JsonIgnore, XmlIgnore, IgnoreCompare] 
		public override bool IsNew => OrderDCAssignmentLineNum <= 0; 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("ChannelNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelNum;

        [Column("ChannelAccountNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelAccountNum;

        [Column("OrderDCAssignmentNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _orderDCAssignmentNum;

        [Column("CentralOrderNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _centralOrderNum;

        [Column("CentralOrderLineNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _centralOrderLineNum;

        [Column("ChannelOrderID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _channelOrderID;

        [Column("CentralProductNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _centralProductNum;

        [Column("DistributionProductNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _distributionProductNum;

        [Column("SKU",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _sKU;

        [Column("ChannelItemID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _channelItemID;

        [Column("OrderQty",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _orderQty;

        [Column("DBChannelOrderLineRowID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _dBChannelOrderLineRowID;

        [Column("CentralOrderUuid",SqlDbType.VarChar,NotNull=true)]
        private string _centralOrderUuid;

        [Column("CentralOrderLineUuid",SqlDbType.VarChar,NotNull=true)]
        private string _centralOrderLineUuid;

        [Column("OrderDCAssignmentUuid",SqlDbType.VarChar,NotNull=true)]
        private string _orderDCAssignmentUuid;

        [Column("OrderDCAssignmentLineUuid",SqlDbType.VarChar,NotNull=true)]
        private string _orderDCAssignmentLineUuid;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => OrderDCAssignmentLineUuid; 
		public void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(OrderDCAssignmentLineUuid)) 
				OrderDCAssignmentLineUuid = Guid.NewGuid().ToString(); 
		}
		[IgnoreCompare] 
		public override bool IsEmpty => ( string.IsNullOrWhiteSpace(SKU) );
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
        public virtual int ChannelNum
        {
            get
            {
				return _channelNum; 
            }
            set
            {
				_channelNum = value; 
				OnPropertyChanged("ChannelNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The unique number of this profileâ€™s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
        public virtual int ChannelAccountNum
        {
            get
            {
				return _channelAccountNum; 
            }
            set
            {
				_channelAccountNum = value; 
				OnPropertyChanged("ChannelAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Assignment header number. <br> Title: Assignment Number: Display: false, Editable: false
		/// </summary>
        public virtual long OrderDCAssignmentNum
        {
            get
            {
				return _orderDCAssignmentNum; 
            }
            set
            {
				_orderDCAssignmentNum = value; 
				OnPropertyChanged("OrderDCAssignmentNum", value);
            }
        }

		/// <summary>
		/// (Readonly) CentralOrderNum. <br> Title: Central Order: Display: true, Editable: false
		/// </summary>
        public virtual long CentralOrderNum
        {
            get
            {
				return _centralOrderNum; 
            }
            set
            {
				_centralOrderNum = value; 
				OnPropertyChanged("CentralOrderNum", value);
            }
        }

		/// <summary>
		/// (Readonly) CentralOrder Line Number. <br> Title: Central Order Line#: Display: true, Editable: false
		/// </summary>
        public virtual long CentralOrderLineNum
        {
            get
            {
				return _centralOrderLineNum; 
            }
            set
            {
				_centralOrderLineNum = value; 
				OnPropertyChanged("CentralOrderLineNum", value);
            }
        }

		/// <summary>
		/// (Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false
		/// </summary>
        public virtual string ChannelOrderID
        {
            get
            {
				return _channelOrderID?.TrimEnd(); 
            }
            set
            {
				_channelOrderID = value.TruncateTo(130); 
				OnPropertyChanged("ChannelOrderID", value);
            }
        }

		/// <summary>
		/// (Readonly) Product Unique Number. <br> Title: Product Number: Display: true, Editable: false
		/// </summary>
        public virtual long CentralProductNum
        {
            get
            {
				return _centralProductNum; 
            }
            set
            {
				_centralProductNum = value; 
				OnPropertyChanged("CentralProductNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Product DC link Unique Number. <br> Title: Product DC Number: Display: true, Editable: false
		/// </summary>
        public virtual long DistributionProductNum
        {
            get
            {
				return _distributionProductNum; 
            }
            set
            {
				_distributionProductNum = value; 
				OnPropertyChanged("DistributionProductNum", value);
            }
        }

		/// <summary>
		/// Product SKU. <br> Title: SKU, Display: true, Editable: true
		/// </summary>
        public virtual string SKU
        {
            get
            {
				return _sKU?.TrimEnd(); 
            }
            set
            {
				_sKU = value.TruncateTo(100); 
				OnPropertyChanged("SKU", value);
            }
        }

		/// <summary>
		/// Channel Item ID. <br> Title: Channel Item ID, Display: true, Editable: true
		/// </summary>
        public virtual string ChannelItemID
        {
            get
            {
				return _channelItemID?.TrimEnd(); 
            }
            set
            {
				_channelItemID = value.TruncateTo(50); 
				OnPropertyChanged("ChannelItemID", value);
            }
        }

		/// <summary>
		/// Item Order Qty. <br> Title: Order Qty, Display: true, Editable: true
		/// </summary>
        public virtual decimal OrderQty
        {
            get
            {
				return _orderQty; 
            }
            set
            {
				_orderQty = value; 
				OnPropertyChanged("OrderQty", value);
            }
        }

		/// <summary>
		/// DB Channel Order Line RowID. <br> Title: Channel Order Line RowID, Display: true, Editable: true
		/// </summary>
        public virtual string DBChannelOrderLineRowID
        {
            get
            {
				return _dBChannelOrderLineRowID?.TrimEnd(); 
            }
            set
            {
				_dBChannelOrderLineRowID = value.TruncateTo(50); 
				OnPropertyChanged("DBChannelOrderLineRowID", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string CentralOrderUuid
        {
            get
            {
				return _centralOrderUuid?.TrimEnd(); 
            }
            set
            {
				_centralOrderUuid = value.TruncateTo(50); 
				OnPropertyChanged("CentralOrderUuid", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string CentralOrderLineUuid
        {
            get
            {
				return _centralOrderLineUuid?.TrimEnd(); 
            }
            set
            {
				_centralOrderLineUuid = value.TruncateTo(50); 
				OnPropertyChanged("CentralOrderLineUuid", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string OrderDCAssignmentUuid
        {
            get
            {
				return _orderDCAssignmentUuid?.TrimEnd(); 
            }
            set
            {
				_orderDCAssignmentUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderDCAssignmentUuid", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string OrderDCAssignmentLineUuid
        {
            get
            {
				return _orderDCAssignmentLineUuid?.TrimEnd(); 
            }
            set
            {
				_orderDCAssignmentLineUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderDCAssignmentLineUuid", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private DCAssignmentData Parent { get; set; }
		public DCAssignmentData GetParent() => Parent;
		public OrderDCAssignmentLine SetParent(DCAssignmentData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			OrderDCAssignmentLineUuid = Guid.NewGuid().ToString(); 
			_orderDCAssignmentLineNum = 0; 
            return;
        }

        public override OrderDCAssignmentLine Clear()
        {
            base.Clear();
			_orderDCAssignmentLineNum = default(long); 
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_channelNum = default(int); 
			_channelAccountNum = default(int); 
			_orderDCAssignmentNum = default(long); 
			_centralOrderNum = default(long); 
			_centralOrderLineNum = default(long); 
			_channelOrderID = String.Empty; 
			_centralProductNum = default(long); 
			_distributionProductNum = default(long); 
			_sKU = String.Empty; 
			_channelItemID = String.Empty; 
			_orderQty = default(decimal); 
			_dBChannelOrderLineRowID = String.Empty; 
			_centralOrderUuid = String.Empty; 
			_centralOrderLineUuid = String.Empty; 
			_orderDCAssignmentUuid = String.Empty; 
			_orderDCAssignmentLineUuid = String.Empty; 
            ClearChildren();
            return this;
        }

        public virtual OrderDCAssignmentLine CheckIntegrity()
        {
            CheckUniqueId();
            return this;
        }

        public virtual OrderDCAssignmentLine ClearChildren()
        {
            return this;
        }

        public virtual OrderDCAssignmentLine NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(OrderDCAssignmentLine data)
        {
            if (data is null) return;
            return;
        }

		public static IList<OrderDCAssignmentLine> FindByOrderDCAssignmentUuid(IDataBaseFactory dbFactory, string orderDCAssignmentUuid)
		{
			return dbFactory.Find<OrderDCAssignmentLine>("WHERE OrderDCAssignmentUuid = @0 ORDER BY OrderDCAssignmentLineNum ", orderDCAssignmentUuid).ToList();
		}
		public static long CountByOrderDCAssignmentUuid(IDataBaseFactory dbFactory, string orderDCAssignmentUuid)
		{
			return dbFactory.Count<OrderDCAssignmentLine>("WHERE OrderDCAssignmentUuid = @0 ", orderDCAssignmentUuid);
		}
		public static async Task<IList<OrderDCAssignmentLine>> FindByAsyncOrderDCAssignmentUuid(IDataBaseFactory dbFactory, string orderDCAssignmentUuid)
		{
			return (await dbFactory.FindAsync<OrderDCAssignmentLine>("WHERE OrderDCAssignmentUuid = @0 ORDER BY OrderDCAssignmentLineNum ", orderDCAssignmentUuid)).ToList();
		}
		public static async Task<long> CountByAsyncOrderDCAssignmentUuid(IDataBaseFactory dbFactory, string orderDCAssignmentUuid)
		{
			return await dbFactory.CountAsync<OrderDCAssignmentLine>("WHERE OrderDCAssignmentUuid = @0 ", orderDCAssignmentUuid);
		}
		public static IList<OrderDCAssignmentLine> FindByOrderDCAssignmentNum(IDataBaseFactory dbFactory, long orderDCAssignmentNum)
		{
			return dbFactory.Find<OrderDCAssignmentLine>("WHERE OrderDCAssignmentNum = @0 ORDER BY OrderDCAssignmentLineNum ", orderDCAssignmentNum).ToList();
		}
		public static long CountByOrderDCAssignmentNum(IDataBaseFactory dbFactory, long orderDCAssignmentNum)
		{
			return dbFactory.Count<OrderDCAssignmentLine>("WHERE OrderDCAssignmentNum = @0 ", orderDCAssignmentNum);
		}
		public static async Task<IList<OrderDCAssignmentLine>> FindByAsyncOrderDCAssignmentNum(IDataBaseFactory dbFactory, long orderDCAssignmentNum)
		{
			return (await dbFactory.FindAsync<OrderDCAssignmentLine>("WHERE OrderDCAssignmentNum = @0 ORDER BY OrderDCAssignmentLineNum ", orderDCAssignmentNum)).ToList();
		}
		public static async Task<long> CountByAsyncOrderDCAssignmentNum(IDataBaseFactory dbFactory, long orderDCAssignmentNum)
		{
			return await dbFactory.CountAsync<OrderDCAssignmentLine>("WHERE OrderDCAssignmentNum = @0 ", orderDCAssignmentNum);
		}


        #endregion Methods - Generated 
    }
}



