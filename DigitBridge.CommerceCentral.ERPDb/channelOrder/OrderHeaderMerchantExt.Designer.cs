              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderHeaderMerchantExt.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("OrderHeaderMerchantExt")]
    [PrimaryKey("RowNum", AutoIncrement = true)]
    [UniqueId("CentralOrderUuid")]
    [DtoName("OrderHeaderMerchantExtDto")]
    public partial class OrderHeaderMerchantExt : TableRepository<OrderHeaderMerchantExt, long>
    {

        public OrderHeaderMerchantExt() : base() {}
        public OrderHeaderMerchantExt(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("CentralOrderNum",SqlDbType.BigInt,NotNull=true)]
        private long _centralOrderNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("ChannelNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelNum;

        [Column("ChannelAccountNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelAccountNum;

        [Column("PoType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _poType;

        [Column("HubOrderID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _hubOrderID;

        [Column("MerchantID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantID;

        [Column("MerchantVendorID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantVendorID;

        [Column("MerchantOrderDateUtc",SqlDbType.DateTime)]
        private DateTime? _merchantOrderDateUtc;

        [Column("PackingSlipMessage",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _packingSlipMessage;

        [Column("VendorNotes",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _vendorNotes;

        [Column("VendorWarehouseID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _vendorWarehouseID;

        [Column("VendorCommitmentID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _vendorCommitmentID;

        [Column("SalesDivision",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _salesDivision;

        [Column("MerchantPhone1",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantPhone1;

        [Column("MerchantPhone2",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantPhone2;

        [Column("MerchantPhone3",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantPhone3;

        [Column("MerchantCustomerID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantCustomerID;

        [Column("MerchantCustomerOrderID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantCustomerOrderID;

        [Column("MerchantCustomerOrderDateUtc",SqlDbType.DateTime)]
        private DateTime? _merchantCustomerOrderDateUtc;

        [Column("MerchantCustomerPaymentMethod",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantCustomerPaymentMethod;

        [Column("CancelAfterDateUtc",SqlDbType.DateTime)]
        private DateTime? _cancelAfterDateUtc;

        [Column("RequiredShipDateUtc",SqlDbType.DateTime)]
        private DateTime? _requiredShipDateUtc;

        [Column("PromoID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _promoID;

        [Column("PromoStartDateUtc",SqlDbType.DateTime)]
        private DateTime? _promoStartDateUtc;

        [Column("MerchandiseTypeCode",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchandiseTypeCode;

        [Column("AuthorizationForExpenseNumber",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _authorizationForExpenseNumber;

        [Column("ShipToAccountNO",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _shipToAccountNO;

        [Column("ShipToGender",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _shipToGender;

        [Column("ShipToReceipt",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _shipToReceipt;

        [Column("ShipToVcdID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _shipToVcdID;

        [Column("ShipToDEANumber",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _shipToDEANumber;

        [Column("MerchantBillToAddressType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantBillToAddressType;

        [Column("SoldToAddressType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _soldToAddressType;

        [Column("SoldToAttention",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToAttention;

        [Column("SoldToCompanyname",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToCompanyname;

        [Column("SoldToName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToName;

        [Column("SoldToFirstName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToFirstName;

        [Column("SoldToLastName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToLastName;

        [Column("SoldToAddressLine1",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToAddressLine1;

        [Column("SoldToAddressLine2",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToAddressLine2;

        [Column("SoldToAddressLine3",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToAddressLine3;

        [Column("SoldToCity",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToCity;

        [Column("SoldToState",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToState;

        [Column("SoldToPostalCode",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToPostalCode;

        [Column("SoldToPostalCodeExt",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToPostalCodeExt;

        [Column("SoldToCountry",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToCountry;

        [Column("SoldToEmail",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToEmail;

        [Column("SoldToDayPhone",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _soldToDayPhone;

        [Column("SoldToNightPhone",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _soldToNightPhone;

        [Column("SoldToTaxExemptNO",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _soldToTaxExemptNO;

        [Column("SoldToAccountNO",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToAccountNO;

        [Column("SoldToGender",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _soldToGender;

        [Column("CustomerGiftMessage",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _customerGiftMessage;

        [Column("ReturnAddressee",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnAddressee;

        [Column("ReturnAddressLine1",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnAddressLine1;

        [Column("ReturnAddressLine2",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnAddressLine2;

        [Column("ReturnAddrelssLine3",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnAddrelssLine3;

        [Column("ReturnCity",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnCity;

        [Column("ReturnState",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnState;

        [Column("ReturnPostalCode",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnPostalCode;

        [Column("ReturnPostalCodeExt",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnPostalCodeExt;

        [Column("ReturnCountry",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnCountry;

        [Column("ReturnEmail",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _returnEmail;

        [Column("ReturnDayPhone",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _returnDayPhone;

        [Column("ReturnNightPhone",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _returnNightPhone;

        [Column("ReturnLocationID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _returnLocationID;

        [Column("InvoiceToAddressType",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToAddressType;

        [Column("InvoiceToAttention",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToAttention;

        [Column("InvoiceToCompany",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToCompany;

        [Column("InoviceToName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _inoviceToName;

        [Column("InvoiceToFirstName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToFirstName;

        [Column("InvoiceToLastName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToLastName;

        [Column("InvoiceToAddressLine1",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToAddressLine1;

        [Column("InvoiceToAddressLine2",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToAddressLine2;

        [Column("InvoiceToAddressLine3",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToAddressLine3;

        [Column("InvoiceToCity",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToCity;

        [Column("InvoiceToState",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToState;

        [Column("InvoiceToPostalCode",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToPostalCode;

        [Column("InvoiceToPostalCodeExt",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToPostalCodeExt;

        [Column("InvoiceToCountry",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToCountry;

        [Column("InvoiceToDayPhone",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToDayPhone;

        [Column("InvoviceToNightPhone",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _invoviceToNightPhone;

        [Column("InvoiceToEmail",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToEmail;

        [Column("InvoiceToAccountNO",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToAccountNO;

        [Column("InvoiceToTaxExemptNO",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToTaxExemptNO;

        [Column("InvoiceToGender",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _invoiceToGender;

        [Column("BuyingContract",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _buyingContract;

        [Column("CcParty",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _ccParty;

        [Column("APVendor",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _aPVendor;

        [Column("RMEmail",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _rMEmail;

        [Column("MarketingInserts",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _marketingInserts;

        [Column("BusinessRuleCode",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _businessRuleCode;

        [Column("ReleaseNumber",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _releaseNumber;

        [Column("MerchantBuyerName",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _merchantBuyerName;

        [Column("SalesCurrency",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _salesCurrency;

        [Column("FreightCollectAccount",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _freightCollectAccount;

        [Column("FreightPaymentTerms",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _freightPaymentTerms;

        [Column("MerchantSalesAgent",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _merchantSalesAgent;

        [Column("PaymentMethodDescription",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _paymentMethodDescription;

        [Column("OrderFulfillmentFee",SqlDbType.Money,NotNull=true,IsDefault=true)]
        private decimal _orderFulfillmentFee;

        [Column("PackingSlipTemplateIndicator",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _packingSlipTemplateIndicator;

        [Column("SalesTax",SqlDbType.Money,NotNull=true,IsDefault=true)]
        private decimal _salesTax;

        [Column("ResponsibilityRole",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _responsibilityRole;

        [Column("ExpectedProcessingPriority",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _expectedProcessingPriority;

        [Column("PreassignedWaybillNumber",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _preassignedWaybillNumber;

        [Column("URL",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _uRL;

        [Column("ShipperID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _shipperID;

        [Column("FileIdentifier",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _fileIdentifier;

        [Column("ERPCustomerOrderNumber",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _eRPCustomerOrderNumber;

        [Column("CustomerOrderPOIndex",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _customerOrderPOIndex;

        [Column("MultiSource",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _multiSource;

        [Column("NetDaysDue",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _netDaysDue;

        [Column("TotalOrderCost",SqlDbType.Money,NotNull=true,IsDefault=true)]
        private decimal _totalOrderCost;

        [Column("UpdateDateUtc",SqlDbType.DateTime)]
        private DateTime? _updateDateUtc;

        [Column("EnterBy",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _enterBy;

        [Column("UpdateBy",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _updateBy;

        [Column("CentralOrderUuid",SqlDbType.VarChar,NotNull=true)]
        private string _centralOrderUuid;

        [Column("CentralOrderHeaderMerchantExtUuid",SqlDbType.VarChar,NotNull=true)]
        private string _centralOrderHeaderMerchantExtUuid;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => CentralOrderUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(CentralOrderUuid)) 
				CentralOrderUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// Unique in Commerce Central internal system, DatabaseID + CentralOrderNum is DigitBridge unique
		/// </summary>
        public virtual long CentralOrderNum
        {
            get
            {
				return _centralOrderNum; 
            }
            set
            {
				_centralOrderNum = value; 
				OnPropertyChanged("CentralOrderNum", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// The channel which sells the item. Refer to Master Account Channel Setting
		/// </summary>
        public virtual int ChannelNum
        {
            get
            {
				return _channelNum; 
            }
            set
            {
				_channelNum = value; 
				OnPropertyChanged("ChannelNum", value);
            }
        }

		/// <summary>
		/// The unique number of this profile’s channel account
		/// </summary>
        public virtual int ChannelAccountNum
        {
            get
            {
				return _channelAccountNum; 
            }
            set
            {
				_channelAccountNum = value; 
				OnPropertyChanged("ChannelAccountNum", value);
            }
        }

		/// <summary>
		/// A value indicates the Po Type. For example, “R” indicates this order was that this purchase order is being re-issued.
		/// </summary>
        public virtual string PoType
        {
            get
            {
				return _poType?.TrimEnd(); 
            }
            set
            {
				_poType = value.TruncateTo(20); 
				OnPropertyChanged("PoType", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string HubOrderID
        {
            get
            {
				return _hubOrderID?.TrimEnd(); 
            }
            set
            {
				_hubOrderID = value.TruncateTo(50); 
				OnPropertyChanged("HubOrderID", value);
            }
        }

		/// <summary>
		/// A value represents the merchant ID on the integration partner
		/// </summary>
        public virtual string MerchantID
        {
            get
            {
				return _merchantID?.TrimEnd(); 
            }
            set
            {
				_merchantID = value.TruncateTo(50); 
				OnPropertyChanged("MerchantID", value);
            }
        }

		/// <summary>
		/// Vendor ID assigned by the merchant
		/// </summary>
        public virtual string MerchantVendorID
        {
            get
            {
				return _merchantVendorID?.TrimEnd(); 
            }
            set
            {
				_merchantVendorID = value.TruncateTo(50); 
				OnPropertyChanged("MerchantVendorID", value);
            }
        }

		/// <summary>
		/// Purchase order date assigned by the merchant
		/// </summary>
        public virtual DateTime? MerchantOrderDateUtc
        {
            get
            {
				if (!AllowNull && _merchantOrderDateUtc is null) 
					_merchantOrderDateUtc = new DateTime().MinValueSql(); 
				return _merchantOrderDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_merchantOrderDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("MerchantOrderDateUtc", value);
				}
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string PackingSlipMessage
        {
            get
            {
				return _packingSlipMessage?.TrimEnd(); 
            }
            set
            {
				_packingSlipMessage = value.TruncateTo(500); 
				OnPropertyChanged("PackingSlipMessage", value);
            }
        }

		/// <summary>
		/// Special instructions to the vendor regarding this purchase order.
		/// </summary>
        public virtual string VendorNotes
        {
            get
            {
				return _vendorNotes?.TrimEnd(); 
            }
            set
            {
				_vendorNotes = value.TruncateTo(2000); 
				OnPropertyChanged("VendorNotes", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string VendorWarehouseID
        {
            get
            {
				return _vendorWarehouseID?.TrimEnd(); 
            }
            set
            {
				_vendorWarehouseID = value.TruncateTo(30); 
				OnPropertyChanged("VendorWarehouseID", value);
            }
        }

		/// <summary>
		/// An ID from a previous fulfillment commitment transaction from the vendor to the merchant.
		/// </summary>
        public virtual string VendorCommitmentID
        {
            get
            {
				return _vendorCommitmentID?.TrimEnd(); 
            }
            set
            {
				_vendorCommitmentID = value.TruncateTo(30); 
				OnPropertyChanged("VendorCommitmentID", value);
            }
        }

		/// <summary>
		/// The merchant-defined code for the retailing brand.
		/// </summary>
        public virtual string SalesDivision
        {
            get
            {
				return _salesDivision?.TrimEnd(); 
            }
            set
            {
				_salesDivision = value.TruncateTo(50); 
				OnPropertyChanged("SalesDivision", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantPhone1
        {
            get
            {
				return _merchantPhone1?.TrimEnd(); 
            }
            set
            {
				_merchantPhone1 = value.TruncateTo(50); 
				OnPropertyChanged("MerchantPhone1", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantPhone2
        {
            get
            {
				return _merchantPhone2?.TrimEnd(); 
            }
            set
            {
				_merchantPhone2 = value.TruncateTo(50); 
				OnPropertyChanged("MerchantPhone2", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantPhone3
        {
            get
            {
				return _merchantPhone3?.TrimEnd(); 
            }
            set
            {
				_merchantPhone3 = value.TruncateTo(50); 
				OnPropertyChanged("MerchantPhone3", value);
            }
        }

		/// <summary>
		/// The merchant’s ID for the online customer who S 50 placed the order. This is sometimes referred to as ‘member number’.
		/// </summary>
        public virtual string MerchantCustomerID
        {
            get
            {
				return _merchantCustomerID?.TrimEnd(); 
            }
            set
            {
				_merchantCustomerID = value.TruncateTo(50); 
				OnPropertyChanged("MerchantCustomerID", value);
            }
        }

		/// <summary>
		/// The ID of the end customer’s order. Usually retailers will use this field.
		/// </summary>
        public virtual string MerchantCustomerOrderID
        {
            get
            {
				return _merchantCustomerOrderID?.TrimEnd(); 
            }
            set
            {
				_merchantCustomerOrderID = value.TruncateTo(100); 
				OnPropertyChanged("MerchantCustomerOrderID", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime? MerchantCustomerOrderDateUtc
        {
            get
            {
				if (!AllowNull && _merchantCustomerOrderDateUtc is null) 
					_merchantCustomerOrderDateUtc = new DateTime().MinValueSql(); 
				return _merchantCustomerOrderDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_merchantCustomerOrderDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("MerchantCustomerOrderDateUtc", value);
				}
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantCustomerPaymentMethod
        {
            get
            {
				return _merchantCustomerPaymentMethod?.TrimEnd(); 
            }
            set
            {
				_merchantCustomerPaymentMethod = value.TruncateTo(50); 
				OnPropertyChanged("MerchantCustomerPaymentMethod", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime? CancelAfterDateUtc
        {
            get
            {
				if (!AllowNull && _cancelAfterDateUtc is null) 
					_cancelAfterDateUtc = new DateTime().MinValueSql(); 
				return _cancelAfterDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_cancelAfterDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("CancelAfterDateUtc", value);
				}
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime? RequiredShipDateUtc
        {
            get
            {
				if (!AllowNull && _requiredShipDateUtc is null) 
					_requiredShipDateUtc = new DateTime().MinValueSql(); 
				return _requiredShipDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_requiredShipDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("RequiredShipDateUtc", value);
				}
            }
        }

		/// <summary>
		/// The merchant assigned ID for the promotion under which the order was taken.
		/// </summary>
        public virtual string PromoID
        {
            get
            {
				return _promoID?.TrimEnd(); 
            }
            set
            {
				_promoID = value.TruncateTo(50); 
				OnPropertyChanged("PromoID", value);
            }
        }

		/// <summary>
		/// The date which the promotion begins.
		/// </summary>
        public virtual DateTime? PromoStartDateUtc
        {
            get
            {
				if (!AllowNull && _promoStartDateUtc is null) 
					_promoStartDateUtc = new DateTime().MinValueSql(); 
				return _promoStartDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_promoStartDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("PromoStartDateUtc", value);
				}
            }
        }

		/// <summary>
		/// A merchant defined code for orders indicating the class of the merchandise contained in the order.
		/// </summary>
        public virtual string MerchandiseTypeCode
        {
            get
            {
				return _merchandiseTypeCode?.TrimEnd(); 
            }
            set
            {
				_merchandiseTypeCode = value.TruncateTo(50); 
				OnPropertyChanged("MerchandiseTypeCode", value);
            }
        }

		/// <summary>
		/// The merchant assigned authorization number.
		/// </summary>
        public virtual string AuthorizationForExpenseNumber
        {
            get
            {
				return _authorizationForExpenseNumber?.TrimEnd(); 
            }
            set
            {
				_authorizationForExpenseNumber = value.TruncateTo(50); 
				OnPropertyChanged("AuthorizationForExpenseNumber", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ShipToAccountNO
        {
            get
            {
				return _shipToAccountNO?.TrimEnd(); 
            }
            set
            {
				_shipToAccountNO = value.TruncateTo(50); 
				OnPropertyChanged("ShipToAccountNO", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ShipToGender
        {
            get
            {
				return _shipToGender?.TrimEnd(); 
            }
            set
            {
				_shipToGender = value.TruncateTo(20); 
				OnPropertyChanged("ShipToGender", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ShipToReceipt
        {
            get
            {
				return _shipToReceipt?.TrimEnd(); 
            }
            set
            {
				_shipToReceipt = value.TruncateTo(50); 
				OnPropertyChanged("ShipToReceipt", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ShipToVcdID
        {
            get
            {
				return _shipToVcdID?.TrimEnd(); 
            }
            set
            {
				_shipToVcdID = value.TruncateTo(50); 
				OnPropertyChanged("ShipToVcdID", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ShipToDEANumber
        {
            get
            {
				return _shipToDEANumber?.TrimEnd(); 
            }
            set
            {
				_shipToDEANumber = value.TruncateTo(50); 
				OnPropertyChanged("ShipToDEANumber", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantBillToAddressType
        {
            get
            {
				return _merchantBillToAddressType?.TrimEnd(); 
            }
            set
            {
				_merchantBillToAddressType = value.TruncateTo(50); 
				OnPropertyChanged("MerchantBillToAddressType", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToAddressType
        {
            get
            {
				return _soldToAddressType?.TrimEnd(); 
            }
            set
            {
				_soldToAddressType = value.TruncateTo(50); 
				OnPropertyChanged("SoldToAddressType", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToAttention
        {
            get
            {
				return _soldToAttention?.TrimEnd(); 
            }
            set
            {
				_soldToAttention = value.TruncateTo(100); 
				OnPropertyChanged("SoldToAttention", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToCompanyname
        {
            get
            {
				return _soldToCompanyname?.TrimEnd(); 
            }
            set
            {
				_soldToCompanyname = value.TruncateTo(100); 
				OnPropertyChanged("SoldToCompanyname", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToName
        {
            get
            {
				return _soldToName?.TrimEnd(); 
            }
            set
            {
				_soldToName = value.TruncateTo(100); 
				OnPropertyChanged("SoldToName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToFirstName
        {
            get
            {
				return _soldToFirstName?.TrimEnd(); 
            }
            set
            {
				_soldToFirstName = value.TruncateTo(50); 
				OnPropertyChanged("SoldToFirstName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToLastName
        {
            get
            {
				return _soldToLastName?.TrimEnd(); 
            }
            set
            {
				_soldToLastName = value.TruncateTo(50); 
				OnPropertyChanged("SoldToLastName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToAddressLine1
        {
            get
            {
				return _soldToAddressLine1?.TrimEnd(); 
            }
            set
            {
				_soldToAddressLine1 = value.TruncateTo(100); 
				OnPropertyChanged("SoldToAddressLine1", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToAddressLine2
        {
            get
            {
				return _soldToAddressLine2?.TrimEnd(); 
            }
            set
            {
				_soldToAddressLine2 = value.TruncateTo(100); 
				OnPropertyChanged("SoldToAddressLine2", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToAddressLine3
        {
            get
            {
				return _soldToAddressLine3?.TrimEnd(); 
            }
            set
            {
				_soldToAddressLine3 = value.TruncateTo(100); 
				OnPropertyChanged("SoldToAddressLine3", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToCity
        {
            get
            {
				return _soldToCity?.TrimEnd(); 
            }
            set
            {
				_soldToCity = value.TruncateTo(50); 
				OnPropertyChanged("SoldToCity", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToState
        {
            get
            {
				return _soldToState?.TrimEnd(); 
            }
            set
            {
				_soldToState = value.TruncateTo(50); 
				OnPropertyChanged("SoldToState", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToPostalCode
        {
            get
            {
				return _soldToPostalCode?.TrimEnd(); 
            }
            set
            {
				_soldToPostalCode = value.TruncateTo(50); 
				OnPropertyChanged("SoldToPostalCode", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToPostalCodeExt
        {
            get
            {
				return _soldToPostalCodeExt?.TrimEnd(); 
            }
            set
            {
				_soldToPostalCodeExt = value.TruncateTo(10); 
				OnPropertyChanged("SoldToPostalCodeExt", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToCountry
        {
            get
            {
				return _soldToCountry?.TrimEnd(); 
            }
            set
            {
				_soldToCountry = value.TruncateTo(50); 
				OnPropertyChanged("SoldToCountry", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToEmail
        {
            get
            {
				return _soldToEmail?.TrimEnd(); 
            }
            set
            {
				_soldToEmail = value.TruncateTo(100); 
				OnPropertyChanged("SoldToEmail", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToDayPhone
        {
            get
            {
				return _soldToDayPhone?.TrimEnd(); 
            }
            set
            {
				_soldToDayPhone = value.TruncateTo(50); 
				OnPropertyChanged("SoldToDayPhone", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToNightPhone
        {
            get
            {
				return _soldToNightPhone?.TrimEnd(); 
            }
            set
            {
				_soldToNightPhone = value.TruncateTo(50); 
				OnPropertyChanged("SoldToNightPhone", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToTaxExemptNO
        {
            get
            {
				return _soldToTaxExemptNO?.TrimEnd(); 
            }
            set
            {
				_soldToTaxExemptNO = value.TruncateTo(50); 
				OnPropertyChanged("SoldToTaxExemptNO", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToAccountNO
        {
            get
            {
				return _soldToAccountNO?.TrimEnd(); 
            }
            set
            {
				_soldToAccountNO = value.TruncateTo(50); 
				OnPropertyChanged("SoldToAccountNO", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SoldToGender
        {
            get
            {
				return _soldToGender?.TrimEnd(); 
            }
            set
            {
				_soldToGender = value.TruncateTo(20); 
				OnPropertyChanged("SoldToGender", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string CustomerGiftMessage
        {
            get
            {
				return _customerGiftMessage?.TrimEnd(); 
            }
            set
            {
				_customerGiftMessage = value.TruncateTo(200); 
				OnPropertyChanged("CustomerGiftMessage", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnAddressee
        {
            get
            {
				return _returnAddressee?.TrimEnd(); 
            }
            set
            {
				_returnAddressee = value.TruncateTo(100); 
				OnPropertyChanged("ReturnAddressee", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnAddressLine1
        {
            get
            {
				return _returnAddressLine1?.TrimEnd(); 
            }
            set
            {
				_returnAddressLine1 = value.TruncateTo(100); 
				OnPropertyChanged("ReturnAddressLine1", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnAddressLine2
        {
            get
            {
				return _returnAddressLine2?.TrimEnd(); 
            }
            set
            {
				_returnAddressLine2 = value.TruncateTo(100); 
				OnPropertyChanged("ReturnAddressLine2", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnAddrelssLine3
        {
            get
            {
				return _returnAddrelssLine3?.TrimEnd(); 
            }
            set
            {
				_returnAddrelssLine3 = value.TruncateTo(100); 
				OnPropertyChanged("ReturnAddrelssLine3", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnCity
        {
            get
            {
				return _returnCity?.TrimEnd(); 
            }
            set
            {
				_returnCity = value.TruncateTo(50); 
				OnPropertyChanged("ReturnCity", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnState
        {
            get
            {
				return _returnState?.TrimEnd(); 
            }
            set
            {
				_returnState = value.TruncateTo(50); 
				OnPropertyChanged("ReturnState", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnPostalCode
        {
            get
            {
				return _returnPostalCode?.TrimEnd(); 
            }
            set
            {
				_returnPostalCode = value.TruncateTo(50); 
				OnPropertyChanged("ReturnPostalCode", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnPostalCodeExt
        {
            get
            {
				return _returnPostalCodeExt?.TrimEnd(); 
            }
            set
            {
				_returnPostalCodeExt = value.TruncateTo(10); 
				OnPropertyChanged("ReturnPostalCodeExt", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnCountry
        {
            get
            {
				return _returnCountry?.TrimEnd(); 
            }
            set
            {
				_returnCountry = value.TruncateTo(50); 
				OnPropertyChanged("ReturnCountry", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnEmail
        {
            get
            {
				return _returnEmail?.TrimEnd(); 
            }
            set
            {
				_returnEmail = value.TruncateTo(100); 
				OnPropertyChanged("ReturnEmail", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnDayPhone
        {
            get
            {
				return _returnDayPhone?.TrimEnd(); 
            }
            set
            {
				_returnDayPhone = value.TruncateTo(50); 
				OnPropertyChanged("ReturnDayPhone", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReturnNightPhone
        {
            get
            {
				return _returnNightPhone?.TrimEnd(); 
            }
            set
            {
				_returnNightPhone = value.TruncateTo(50); 
				OnPropertyChanged("ReturnNightPhone", value);
            }
        }

		/// <summary>
		/// This field will contain the account number or ID for the Return To party.
		/// </summary>
        public virtual string ReturnLocationID
        {
            get
            {
				return _returnLocationID?.TrimEnd(); 
            }
            set
            {
				_returnLocationID = value.TruncateTo(50); 
				OnPropertyChanged("ReturnLocationID", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToAddressType
        {
            get
            {
				return _invoiceToAddressType?.TrimEnd(); 
            }
            set
            {
				_invoiceToAddressType = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToAddressType", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToAttention
        {
            get
            {
				return _invoiceToAttention?.TrimEnd(); 
            }
            set
            {
				_invoiceToAttention = value.TruncateTo(100); 
				OnPropertyChanged("InvoiceToAttention", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToCompany
        {
            get
            {
				return _invoiceToCompany?.TrimEnd(); 
            }
            set
            {
				_invoiceToCompany = value.TruncateTo(100); 
				OnPropertyChanged("InvoiceToCompany", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InoviceToName
        {
            get
            {
				return _inoviceToName?.TrimEnd(); 
            }
            set
            {
				_inoviceToName = value.TruncateTo(100); 
				OnPropertyChanged("InoviceToName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToFirstName
        {
            get
            {
				return _invoiceToFirstName?.TrimEnd(); 
            }
            set
            {
				_invoiceToFirstName = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToFirstName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToLastName
        {
            get
            {
				return _invoiceToLastName?.TrimEnd(); 
            }
            set
            {
				_invoiceToLastName = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToLastName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToAddressLine1
        {
            get
            {
				return _invoiceToAddressLine1?.TrimEnd(); 
            }
            set
            {
				_invoiceToAddressLine1 = value.TruncateTo(100); 
				OnPropertyChanged("InvoiceToAddressLine1", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToAddressLine2
        {
            get
            {
				return _invoiceToAddressLine2?.TrimEnd(); 
            }
            set
            {
				_invoiceToAddressLine2 = value.TruncateTo(100); 
				OnPropertyChanged("InvoiceToAddressLine2", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToAddressLine3
        {
            get
            {
				return _invoiceToAddressLine3?.TrimEnd(); 
            }
            set
            {
				_invoiceToAddressLine3 = value.TruncateTo(100); 
				OnPropertyChanged("InvoiceToAddressLine3", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToCity
        {
            get
            {
				return _invoiceToCity?.TrimEnd(); 
            }
            set
            {
				_invoiceToCity = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToCity", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToState
        {
            get
            {
				return _invoiceToState?.TrimEnd(); 
            }
            set
            {
				_invoiceToState = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToState", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToPostalCode
        {
            get
            {
				return _invoiceToPostalCode?.TrimEnd(); 
            }
            set
            {
				_invoiceToPostalCode = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToPostalCode", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToPostalCodeExt
        {
            get
            {
				return _invoiceToPostalCodeExt?.TrimEnd(); 
            }
            set
            {
				_invoiceToPostalCodeExt = value.TruncateTo(10); 
				OnPropertyChanged("InvoiceToPostalCodeExt", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToCountry
        {
            get
            {
				return _invoiceToCountry?.TrimEnd(); 
            }
            set
            {
				_invoiceToCountry = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToCountry", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToDayPhone
        {
            get
            {
				return _invoiceToDayPhone?.TrimEnd(); 
            }
            set
            {
				_invoiceToDayPhone = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToDayPhone", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoviceToNightPhone
        {
            get
            {
				return _invoviceToNightPhone?.TrimEnd(); 
            }
            set
            {
				_invoviceToNightPhone = value.TruncateTo(50); 
				OnPropertyChanged("InvoviceToNightPhone", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToEmail
        {
            get
            {
				return _invoiceToEmail?.TrimEnd(); 
            }
            set
            {
				_invoiceToEmail = value.TruncateTo(100); 
				OnPropertyChanged("InvoiceToEmail", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToAccountNO
        {
            get
            {
				return _invoiceToAccountNO?.TrimEnd(); 
            }
            set
            {
				_invoiceToAccountNO = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToAccountNO", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToTaxExemptNO
        {
            get
            {
				return _invoiceToTaxExemptNO?.TrimEnd(); 
            }
            set
            {
				_invoiceToTaxExemptNO = value.TruncateTo(50); 
				OnPropertyChanged("InvoiceToTaxExemptNO", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string InvoiceToGender
        {
            get
            {
				return _invoiceToGender?.TrimEnd(); 
            }
            set
            {
				_invoiceToGender = value.TruncateTo(20); 
				OnPropertyChanged("InvoiceToGender", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string BuyingContract
        {
            get
            {
				return _buyingContract?.TrimEnd(); 
            }
            set
            {
				_buyingContract = value.TruncateTo(100); 
				OnPropertyChanged("BuyingContract", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string CcParty
        {
            get
            {
				return _ccParty?.TrimEnd(); 
            }
            set
            {
				_ccParty = value.TruncateTo(100); 
				OnPropertyChanged("CcParty", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string APVendor
        {
            get
            {
				return _aPVendor?.TrimEnd(); 
            }
            set
            {
				_aPVendor = value.TruncateTo(100); 
				OnPropertyChanged("APVendor", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string RMEmail
        {
            get
            {
				return _rMEmail?.TrimEnd(); 
            }
            set
            {
				_rMEmail = value.TruncateTo(100); 
				OnPropertyChanged("RMEmail", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MarketingInserts
        {
            get
            {
				return _marketingInserts?.TrimEnd(); 
            }
            set
            {
				_marketingInserts = value.TruncateTo(100); 
				OnPropertyChanged("MarketingInserts", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string BusinessRuleCode
        {
            get
            {
				return _businessRuleCode?.TrimEnd(); 
            }
            set
            {
				_businessRuleCode = value.TruncateTo(100); 
				OnPropertyChanged("BusinessRuleCode", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ReleaseNumber
        {
            get
            {
				return _releaseNumber?.TrimEnd(); 
            }
            set
            {
				_releaseNumber = value.TruncateTo(50); 
				OnPropertyChanged("ReleaseNumber", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantBuyerName
        {
            get
            {
				return _merchantBuyerName?.TrimEnd(); 
            }
            set
            {
				_merchantBuyerName = value.TruncateTo(100); 
				OnPropertyChanged("MerchantBuyerName", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string SalesCurrency
        {
            get
            {
				return _salesCurrency?.TrimEnd(); 
            }
            set
            {
				_salesCurrency = value.TruncateTo(10); 
				OnPropertyChanged("SalesCurrency", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string FreightCollectAccount
        {
            get
            {
				return _freightCollectAccount?.TrimEnd(); 
            }
            set
            {
				_freightCollectAccount = value.TruncateTo(50); 
				OnPropertyChanged("FreightCollectAccount", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string FreightPaymentTerms
        {
            get
            {
				return _freightPaymentTerms?.TrimEnd(); 
            }
            set
            {
				_freightPaymentTerms = value.TruncateTo(50); 
				OnPropertyChanged("FreightPaymentTerms", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MerchantSalesAgent
        {
            get
            {
				return _merchantSalesAgent?.TrimEnd(); 
            }
            set
            {
				_merchantSalesAgent = value.TruncateTo(50); 
				OnPropertyChanged("MerchantSalesAgent", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string PaymentMethodDescription
        {
            get
            {
				return _paymentMethodDescription?.TrimEnd(); 
            }
            set
            {
				_paymentMethodDescription = value.TruncateTo(50); 
				OnPropertyChanged("PaymentMethodDescription", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual decimal OrderFulfillmentFee
        {
            get
            {
				return _orderFulfillmentFee; 
            }
            set
            {
				_orderFulfillmentFee = value; 
				OnPropertyChanged("OrderFulfillmentFee", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string PackingSlipTemplateIndicator
        {
            get
            {
				return _packingSlipTemplateIndicator?.TrimEnd(); 
            }
            set
            {
				_packingSlipTemplateIndicator = value.TruncateTo(50); 
				OnPropertyChanged("PackingSlipTemplateIndicator", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual decimal SalesTax
        {
            get
            {
				return _salesTax; 
            }
            set
            {
				_salesTax = value; 
				OnPropertyChanged("SalesTax", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ResponsibilityRole
        {
            get
            {
				return _responsibilityRole?.TrimEnd(); 
            }
            set
            {
				_responsibilityRole = value.TruncateTo(50); 
				OnPropertyChanged("ResponsibilityRole", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ExpectedProcessingPriority
        {
            get
            {
				return _expectedProcessingPriority?.TrimEnd(); 
            }
            set
            {
				_expectedProcessingPriority = value.TruncateTo(50); 
				OnPropertyChanged("ExpectedProcessingPriority", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string PreassignedWaybillNumber
        {
            get
            {
				return _preassignedWaybillNumber?.TrimEnd(); 
            }
            set
            {
				_preassignedWaybillNumber = value.TruncateTo(50); 
				OnPropertyChanged("PreassignedWaybillNumber", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string URL
        {
            get
            {
				return _uRL?.TrimEnd(); 
            }
            set
            {
				_uRL = value.TruncateTo(100); 
				OnPropertyChanged("URL", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ShipperID
        {
            get
            {
				return _shipperID?.TrimEnd(); 
            }
            set
            {
				_shipperID = value.TruncateTo(50); 
				OnPropertyChanged("ShipperID", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string FileIdentifier
        {
            get
            {
				return _fileIdentifier?.TrimEnd(); 
            }
            set
            {
				_fileIdentifier = value.TruncateTo(100); 
				OnPropertyChanged("FileIdentifier", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string ERPCustomerOrderNumber
        {
            get
            {
				return _eRPCustomerOrderNumber?.TrimEnd(); 
            }
            set
            {
				_eRPCustomerOrderNumber = value.TruncateTo(50); 
				OnPropertyChanged("ERPCustomerOrderNumber", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string CustomerOrderPOIndex
        {
            get
            {
				return _customerOrderPOIndex?.TrimEnd(); 
            }
            set
            {
				_customerOrderPOIndex = value.TruncateTo(50); 
				OnPropertyChanged("CustomerOrderPOIndex", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual string MultiSource
        {
            get
            {
				return _multiSource?.TrimEnd(); 
            }
            set
            {
				_multiSource = value.TruncateTo(3); 
				OnPropertyChanged("MultiSource", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual int NetDaysDue
        {
            get
            {
				return _netDaysDue; 
            }
            set
            {
				_netDaysDue = value; 
				OnPropertyChanged("NetDaysDue", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual decimal TotalOrderCost
        {
            get
            {
				return _totalOrderCost; 
            }
            set
            {
				_totalOrderCost = value; 
				OnPropertyChanged("TotalOrderCost", value);
            }
        }

		/// <summary>
		/// (Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false
		/// </summary>
        public virtual DateTime? UpdateDateUtc
        {
            get
            {
				if (!AllowNull && _updateDateUtc is null) 
					_updateDateUtc = new DateTime().MinValueSql(); 
				return _updateDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_updateDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("UpdateDateUtc", value);
				}
            }
        }

		/// <summary>
		/// (Readonly) User who created this order. <br> Title: Created By, Display: true, Editable: false
		/// </summary>
        public virtual string EnterBy
        {
            get
            {
				return _enterBy?.TrimEnd(); 
            }
            set
            {
				_enterBy = value.TruncateTo(100); 
				OnPropertyChanged("EnterBy", value);
            }
        }

		/// <summary>
		/// (Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false
		/// </summary>
        public virtual string UpdateBy
        {
            get
            {
				return _updateBy?.TrimEnd(); 
            }
            set
            {
				_updateBy = value.TruncateTo(100); 
				OnPropertyChanged("UpdateBy", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string CentralOrderUuid
        {
            get
            {
				return _centralOrderUuid?.TrimEnd(); 
            }
            set
            {
				_centralOrderUuid = value.TruncateTo(50); 
				OnPropertyChanged("CentralOrderUuid", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder line
		/// </summary>
        public virtual string CentralOrderHeaderMerchantExtUuid
        {
            get
            {
				return _centralOrderHeaderMerchantExtUuid?.TrimEnd(); 
            }
            set
            {
				_centralOrderHeaderMerchantExtUuid = value.TruncateTo(50); 
				OnPropertyChanged("CentralOrderHeaderMerchantExtUuid", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private ChannelOrderData Parent { get; set; }
		public ChannelOrderData GetParent() => Parent;
		public OrderHeaderMerchantExt SetParent(ChannelOrderData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			CentralOrderUuid = Guid.NewGuid().ToString(); 
            return;
        }

        public override OrderHeaderMerchantExt Clear()
        {
            base.Clear();
			_centralOrderNum = default(long); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_channelNum = default(int); 
			_channelAccountNum = default(int); 
			_poType = String.Empty; 
			_hubOrderID = String.Empty; 
			_merchantID = String.Empty; 
			_merchantVendorID = String.Empty; 
			_merchantOrderDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_packingSlipMessage = String.Empty; 
			_vendorNotes = String.Empty; 
			_vendorWarehouseID = String.Empty; 
			_vendorCommitmentID = String.Empty; 
			_salesDivision = String.Empty; 
			_merchantPhone1 = String.Empty; 
			_merchantPhone2 = String.Empty; 
			_merchantPhone3 = String.Empty; 
			_merchantCustomerID = String.Empty; 
			_merchantCustomerOrderID = String.Empty; 
			_merchantCustomerOrderDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_merchantCustomerPaymentMethod = String.Empty; 
			_cancelAfterDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_requiredShipDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_promoID = String.Empty; 
			_promoStartDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_merchandiseTypeCode = String.Empty; 
			_authorizationForExpenseNumber = String.Empty; 
			_shipToAccountNO = String.Empty; 
			_shipToGender = String.Empty; 
			_shipToReceipt = String.Empty; 
			_shipToVcdID = String.Empty; 
			_shipToDEANumber = String.Empty; 
			_merchantBillToAddressType = String.Empty; 
			_soldToAddressType = String.Empty; 
			_soldToAttention = String.Empty; 
			_soldToCompanyname = String.Empty; 
			_soldToName = String.Empty; 
			_soldToFirstName = String.Empty; 
			_soldToLastName = String.Empty; 
			_soldToAddressLine1 = String.Empty; 
			_soldToAddressLine2 = String.Empty; 
			_soldToAddressLine3 = String.Empty; 
			_soldToCity = String.Empty; 
			_soldToState = String.Empty; 
			_soldToPostalCode = String.Empty; 
			_soldToPostalCodeExt = String.Empty; 
			_soldToCountry = String.Empty; 
			_soldToEmail = String.Empty; 
			_soldToDayPhone = String.Empty; 
			_soldToNightPhone = String.Empty; 
			_soldToTaxExemptNO = String.Empty; 
			_soldToAccountNO = String.Empty; 
			_soldToGender = String.Empty; 
			_customerGiftMessage = String.Empty; 
			_returnAddressee = String.Empty; 
			_returnAddressLine1 = String.Empty; 
			_returnAddressLine2 = String.Empty; 
			_returnAddrelssLine3 = String.Empty; 
			_returnCity = String.Empty; 
			_returnState = String.Empty; 
			_returnPostalCode = String.Empty; 
			_returnPostalCodeExt = String.Empty; 
			_returnCountry = String.Empty; 
			_returnEmail = String.Empty; 
			_returnDayPhone = String.Empty; 
			_returnNightPhone = String.Empty; 
			_returnLocationID = String.Empty; 
			_invoiceToAddressType = String.Empty; 
			_invoiceToAttention = String.Empty; 
			_invoiceToCompany = String.Empty; 
			_inoviceToName = String.Empty; 
			_invoiceToFirstName = String.Empty; 
			_invoiceToLastName = String.Empty; 
			_invoiceToAddressLine1 = String.Empty; 
			_invoiceToAddressLine2 = String.Empty; 
			_invoiceToAddressLine3 = String.Empty; 
			_invoiceToCity = String.Empty; 
			_invoiceToState = String.Empty; 
			_invoiceToPostalCode = String.Empty; 
			_invoiceToPostalCodeExt = String.Empty; 
			_invoiceToCountry = String.Empty; 
			_invoiceToDayPhone = String.Empty; 
			_invoviceToNightPhone = String.Empty; 
			_invoiceToEmail = String.Empty; 
			_invoiceToAccountNO = String.Empty; 
			_invoiceToTaxExemptNO = String.Empty; 
			_invoiceToGender = String.Empty; 
			_buyingContract = String.Empty; 
			_ccParty = String.Empty; 
			_aPVendor = String.Empty; 
			_rMEmail = String.Empty; 
			_marketingInserts = String.Empty; 
			_businessRuleCode = String.Empty; 
			_releaseNumber = String.Empty; 
			_merchantBuyerName = String.Empty; 
			_salesCurrency = String.Empty; 
			_freightCollectAccount = String.Empty; 
			_freightPaymentTerms = String.Empty; 
			_merchantSalesAgent = String.Empty; 
			_paymentMethodDescription = String.Empty; 
			_orderFulfillmentFee = default(decimal); 
			_packingSlipTemplateIndicator = String.Empty; 
			_salesTax = default(decimal); 
			_responsibilityRole = String.Empty; 
			_expectedProcessingPriority = String.Empty; 
			_preassignedWaybillNumber = String.Empty; 
			_uRL = String.Empty; 
			_shipperID = String.Empty; 
			_fileIdentifier = String.Empty; 
			_eRPCustomerOrderNumber = String.Empty; 
			_customerOrderPOIndex = String.Empty; 
			_multiSource = String.Empty; 
			_netDaysDue = default(int); 
			_totalOrderCost = default(decimal); 
			_updateDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_enterBy = String.Empty; 
			_updateBy = String.Empty; 
			_centralOrderUuid = String.Empty; 
			_centralOrderHeaderMerchantExtUuid = String.Empty; 
            ClearChildren();
            return this;
        }

        public override OrderHeaderMerchantExt CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual OrderHeaderMerchantExt ClearChildren()
        {
            return this;
        }

        public virtual OrderHeaderMerchantExt NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(OrderHeaderMerchantExt data)
        {
            if (data is null) return;
            return;
        }


		public override OrderHeaderMerchantExt ConvertDbFieldsToData()
		{
			base.ConvertDbFieldsToData();
			return this;
		}
		public override OrderHeaderMerchantExt ConvertDataFieldsToDb()
		{
			base.ConvertDataFieldsToDb();
			UpdateDateUtc =DateTime.UtcNow;
			return this;
		}

        #endregion Methods - Generated 
    }
}



