

              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderDCAssignmentHeader.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("OrderDCAssignmentHeader")]
    [PrimaryKey("OrderDCAssignmentNum", AutoIncrement = true)]
    [UniqueId("OrderDCAssignmentUuid")]
    [DtoName("OrderDCAssignmentHeaderDto")]
    public partial class OrderDCAssignmentHeader : TableRepository<OrderDCAssignmentHeader, long>
    {

        public OrderDCAssignmentHeader() : base() {}
        public OrderDCAssignmentHeader(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
		[ResultColumn(Name = "OrderDCAssignmentNum", IncludeInAutoSelect = IncludeInAutoSelect.Yes)] 
		protected long _orderDCAssignmentNum; 
		[XmlIgnore, IgnoreCompare] 
		public virtual long OrderDCAssignmentNum
		{
			get => _orderDCAssignmentNum;
			set => _orderDCAssignmentNum = value;
		}
		[XmlIgnore, IgnoreCompare] 
		public override long RowNum
		{
			get => OrderDCAssignmentNum.ToLong();
			set => OrderDCAssignmentNum = value.ToLong();
		}
		[JsonIgnore, XmlIgnore, IgnoreCompare] 
		public override bool IsNew => OrderDCAssignmentNum <= 0; 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("ChannelNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelNum;

        [Column("ChannelAccountNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _channelAccountNum;

        [Column("CentralOrderNum",SqlDbType.BigInt,NotNull=true,IsDefault=true)]
        private long _centralOrderNum;

        [Column("ChannelOrderID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _channelOrderID;

        [Column("ShippingCost",SqlDbType.Money,NotNull=true,IsDefault=true)]
        private decimal _shippingCost;

        [Column("InsuranceCost",SqlDbType.Money,NotNull=true,IsDefault=true)]
        private decimal _insuranceCost;

        [Column("TaxCost",SqlDbType.Money,NotNull=true,IsDefault=true)]
        private decimal _taxCost;

        [Column("FulfillmentType",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _fulfillmentType;

        [Column("DistributionCenterNum",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _distributionCenterNum;

        [Column("SellerWarehouseID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _sellerWarehouseID;

        [Column("UseSystemShippingLabel",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _useSystemShippingLabel;

        [Column("UseChannelPackingSlip",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _useChannelPackingSlip;

        [Column("UseSystemReturnLabel",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _useSystemReturnLabel;

        [Column("ShippingLabelFormat",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _shippingLabelFormat;

        [Column("ReturnLabelFormat",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _returnLabelFormat;

        [Column("DBChannelOrderHeaderRowID",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _dBChannelOrderHeaderRowID;

        [Column("FulfillmentProcessStatus",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _fulfillmentProcessStatus;

        [Column("IntegrationStatus",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _integrationStatus;

        [Column("IntegrationDateUtc",SqlDbType.DateTime)]
        private DateTime? _integrationDateUtc;

        [Column("CentralOrderUuid",SqlDbType.VarChar,NotNull=true)]
        private string _centralOrderUuid;

        [Column("OrderDCAssignmentUuid",SqlDbType.VarChar,NotNull=true)]
        private string _orderDCAssignmentUuid;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => OrderDCAssignmentUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(OrderDCAssignmentUuid)) 
				OrderDCAssignmentUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
        public virtual int ChannelNum
        {
            get
            {
				return _channelNum; 
            }
            set
            {
				_channelNum = value; 
				OnPropertyChanged("ChannelNum", value);
            }
        }

		/// <summary>
		/// (Readonly) The unique number of this profileâ€™s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
        public virtual int ChannelAccountNum
        {
            get
            {
				return _channelAccountNum; 
            }
            set
            {
				_channelAccountNum = value; 
				OnPropertyChanged("ChannelAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) CentralOrderNum. <br> Title: Central Order: Display: true, Editable: false
		/// </summary>
        public virtual long CentralOrderNum
        {
            get
            {
				return _centralOrderNum; 
            }
            set
            {
				_centralOrderNum = value; 
				OnPropertyChanged("CentralOrderNum", value);
            }
        }

		/// <summary>
		/// (Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false
		/// </summary>
        public virtual string ChannelOrderID
        {
            get
            {
				return _channelOrderID?.TrimEnd(); 
            }
            set
            {
				_channelOrderID = value.TruncateTo(50); 
				OnPropertyChanged("ChannelOrderID", value);
            }
        }

		/// <summary>
		/// Shipping fee. <br> Title: Shipping, Display: true, Editable: true
		/// </summary>
        public virtual decimal ShippingCost
        {
            get
            {
				return _shippingCost; 
            }
            set
            {
				_shippingCost = value; 
				OnPropertyChanged("ShippingCost", value);
            }
        }

		/// <summary>
		/// Insurance cost. <br> Title: Insurance, Display: true, Editable: true
		/// </summary>
        public virtual decimal InsuranceCost
        {
            get
            {
				return _insuranceCost; 
            }
            set
            {
				_insuranceCost = value; 
				OnPropertyChanged("InsuranceCost", value);
            }
        }

		/// <summary>
		/// Tax Amount. <br> Title: Tax, Display: true, Editable: true
		/// </summary>
        public virtual decimal TaxCost
        {
            get
            {
				return _taxCost; 
            }
            set
            {
				_taxCost = value; 
				OnPropertyChanged("TaxCost", value);
            }
        }

		/// <summary>
		/// Fulfillment Type. <br> Title: Fulfillment Type, Display: true, Editable: true
		/// </summary>
        public virtual int FulfillmentType
        {
            get
            {
				return _fulfillmentType; 
            }
            set
            {
				_fulfillmentType = value; 
				OnPropertyChanged("FulfillmentType", value);
            }
        }

		/// <summary>
		/// Distribution Center Number. <br> Title: DC#, Display: true, Editable: true
		/// </summary>
        public virtual int DistributionCenterNum
        {
            get
            {
				return _distributionCenterNum; 
            }
            set
            {
				_distributionCenterNum = value; 
				OnPropertyChanged("DistributionCenterNum", value);
            }
        }

		/// <summary>
		/// Seller Warehouse ID. <br> Title: Seller Warehouse, Display: true, Editable: true
		/// </summary>
        public virtual string SellerWarehouseID
        {
            get
            {
				return _sellerWarehouseID?.TrimEnd(); 
            }
            set
            {
				_sellerWarehouseID = value.TruncateTo(50); 
				OnPropertyChanged("SellerWarehouseID", value);
            }
        }

		/// <summary>
		/// Use System Shipping Label. <br> Title: Use System Shipping Label, Display: true, Editable: true
		/// </summary>
        public virtual int UseSystemShippingLabel
        {
            get
            {
				return _useSystemShippingLabel; 
            }
            set
            {
				_useSystemShippingLabel = value; 
				OnPropertyChanged("UseSystemShippingLabel", value);
            }
        }

		/// <summary>
		/// Use Channel Packing Slip Format. <br> Title: Use Channel Packing Slip, Display: true, Editable: true
		/// </summary>
        public virtual int UseChannelPackingSlip
        {
            get
            {
				return _useChannelPackingSlip; 
            }
            set
            {
				_useChannelPackingSlip = value; 
				OnPropertyChanged("UseChannelPackingSlip", value);
            }
        }

		/// <summary>
		/// Use System Return Label. <br> Title: Use System Return Label, Display: true, Editable: true
		/// </summary>
        public virtual int UseSystemReturnLabel
        {
            get
            {
				return _useSystemReturnLabel; 
            }
            set
            {
				_useSystemReturnLabel = value; 
				OnPropertyChanged("UseSystemReturnLabel", value);
            }
        }

		/// <summary>
		/// Shipping Label Format. <br> Title: Shipping Label Format, Display: true, Editable: true
		/// </summary>
        public virtual int ShippingLabelFormat
        {
            get
            {
				return _shippingLabelFormat; 
            }
            set
            {
				_shippingLabelFormat = value; 
				OnPropertyChanged("ShippingLabelFormat", value);
            }
        }

		/// <summary>
		/// Return Label Format. <br> Title: Return Label Format, Display: true, Editable: true
		/// </summary>
        public virtual int ReturnLabelFormat
        {
            get
            {
				return _returnLabelFormat; 
            }
            set
            {
				_returnLabelFormat = value; 
				OnPropertyChanged("ReturnLabelFormat", value);
            }
        }

		/// <summary>
		/// DB Channel Order Header RowID. <br> Title: Header RowID, Display: true, Editable: true
		/// </summary>
        public virtual string DBChannelOrderHeaderRowID
        {
            get
            {
				return _dBChannelOrderHeaderRowID?.TrimEnd(); 
            }
            set
            {
				_dBChannelOrderHeaderRowID = value.TruncateTo(50); 
				OnPropertyChanged("DBChannelOrderHeaderRowID", value);
            }
        }

		/// <summary>
		/// Fulfillment Process Status. <br> Title: Fulfillment Status, Display: true, Editable: true
		/// </summary>
        public virtual int FulfillmentProcessStatus
        {
            get
            {
				return _fulfillmentProcessStatus; 
            }
            set
            {
				_fulfillmentProcessStatus = value; 
				OnPropertyChanged("FulfillmentProcessStatus", value);
            }
        }

		/// <summary>
		/// Integration Status. <br> Title: Integration Status, Display: true, Editable: true
		/// </summary>
        public virtual int IntegrationStatus
        {
            get
            {
				return _integrationStatus; 
            }
            set
            {
				_integrationStatus = value; 
				OnPropertyChanged("IntegrationStatus", value);
            }
        }

		/// <summary>
		/// Integration Date Utc. <br> Title: Integration Date, Display: true, Editable: true
		/// </summary>
        public virtual DateTime? IntegrationDateUtc
        {
            get
            {
				if (!AllowNull && _integrationDateUtc is null) 
					_integrationDateUtc = new DateTime().MinValueSql(); 
				return _integrationDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_integrationDateUtc = (value is null) ? (DateTime?) null : value?.Date.ToSqlSafeValue(); 
					OnPropertyChanged("IntegrationDateUtc", value);
				}
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string CentralOrderUuid
        {
            get
            {
				return _centralOrderUuid?.TrimEnd(); 
            }
            set
            {
				_centralOrderUuid = value.TruncateTo(50); 
				OnPropertyChanged("CentralOrderUuid", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
        public virtual string OrderDCAssignmentUuid
        {
            get
            {
				return _orderDCAssignmentUuid?.TrimEnd(); 
            }
            set
            {
				_orderDCAssignmentUuid = value.TruncateTo(50); 
				OnPropertyChanged("OrderDCAssignmentUuid", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private DCAssignmentData Parent { get; set; }
		public DCAssignmentData GetParent() => Parent;
		public OrderDCAssignmentHeader SetParent(DCAssignmentData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			OrderDCAssignmentUuid = Guid.NewGuid().ToString(); 
			_orderDCAssignmentNum = 0; 
            return;
        }

        public override OrderDCAssignmentHeader Clear()
        {
            base.Clear();
			_orderDCAssignmentNum = default(long); 
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_channelNum = default(int); 
			_channelAccountNum = default(int); 
			_centralOrderNum = default(long); 
			_channelOrderID = String.Empty; 
			_shippingCost = default(decimal); 
			_insuranceCost = default(decimal); 
			_taxCost = default(decimal); 
			_fulfillmentType = default(int); 
			_distributionCenterNum = default(int); 
			_sellerWarehouseID = String.Empty; 
			_useSystemShippingLabel = default(int); 
			_useChannelPackingSlip = default(int); 
			_useSystemReturnLabel = default(int); 
			_shippingLabelFormat = default(int); 
			_returnLabelFormat = default(int); 
			_dBChannelOrderHeaderRowID = String.Empty; 
			_fulfillmentProcessStatus = default(int); 
			_integrationStatus = default(int); 
			_integrationDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_centralOrderUuid = String.Empty; 
			_orderDCAssignmentUuid = String.Empty; 
            ClearChildren();
            return this;
        }

        public override OrderDCAssignmentHeader CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual OrderDCAssignmentHeader ClearChildren()
        {
            return this;
        }

        public virtual OrderDCAssignmentHeader NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(OrderDCAssignmentHeader data)
        {
            if (data is null) return;
            return;
        }

		public static IList<OrderDCAssignmentHeader> FindByCentralOrderUuid(IDataBaseFactory dbFactory, string centralOrderUuid)
		{
			return dbFactory.Find<OrderDCAssignmentHeader>("WHERE CentralOrderUuid = @0 ", centralOrderUuid).ToList();
		}
		public static long CountByCentralOrderUuid(IDataBaseFactory dbFactory, string centralOrderUuid)
		{
			return dbFactory.Count<OrderDCAssignmentHeader>("WHERE CentralOrderUuid = @0 ", centralOrderUuid);
		}
		public static async Task<IList<OrderDCAssignmentHeader>> FindByAsyncCentralOrderUuid(IDataBaseFactory dbFactory, string centralOrderUuid)
		{
			return (await dbFactory.FindAsync<OrderDCAssignmentHeader>("WHERE CentralOrderUuid = @0 ", centralOrderUuid)).ToList();
		}
		public static async Task<long> CountByAsyncCentralOrderUuid(IDataBaseFactory dbFactory, string centralOrderUuid)
		{
			return await dbFactory.CountAsync<OrderDCAssignmentHeader>("WHERE CentralOrderUuid = @0 ", centralOrderUuid);
		}


        #endregion Methods - Generated 
    }
}



