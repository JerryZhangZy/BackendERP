              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderLineMerchantExt Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class OrderLineMerchantExtDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public long? CentralOrderLineNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderLineNum => CentralOrderLineNum != null;

		/// <summary>
		/// Each database has its own default value.
		/// </summary>
		[OpenApiPropertyDescription("Each database has its own default value.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? DatabaseNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDatabaseNum => DatabaseNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public long? CentralOrderNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderNum => CentralOrderNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? MasterAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMasterAccountNum => MasterAccountNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? ProfileNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProfileNum => ProfileNum != null;

		/// <summary>
		/// The channel which sells the item. Refer to Master Account Channel Setting
		/// </summary>
		[OpenApiPropertyDescription("The channel which sells the item. Refer to Master Account Channel Setting")]
        public int? ChannelNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelNum => ChannelNum != null;

		/// <summary>
		/// The unique number of this profile’s channel account
		/// </summary>
		[OpenApiPropertyDescription("The unique number of this profile’s channel account")]
        public int? ChannelAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelAccountNum => ChannelAccountNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(130, ErrorMessage = "The ChannelOrderID value cannot exceed 130 characters. ")]
        public string ChannelOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelOrderID => ChannelOrderID != null;

		/// <summary>
		/// sequentially ordered I 4 number assigned to each line item included in the purchase order.
		/// </summary>
		[OpenApiPropertyDescription("sequentially ordered I 4 number assigned to each line item included in the purchase order.")]
        public int? ChannelOrderLineNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelOrderLineNum => ChannelOrderLineNum != null;

		/// <summary>
		/// This field will contain a non-sequentially ordered number assigned by the retailer to each line Item in the purchase order.
		/// </summary>
		[OpenApiPropertyDescription("This field will contain a non-sequentially ordered number assigned by the retailer to each line Item in the purchase order.")]
        public int? MerchantLineNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantLineNumber => MerchantLineNumber != null;

		/// <summary>
		/// This field will contain a non-sequentially ordered I 4 number assigned to each line in the customer order.
		/// </summary>
		[OpenApiPropertyDescription("This field will contain a non-sequentially ordered I 4 number assigned to each line in the customer order.")]
        public int? CustomerOrderLineNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerOrderLineNumber => CustomerOrderLineNumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The HubLineID value cannot exceed 50 characters. ")]
        public string HubLineID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasHubLineID => HubLineID != null;

		/// <summary>
		/// The merchant’s product ID for the product on the line item.
		/// </summary>
		[OpenApiPropertyDescription("The merchant’s product ID for the product on the line item.")]
        [StringLength(50, ErrorMessage = "The MerchantNRProductID value cannot exceed 50 characters. ")]
        public string MerchantNRProductID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantNRProductID => MerchantNRProductID != null;

		/// <summary>
		/// The merchant’s SKU for the product on the line item.
		/// </summary>
		[OpenApiPropertyDescription("The merchant’s SKU for the product on the line item.")]
        [StringLength(50, ErrorMessage = "The MerchantSKU value cannot exceed 50 characters. ")]
        public string MerchantSKU { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantSKU => MerchantSKU != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The VendorSKU value cannot exceed 50 characters. ")]
        public string VendorSKU { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorSKU => VendorSKU != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ManufacturerSKU value cannot exceed 50 characters. ")]
        public string ManufacturerSKU { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasManufacturerSKU => ManufacturerSKU != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShoppingCartSKU value cannot exceed 50 characters. ")]
        public string ShoppingCartSKU { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShoppingCartSKU => ShoppingCartSKU != null;

		/// <summary>
		/// Vendor oriented description of the product
		/// </summary>
		[OpenApiPropertyDescription("Vendor oriented description of the product")]
        [StringLength(255, ErrorMessage = "The VendorDescription value cannot exceed 255 characters. ")]
        public string VendorDescription { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorDescription => VendorDescription != null;

		/// <summary>
		/// A vendor assigned style number for the product on the line item.
		/// </summary>
		[OpenApiPropertyDescription("A vendor assigned style number for the product on the line item.")]
        [StringLength(255, ErrorMessage = "The VendorStyleNumber value cannot exceed 255 characters. ")]
        public string VendorStyleNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorStyleNumber => VendorStyleNumber != null;

		/// <summary>
		/// A vendor description / color for the color of the product on the line item.
		/// </summary>
		[OpenApiPropertyDescription("A vendor description / color for the color of the product on the line item.")]
        [StringLength(50, ErrorMessage = "The VendorColorDescription value cannot exceed 50 characters. ")]
        public string VendorColorDescription { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorColorDescription => VendorColorDescription != null;

		/// <summary>
		/// A vendor description / code for the size of the product on the line item.
		/// </summary>
		[OpenApiPropertyDescription("A vendor description / code for the size of the product on the line item.")]
        [StringLength(20, ErrorMessage = "The VendorSizeDescription value cannot exceed 20 characters. ")]
        public string VendorSizeDescription { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorSizeDescription => VendorSizeDescription != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The MerchantColorCode value cannot exceed 20 characters. ")]
        public string MerchantColorCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantColorCode => MerchantColorCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The MerchantSizeCode value cannot exceed 20 characters. ")]
        public string MerchantSizeCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantSizeCode => MerchantSizeCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantSetCode value cannot exceed 50 characters. ")]
        public string MerchantSetCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantSetCode => MerchantSetCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(255, ErrorMessage = "The MerchantDescription value cannot exceed 255 characters. ")]
        public string MerchantDescription { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantDescription => MerchantDescription != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(255, ErrorMessage = "The MerchantDescription2 value cannot exceed 255 characters. ")]
        public string MerchantDescription2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantDescription2 => MerchantDescription2 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(255, ErrorMessage = "The MerchantDescription3 value cannot exceed 255 characters. ")]
        public string MerchantDescription3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantDescription3 => MerchantDescription3 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The MerchantColorSizeDescription value cannot exceed 20 characters. ")]
        public string MerchantColorSizeDescription { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantColorSizeDescription => MerchantColorSizeDescription != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? FullRetailPrice { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFullRetailPrice => FullRetailPrice != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The EncodedPrice value cannot exceed 50 characters. ")]
        public string EncodedPrice { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEncodedPrice => EncodedPrice != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? UnitShippingWeight { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUnitShippingWeight => UnitShippingWeight != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The WeightUnit value cannot exceed 20 characters. ")]
        public string WeightUnit { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasWeightUnit => WeightUnit != null;

		/// <summary>
		/// The price, per unit, charged to the end customer (this will be the price that the customer sees on the website).
		/// </summary>
		[OpenApiPropertyDescription("The price, per unit, charged to the end customer (this will be the price that the customer sees on the website).")]
        public decimal? CustomerUnitPrice { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerUnitPrice => CustomerUnitPrice != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? UnitCostToMerchant { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUnitCostToMerchant => UnitCostToMerchant != null;

		/// <summary>
		/// The wholesale extended cost, what the vendor is expected to charge the merchant for the line item.
		/// </summary>
		[OpenApiPropertyDescription("The wholesale extended cost, what the vendor is expected to charge the merchant for the line item.")]
        public decimal? LineMerchandiseCost { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasLineMerchandiseCost => LineMerchandiseCost != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? CustomerMerchandiseAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerMerchandiseAmount => CustomerMerchandiseAmount != null;

		/// <summary>
		/// The shipping cost charged to the end customer for the line item.
		/// </summary>
		[OpenApiPropertyDescription("The shipping cost charged to the end customer for the line item.")]
        public decimal? CustomerLineShippingAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineShippingAmount => CustomerLineShippingAmount != null;

		/// <summary>
		/// The handling cost charged to the end customer for the line item.
		/// </summary>
		[OpenApiPropertyDescription("The handling cost charged to the end customer for the line item.")]
        public decimal? CustomerLineHandlingAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineHandlingAmount => CustomerLineHandlingAmount != null;

		/// <summary>
		/// The taxable total of the merchandise, shipping and handling for the line item.
		/// </summary>
		[OpenApiPropertyDescription("The taxable total of the merchandise, shipping and handling for the line item.")]
        public decimal? CustomerLineSubTotalAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineSubTotalAmount => CustomerLineSubTotalAmount != null;

		/// <summary>
		/// The tax charged to the end customer for the line item.
		/// </summary>
		[OpenApiPropertyDescription("The tax charged to the end customer for the line item.")]
        public decimal? CustomerLineTaxAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineTaxAmount => CustomerLineTaxAmount != null;

		/// <summary>
		/// The end customers line total, excluding any credits.
		/// </summary>
		[OpenApiPropertyDescription("The end customers line total, excluding any credits.")]
        public decimal? CustomerLineTotalAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineTotalAmount => CustomerLineTotalAmount != null;

		/// <summary>
		/// All credits applied to the line item.
		/// </summary>
		[OpenApiPropertyDescription("All credits applied to the line item.")]
        public decimal? CustomerLineCredits { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineCredits => CustomerLineCredits != null;

		/// <summary>
		/// The end customers line total after any credits have been applied
		/// </summary>
		[OpenApiPropertyDescription("The end customers line total after any credits have been applied")]
        public decimal? CustomerLineBalanceDue { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerLineBalanceDue => CustomerLineBalanceDue != null;

		/// <summary>
		/// The line item discount allowed by the retailer.
		/// </summary>
		[OpenApiPropertyDescription("The line item discount allowed by the retailer.")]
        public decimal? LineDiscountAmount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasLineDiscountAmount => LineDiscountAmount != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The VendorWareshoueID value cannot exceed 20 characters. ")]
        public string VendorWareshoueID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorWareshoueID => VendorWareshoueID != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [DataType(DataType.DateTime)]
        public DateTime? ExpectedShipDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasExpectedShipDateUtc => ExpectedShipDateUtc != null;

		/// <summary>
		/// A line item message that will appear on the packing slip.
		/// </summary>
		[OpenApiPropertyDescription("A line item message that will appear on the packing slip.")]
        [StringLength(255, ErrorMessage = "The PackingSlipLineMessage value cannot exceed 255 characters. ")]
        public string PackingSlipLineMessage { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPackingSlipLineMessage => PackingSlipLineMessage != null;

		/// <summary>
		/// Special instructions to the vendor regarding the line item
		/// </summary>
		[OpenApiPropertyDescription("Special instructions to the vendor regarding the line item")]
        [StringLength(255, ErrorMessage = "The VendorLineNotes value cannot exceed 255 characters. ")]
        public string VendorLineNotes { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorLineNotes => VendorLineNotes != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(255, ErrorMessage = "The StoreName value cannot exceed 255 characters. ")]
        public string StoreName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasStoreName => StoreName != null;

		/// <summary>
		/// End customer provided personalization parameters
		/// </summary>
		[OpenApiPropertyDescription("End customer provided personalization parameters")]
        [StringLength(400, ErrorMessage = "The PersonalizationData value cannot exceed 400 characters. ")]
        public string PersonalizationData { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPersonalizationData => PersonalizationData != null;

		/// <summary>
		/// The merchant’s unique ID for the lineitem.
		/// </summary>
		[OpenApiPropertyDescription("The merchant’s unique ID for the lineitem.")]
        [StringLength(50, ErrorMessage = "The FacgtoryOrderNum value cannot exceed 50 characters. ")]
        public string FacgtoryOrderNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFacgtoryOrderNum => FacgtoryOrderNum != null;

		/// <summary>
		/// The quantity of sub units or components per unit ordered.
		/// </summary>
		[OpenApiPropertyDescription("The quantity of sub units or components per unit ordered.")]
        public decimal? SubUnitQty { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSubUnitQty => SubUnitQty != null;

		/// <summary>
		/// This field contains the do not fulfill until date.
		/// </summary>
		[OpenApiPropertyDescription("This field contains the do not fulfill until date.")]
        [StringLength(10, ErrorMessage = "The GiftWrapIndicator value cannot exceed 10 characters. ")]
        public string GiftWrapIndicator { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasGiftWrapIndicator => GiftWrapIndicator != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [DataType(DataType.DateTime)]
        public DateTime? HoldUntilDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasHoldUntilDateUtc => HoldUntilDateUtc != null;

		/// <summary>
		/// The date on which the merchant expects the vendor to ship the goods includ
		/// </summary>
		[OpenApiPropertyDescription("The date on which the merchant expects the vendor to ship the goods includ")]
        [DataType(DataType.DateTime)]
        public DateTime? RequiredShipDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasRequiredShipDateUtc => RequiredShipDateUtc != null;

		/// <summary>
		/// Must be delivered to the end customer by this date.
		/// </summary>
		[OpenApiPropertyDescription("Must be delivered to the end customer by this date.")]
        [DataType(DataType.DateTime)]
        public DateTime? RequiredDeliveryDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasRequiredDeliveryDateUtc => RequiredDeliveryDateUtc != null;

		/// <summary>
		/// This field contains the end customers requested delivery date.
		/// </summary>
		[OpenApiPropertyDescription("This field contains the end customers requested delivery date.")]
        [DataType(DataType.DateTime)]
        public DateTime? CustomerRequestedArrivalDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerRequestedArrivalDateUtc => CustomerRequestedArrivalDateUtc != null;

		/// <summary>
		/// A merchant specified code used for pick sorting.
		/// </summary>
		[OpenApiPropertyDescription("A merchant specified code used for pick sorting.")]
        [StringLength(20, ErrorMessage = "The ShipperHubCode value cannot exceed 20 characters. ")]
        public string ShipperHubCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipperHubCode => ShipperHubCode != null;

		/// <summary>
		/// This field is used to identify which of the shippers ‘hub’ a particular package should be processed through. When this element is provided, packing slips can be sorted by Shipping Hub to facilitate ‘staging’ operations for pick-up by the shipping carrier.
		/// </summary>
		[OpenApiPropertyDescription("This field is used to identify which of the shippers ‘hub’ a particular package should be processed through. When this element is provided, packing slips can be sorted by Shipping Hub to facilitate ‘staging’ operations for pick-up by the shipping carrier.")]
        [StringLength(50, ErrorMessage = "The ShippingHub value cannot exceed 50 characters. ")]
        public string ShippingHub { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingHub => ShippingHub != null;

		/// <summary>
		/// This field is used to declare if a product is serialized (i.e., is assigned a serial number) and if the serial number must be reported as part of a shipment confirmation message.
		/// </summary>
		[OpenApiPropertyDescription("This field is used to declare if a product is serialized (i.e., is assigned a serial number) and if the serial number must be reported as part of a shipment confirmation message.")]
        [StringLength(20, ErrorMessage = "The SerializedProduct value cannot exceed 20 characters. ")]
        public string SerializedProduct { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSerializedProduct => SerializedProduct != null;

		/// <summary>
		/// The SKU by which the drop-ship customer identifies the product.
		/// </summary>
		[OpenApiPropertyDescription("The SKU by which the drop-ship customer identifies the product.")]
        [StringLength(50, ErrorMessage = "The CustomerSKU value cannot exceed 50 characters. ")]
        public string CustomerSKU { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerSKU => CustomerSKU != null;

		/// <summary>
		/// This field references a quote document on which he Unit Cost value is predicated
		/// </summary>
		[OpenApiPropertyDescription("This field references a quote document on which he Unit Cost value is predicated")]
        [StringLength(30, ErrorMessage = "The VendorQuoteNumber value cannot exceed 30 characters. ")]
        public string VendorQuoteNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorQuoteNumber => VendorQuoteNumber != null;

		/// <summary>
		/// This field will contain the ID of a gift registry list to which the line item belongs, used for merchandise return processing.
		/// </summary>
		[OpenApiPropertyDescription("This field will contain the ID of a gift registry list to which the line item belongs, used for merchandise return processing.")]
        [StringLength(30, ErrorMessage = "The GiftRegistryID value cannot exceed 30 characters. ")]
        public string GiftRegistryID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasGiftRegistryID => GiftRegistryID != null;

		/// <summary>
		/// The merchant assigned department ID.
		/// </summary>
		[OpenApiPropertyDescription("The merchant assigned department ID.")]
        [StringLength(50, ErrorMessage = "The MerchantDepartment value cannot exceed 50 characters. ")]
        public string MerchantDepartment { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantDepartment => MerchantDepartment != null;

		/// <summary>
		/// National Drug Code number.
		/// </summary>
		[OpenApiPropertyDescription("National Drug Code number.")]
        [StringLength(20, ErrorMessage = "The NdcNumber value cannot exceed 20 characters. ")]
        public string NdcNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasNdcNumber => NdcNumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The VendorPatternCode value cannot exceed 50 characters. ")]
        public string VendorPatternCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorPatternCode => VendorPatternCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The VendorFinishCode value cannot exceed 50 characters. ")]
        public string VendorFinishCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorFinishCode => VendorFinishCode != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder")]
        [StringLength(50, ErrorMessage = "The CentralOrderUuid value cannot exceed 50 characters. ")]
        public string CentralOrderUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderUuid => CentralOrderUuid != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder line
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder line")]
        [StringLength(50, ErrorMessage = "The CentralOrderLineUuid value cannot exceed 50 characters. ")]
        public string CentralOrderLineUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderLineUuid => CentralOrderLineUuid != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder line
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder line")]
        [StringLength(50, ErrorMessage = "The CentralOrderLineMerchantExtUuid value cannot exceed 50 characters. ")]
        public string CentralOrderLineMerchantExtUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderLineMerchantExtUuid => CentralOrderLineMerchantExtUuid != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



