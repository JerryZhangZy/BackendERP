              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderHeaderMerchantExt Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class OrderHeaderMerchantExtDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// Unique in Commerce Central internal system, DatabaseID + CentralOrderNum is DigitBridge unique
		/// </summary>
		[OpenApiPropertyDescription("Unique in Commerce Central internal system, DatabaseID + CentralOrderNum is DigitBridge unique")]
        public long? CentralOrderNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderNum => CentralOrderNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? MasterAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMasterAccountNum => MasterAccountNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? ProfileNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProfileNum => ProfileNum != null;

		/// <summary>
		/// The channel which sells the item. Refer to Master Account Channel Setting
		/// </summary>
		[OpenApiPropertyDescription("The channel which sells the item. Refer to Master Account Channel Setting")]
        public int? ChannelNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelNum => ChannelNum != null;

		/// <summary>
		/// The unique number of this profile’s channel account
		/// </summary>
		[OpenApiPropertyDescription("The unique number of this profile’s channel account")]
        public int? ChannelAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelAccountNum => ChannelAccountNum != null;

		/// <summary>
		/// A value indicates the Po Type. For example, “R” indicates this order was that this purchase order is being re-issued.
		/// </summary>
		[OpenApiPropertyDescription("A value indicates the Po Type. For example, “R” indicates this order was that this purchase order is being re-issued.")]
        [StringLength(20, ErrorMessage = "The PoType value cannot exceed 20 characters. ")]
        public string PoType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPoType => PoType != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The HubOrderID value cannot exceed 50 characters. ")]
        public string HubOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasHubOrderID => HubOrderID != null;

		/// <summary>
		/// A value represents the merchant ID on the integration partner
		/// </summary>
		[OpenApiPropertyDescription("A value represents the merchant ID on the integration partner")]
        [StringLength(50, ErrorMessage = "The MerchantID value cannot exceed 50 characters. ")]
        public string MerchantID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantID => MerchantID != null;

		/// <summary>
		/// Vendor ID assigned by the merchant
		/// </summary>
		[OpenApiPropertyDescription("Vendor ID assigned by the merchant")]
        [StringLength(50, ErrorMessage = "The MerchantVendorID value cannot exceed 50 characters. ")]
        public string MerchantVendorID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantVendorID => MerchantVendorID != null;

		/// <summary>
		/// Purchase order date assigned by the merchant
		/// </summary>
		[OpenApiPropertyDescription("Purchase order date assigned by the merchant")]
        [DataType(DataType.DateTime)]
        public DateTime? MerchantOrderDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantOrderDateUtc => MerchantOrderDateUtc != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(500, ErrorMessage = "The PackingSlipMessage value cannot exceed 500 characters. ")]
        public string PackingSlipMessage { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPackingSlipMessage => PackingSlipMessage != null;

		/// <summary>
		/// Special instructions to the vendor regarding this purchase order.
		/// </summary>
		[OpenApiPropertyDescription("Special instructions to the vendor regarding this purchase order.")]
        public string VendorNotes { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorNotes => VendorNotes != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(30, ErrorMessage = "The VendorWarehouseID value cannot exceed 30 characters. ")]
        public string VendorWarehouseID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorWarehouseID => VendorWarehouseID != null;

		/// <summary>
		/// An ID from a previous fulfillment commitment transaction from the vendor to the merchant.
		/// </summary>
		[OpenApiPropertyDescription("An ID from a previous fulfillment commitment transaction from the vendor to the merchant.")]
        [StringLength(30, ErrorMessage = "The VendorCommitmentID value cannot exceed 30 characters. ")]
        public string VendorCommitmentID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasVendorCommitmentID => VendorCommitmentID != null;

		/// <summary>
		/// The merchant-defined code for the retailing brand.
		/// </summary>
		[OpenApiPropertyDescription("The merchant-defined code for the retailing brand.")]
        [StringLength(50, ErrorMessage = "The SalesDivision value cannot exceed 50 characters. ")]
        public string SalesDivision { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSalesDivision => SalesDivision != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantPhone1 value cannot exceed 50 characters. ")]
        public string MerchantPhone1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantPhone1 => MerchantPhone1 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantPhone2 value cannot exceed 50 characters. ")]
        public string MerchantPhone2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantPhone2 => MerchantPhone2 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantPhone3 value cannot exceed 50 characters. ")]
        public string MerchantPhone3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantPhone3 => MerchantPhone3 != null;

		/// <summary>
		/// The merchant’s ID for the online customer who S 50 placed the order. This is sometimes referred to as ‘member number’.
		/// </summary>
		[OpenApiPropertyDescription("The merchant’s ID for the online customer who S 50 placed the order. This is sometimes referred to as ‘member number’.")]
        [StringLength(50, ErrorMessage = "The MerchantCustomerID value cannot exceed 50 characters. ")]
        public string MerchantCustomerID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantCustomerID => MerchantCustomerID != null;

		/// <summary>
		/// The ID of the end customer’s order. Usually retailers will use this field.
		/// </summary>
		[OpenApiPropertyDescription("The ID of the end customer’s order. Usually retailers will use this field.")]
        [StringLength(100, ErrorMessage = "The MerchantCustomerOrderID value cannot exceed 100 characters. ")]
        public string MerchantCustomerOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantCustomerOrderID => MerchantCustomerOrderID != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [DataType(DataType.DateTime)]
        public DateTime? MerchantCustomerOrderDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantCustomerOrderDateUtc => MerchantCustomerOrderDateUtc != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantCustomerPaymentMethod value cannot exceed 50 characters. ")]
        public string MerchantCustomerPaymentMethod { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantCustomerPaymentMethod => MerchantCustomerPaymentMethod != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [DataType(DataType.DateTime)]
        public DateTime? CancelAfterDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCancelAfterDateUtc => CancelAfterDateUtc != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [DataType(DataType.DateTime)]
        public DateTime? RequiredShipDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasRequiredShipDateUtc => RequiredShipDateUtc != null;

		/// <summary>
		/// The merchant assigned ID for the promotion under which the order was taken.
		/// </summary>
		[OpenApiPropertyDescription("The merchant assigned ID for the promotion under which the order was taken.")]
        [StringLength(50, ErrorMessage = "The PromoID value cannot exceed 50 characters. ")]
        public string PromoID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPromoID => PromoID != null;

		/// <summary>
		/// The date which the promotion begins.
		/// </summary>
		[OpenApiPropertyDescription("The date which the promotion begins.")]
        [DataType(DataType.DateTime)]
        public DateTime? PromoStartDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPromoStartDateUtc => PromoStartDateUtc != null;

		/// <summary>
		/// A merchant defined code for orders indicating the class of the merchandise contained in the order.
		/// </summary>
		[OpenApiPropertyDescription("A merchant defined code for orders indicating the class of the merchandise contained in the order.")]
        [StringLength(50, ErrorMessage = "The MerchandiseTypeCode value cannot exceed 50 characters. ")]
        public string MerchandiseTypeCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchandiseTypeCode => MerchandiseTypeCode != null;

		/// <summary>
		/// The merchant assigned authorization number.
		/// </summary>
		[OpenApiPropertyDescription("The merchant assigned authorization number.")]
        [StringLength(50, ErrorMessage = "The AuthorizationForExpenseNumber value cannot exceed 50 characters. ")]
        public string AuthorizationForExpenseNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasAuthorizationForExpenseNumber => AuthorizationForExpenseNumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShipToAccountNO value cannot exceed 50 characters. ")]
        public string ShipToAccountNO { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToAccountNO => ShipToAccountNO != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The ShipToGender value cannot exceed 20 characters. ")]
        public string ShipToGender { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToGender => ShipToGender != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShipToReceipt value cannot exceed 50 characters. ")]
        public string ShipToReceipt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToReceipt => ShipToReceipt != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShipToVcdID value cannot exceed 50 characters. ")]
        public string ShipToVcdID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToVcdID => ShipToVcdID != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShipToDEANumber value cannot exceed 50 characters. ")]
        public string ShipToDEANumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipToDEANumber => ShipToDEANumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantBillToAddressType value cannot exceed 50 characters. ")]
        public string MerchantBillToAddressType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantBillToAddressType => MerchantBillToAddressType != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToAddressType value cannot exceed 50 characters. ")]
        public string SoldToAddressType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToAddressType => SoldToAddressType != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToAttention value cannot exceed 100 characters. ")]
        public string SoldToAttention { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToAttention => SoldToAttention != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToCompanyname value cannot exceed 100 characters. ")]
        public string SoldToCompanyname { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToCompanyname => SoldToCompanyname != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToName value cannot exceed 100 characters. ")]
        public string SoldToName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToName => SoldToName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToFirstName value cannot exceed 50 characters. ")]
        public string SoldToFirstName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToFirstName => SoldToFirstName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToLastName value cannot exceed 50 characters. ")]
        public string SoldToLastName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToLastName => SoldToLastName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToAddressLine1 value cannot exceed 100 characters. ")]
        public string SoldToAddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToAddressLine1 => SoldToAddressLine1 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToAddressLine2 value cannot exceed 100 characters. ")]
        public string SoldToAddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToAddressLine2 => SoldToAddressLine2 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToAddressLine3 value cannot exceed 100 characters. ")]
        public string SoldToAddressLine3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToAddressLine3 => SoldToAddressLine3 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToCity value cannot exceed 50 characters. ")]
        public string SoldToCity { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToCity => SoldToCity != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToState value cannot exceed 50 characters. ")]
        public string SoldToState { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToState => SoldToState != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToPostalCode value cannot exceed 50 characters. ")]
        public string SoldToPostalCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToPostalCode => SoldToPostalCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(10, ErrorMessage = "The SoldToPostalCodeExt value cannot exceed 10 characters. ")]
        public string SoldToPostalCodeExt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToPostalCodeExt => SoldToPostalCodeExt != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToCountry value cannot exceed 50 characters. ")]
        public string SoldToCountry { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToCountry => SoldToCountry != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The SoldToEmail value cannot exceed 100 characters. ")]
        public string SoldToEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToEmail => SoldToEmail != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToDayPhone value cannot exceed 50 characters. ")]
        public string SoldToDayPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToDayPhone => SoldToDayPhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToNightPhone value cannot exceed 50 characters. ")]
        public string SoldToNightPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToNightPhone => SoldToNightPhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToTaxExemptNO value cannot exceed 50 characters. ")]
        public string SoldToTaxExemptNO { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToTaxExemptNO => SoldToTaxExemptNO != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The SoldToAccountNO value cannot exceed 50 characters. ")]
        public string SoldToAccountNO { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToAccountNO => SoldToAccountNO != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The SoldToGender value cannot exceed 20 characters. ")]
        public string SoldToGender { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSoldToGender => SoldToGender != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(200, ErrorMessage = "The CustomerGiftMessage value cannot exceed 200 characters. ")]
        public string CustomerGiftMessage { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerGiftMessage => CustomerGiftMessage != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The ReturnAddressee value cannot exceed 100 characters. ")]
        public string ReturnAddressee { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnAddressee => ReturnAddressee != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The ReturnAddressLine1 value cannot exceed 100 characters. ")]
        public string ReturnAddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnAddressLine1 => ReturnAddressLine1 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The ReturnAddressLine2 value cannot exceed 100 characters. ")]
        public string ReturnAddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnAddressLine2 => ReturnAddressLine2 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The ReturnAddrelssLine3 value cannot exceed 100 characters. ")]
        public string ReturnAddrelssLine3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnAddrelssLine3 => ReturnAddrelssLine3 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReturnCity value cannot exceed 50 characters. ")]
        public string ReturnCity { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnCity => ReturnCity != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReturnState value cannot exceed 50 characters. ")]
        public string ReturnState { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnState => ReturnState != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReturnPostalCode value cannot exceed 50 characters. ")]
        public string ReturnPostalCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnPostalCode => ReturnPostalCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(10, ErrorMessage = "The ReturnPostalCodeExt value cannot exceed 10 characters. ")]
        public string ReturnPostalCodeExt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnPostalCodeExt => ReturnPostalCodeExt != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReturnCountry value cannot exceed 50 characters. ")]
        public string ReturnCountry { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnCountry => ReturnCountry != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The ReturnEmail value cannot exceed 100 characters. ")]
        public string ReturnEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnEmail => ReturnEmail != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReturnDayPhone value cannot exceed 50 characters. ")]
        public string ReturnDayPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnDayPhone => ReturnDayPhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReturnNightPhone value cannot exceed 50 characters. ")]
        public string ReturnNightPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnNightPhone => ReturnNightPhone != null;

		/// <summary>
		/// This field will contain the account number or ID for the Return To party.
		/// </summary>
		[OpenApiPropertyDescription("This field will contain the account number or ID for the Return To party.")]
        [StringLength(50, ErrorMessage = "The ReturnLocationID value cannot exceed 50 characters. ")]
        public string ReturnLocationID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnLocationID => ReturnLocationID != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToAddressType value cannot exceed 50 characters. ")]
        public string InvoiceToAddressType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToAddressType => InvoiceToAddressType != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InvoiceToAttention value cannot exceed 100 characters. ")]
        public string InvoiceToAttention { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToAttention => InvoiceToAttention != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InvoiceToCompany value cannot exceed 100 characters. ")]
        public string InvoiceToCompany { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToCompany => InvoiceToCompany != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InoviceToName value cannot exceed 100 characters. ")]
        public string InoviceToName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInoviceToName => InoviceToName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToFirstName value cannot exceed 50 characters. ")]
        public string InvoiceToFirstName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToFirstName => InvoiceToFirstName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToLastName value cannot exceed 50 characters. ")]
        public string InvoiceToLastName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToLastName => InvoiceToLastName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InvoiceToAddressLine1 value cannot exceed 100 characters. ")]
        public string InvoiceToAddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToAddressLine1 => InvoiceToAddressLine1 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InvoiceToAddressLine2 value cannot exceed 100 characters. ")]
        public string InvoiceToAddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToAddressLine2 => InvoiceToAddressLine2 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InvoiceToAddressLine3 value cannot exceed 100 characters. ")]
        public string InvoiceToAddressLine3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToAddressLine3 => InvoiceToAddressLine3 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToCity value cannot exceed 50 characters. ")]
        public string InvoiceToCity { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToCity => InvoiceToCity != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToState value cannot exceed 50 characters. ")]
        public string InvoiceToState { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToState => InvoiceToState != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToPostalCode value cannot exceed 50 characters. ")]
        public string InvoiceToPostalCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToPostalCode => InvoiceToPostalCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(10, ErrorMessage = "The InvoiceToPostalCodeExt value cannot exceed 10 characters. ")]
        public string InvoiceToPostalCodeExt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToPostalCodeExt => InvoiceToPostalCodeExt != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToCountry value cannot exceed 50 characters. ")]
        public string InvoiceToCountry { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToCountry => InvoiceToCountry != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToDayPhone value cannot exceed 50 characters. ")]
        public string InvoiceToDayPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToDayPhone => InvoiceToDayPhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoviceToNightPhone value cannot exceed 50 characters. ")]
        public string InvoviceToNightPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoviceToNightPhone => InvoviceToNightPhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The InvoiceToEmail value cannot exceed 100 characters. ")]
        public string InvoiceToEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToEmail => InvoiceToEmail != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToAccountNO value cannot exceed 50 characters. ")]
        public string InvoiceToAccountNO { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToAccountNO => InvoiceToAccountNO != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The InvoiceToTaxExemptNO value cannot exceed 50 characters. ")]
        public string InvoiceToTaxExemptNO { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToTaxExemptNO => InvoiceToTaxExemptNO != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(20, ErrorMessage = "The InvoiceToGender value cannot exceed 20 characters. ")]
        public string InvoiceToGender { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInvoiceToGender => InvoiceToGender != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BuyingContract value cannot exceed 100 characters. ")]
        public string BuyingContract { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBuyingContract => BuyingContract != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The CcParty value cannot exceed 100 characters. ")]
        public string CcParty { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCcParty => CcParty != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The APVendor value cannot exceed 100 characters. ")]
        public string APVendor { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasAPVendor => APVendor != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The RMEmail value cannot exceed 100 characters. ")]
        public string RMEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasRMEmail => RMEmail != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The MarketingInserts value cannot exceed 100 characters. ")]
        public string MarketingInserts { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMarketingInserts => MarketingInserts != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BusinessRuleCode value cannot exceed 100 characters. ")]
        public string BusinessRuleCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBusinessRuleCode => BusinessRuleCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ReleaseNumber value cannot exceed 50 characters. ")]
        public string ReleaseNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReleaseNumber => ReleaseNumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The MerchantBuyerName value cannot exceed 100 characters. ")]
        public string MerchantBuyerName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantBuyerName => MerchantBuyerName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(10, ErrorMessage = "The SalesCurrency value cannot exceed 10 characters. ")]
        public string SalesCurrency { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSalesCurrency => SalesCurrency != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The FreightCollectAccount value cannot exceed 50 characters. ")]
        public string FreightCollectAccount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFreightCollectAccount => FreightCollectAccount != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The FreightPaymentTerms value cannot exceed 50 characters. ")]
        public string FreightPaymentTerms { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFreightPaymentTerms => FreightPaymentTerms != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The MerchantSalesAgent value cannot exceed 50 characters. ")]
        public string MerchantSalesAgent { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMerchantSalesAgent => MerchantSalesAgent != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The PaymentMethodDescription value cannot exceed 50 characters. ")]
        public string PaymentMethodDescription { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPaymentMethodDescription => PaymentMethodDescription != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? OrderFulfillmentFee { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasOrderFulfillmentFee => OrderFulfillmentFee != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The PackingSlipTemplateIndicator value cannot exceed 50 characters. ")]
        public string PackingSlipTemplateIndicator { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPackingSlipTemplateIndicator => PackingSlipTemplateIndicator != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? SalesTax { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSalesTax => SalesTax != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ResponsibilityRole value cannot exceed 50 characters. ")]
        public string ResponsibilityRole { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasResponsibilityRole => ResponsibilityRole != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ExpectedProcessingPriority value cannot exceed 50 characters. ")]
        public string ExpectedProcessingPriority { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasExpectedProcessingPriority => ExpectedProcessingPriority != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The PreassignedWaybillNumber value cannot exceed 50 characters. ")]
        public string PreassignedWaybillNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPreassignedWaybillNumber => PreassignedWaybillNumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The URL value cannot exceed 100 characters. ")]
        public string URL { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasURL => URL != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShipperID value cannot exceed 50 characters. ")]
        public string ShipperID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShipperID => ShipperID != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The FileIdentifier value cannot exceed 100 characters. ")]
        public string FileIdentifier { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFileIdentifier => FileIdentifier != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ERPCustomerOrderNumber value cannot exceed 50 characters. ")]
        public string ERPCustomerOrderNumber { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasERPCustomerOrderNumber => ERPCustomerOrderNumber != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The CustomerOrderPOIndex value cannot exceed 50 characters. ")]
        public string CustomerOrderPOIndex { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerOrderPOIndex => CustomerOrderPOIndex != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(3, ErrorMessage = "The MultiSource value cannot exceed 3 characters. ")]
        public string MultiSource { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMultiSource => MultiSource != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public int? NetDaysDue { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasNetDaysDue => NetDaysDue != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public decimal? TotalOrderCost { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasTotalOrderCost => TotalOrderCost != null;

		/// <summary>
		/// (Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Last update date time. <br> Title: Update At, Display: true, Editable: false")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateDateUtc => UpdateDateUtc != null;

		/// <summary>
		/// (Readonly) User who created this order. <br> Title: Created By, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) User who created this order. <br> Title: Created By, Display: true, Editable: false")]
        [StringLength(100, ErrorMessage = "The EnterBy value cannot exceed 100 characters. ")]
        public string EnterBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEnterBy => EnterBy != null;

		/// <summary>
		/// (Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Last updated user. <br> Title: Update By, Display: true, Editable: false")]
        [StringLength(100, ErrorMessage = "The UpdateBy value cannot exceed 100 characters. ")]
        public string UpdateBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateBy => UpdateBy != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder")]
        [StringLength(50, ErrorMessage = "The CentralOrderUuid value cannot exceed 50 characters. ")]
        public string CentralOrderUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderUuid => CentralOrderUuid != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder line
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder line")]
        [StringLength(50, ErrorMessage = "The CentralOrderHeaderMerchantExtUuid value cannot exceed 50 characters. ")]
        public string CentralOrderHeaderMerchantExtUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderHeaderMerchantExtUuid => CentralOrderHeaderMerchantExtUuid != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



