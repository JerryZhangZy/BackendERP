
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a OrderDCAssignmentHeader Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class OrderDCAssignmentHeaderDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// (Readonly) Record Number. Required, <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Record Number. Required, <br> Display: false, Editable: false.")]
        public long? OrderDCAssignmentNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasOrderDCAssignmentNum => OrderDCAssignmentNum != null;

		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Database Number. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? DatabaseNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDatabaseNum => DatabaseNum != null;

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user account. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? MasterAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasMasterAccountNum => MasterAccountNum != null;

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) Login user profile. <br> Display: false, Editable: false.")]
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public int? ProfileNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasProfileNum => ProfileNum != null;

		/// <summary>
		/// (Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) The channel which sells the item. Refer to Master Account Channel Setting. <br> Title: Channel: Display: true, Editable: false")]
        public int? ChannelNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelNum => ChannelNum != null;

		/// <summary>
		/// (Readonly) The unique number of this profile’s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) The unique number of this profile’s channel account. <br> Title: Shipping Carrier: Display: false, Editable: false")]
        public int? ChannelAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelAccountNum => ChannelAccountNum != null;

		/// <summary>
		/// (Readonly) CentralOrderNum. <br> Title: Central Order: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) CentralOrderNum. <br> Title: Central Order: Display: true, Editable: false")]
        public long? CentralOrderNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderNum => CentralOrderNum != null;

		/// <summary>
		/// (Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false
		/// </summary>
		[OpenApiPropertyDescription("(Readonly) This usually is the marketplace order ID, or merchant PO Number. <br> Title: Channel Order: Display: true, Editable: false")]
        [StringLength(50, ErrorMessage = "The ChannelOrderID value cannot exceed 50 characters. ")]
        public string ChannelOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelOrderID => ChannelOrderID != null;

		/// <summary>
		/// Shipping fee. <br> Title: Shipping, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Shipping fee. <br> Title: Shipping, Display: true, Editable: true")]
        public decimal? ShippingCost { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingCost => ShippingCost != null;

		/// <summary>
		/// Insurance cost. <br> Title: Insurance, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Insurance cost. <br> Title: Insurance, Display: true, Editable: true")]
        public decimal? InsuranceCost { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasInsuranceCost => InsuranceCost != null;

		/// <summary>
		/// Tax Amount. <br> Title: Tax, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Tax Amount. <br> Title: Tax, Display: true, Editable: true")]
        public decimal? TaxCost { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasTaxCost => TaxCost != null;

		/// <summary>
		/// Fulfillment Type. <br> Title: Fulfillment Type, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Fulfillment Type. <br> Title: Fulfillment Type, Display: true, Editable: true")]
        public int? FulfillmentType { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFulfillmentType => FulfillmentType != null;

		/// <summary>
		/// Distribution Center Number. <br> Title: DC#, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Distribution Center Number. <br> Title: DC#, Display: true, Editable: true")]
        public int? DistributionCenterNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterNum => DistributionCenterNum != null;

		/// <summary>
		/// Seller Warehouse ID. <br> Title: Seller Warehouse, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Seller Warehouse ID. <br> Title: Seller Warehouse, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The SellerWarehouseID value cannot exceed 50 characters. ")]
        public string SellerWarehouseID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSellerWarehouseID => SellerWarehouseID != null;

		/// <summary>
		/// Use System Shipping Label. <br> Title: Use System Shipping Label, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Use System Shipping Label. <br> Title: Use System Shipping Label, Display: true, Editable: true")]
        public int? UseSystemShippingLabel { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUseSystemShippingLabel => UseSystemShippingLabel != null;

		/// <summary>
		/// Use Channel Packing Slip Format. <br> Title: Use Channel Packing Slip, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Use Channel Packing Slip Format. <br> Title: Use Channel Packing Slip, Display: true, Editable: true")]
        public int? UseChannelPackingSlip { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUseChannelPackingSlip => UseChannelPackingSlip != null;

		/// <summary>
		/// Use System Return Label. <br> Title: Use System Return Label, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Use System Return Label. <br> Title: Use System Return Label, Display: true, Editable: true")]
        public int? UseSystemReturnLabel { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUseSystemReturnLabel => UseSystemReturnLabel != null;

		/// <summary>
		/// Shipping Label Format. <br> Title: Shipping Label Format, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Shipping Label Format. <br> Title: Shipping Label Format, Display: true, Editable: true")]
        public int? ShippingLabelFormat { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingLabelFormat => ShippingLabelFormat != null;

		/// <summary>
		/// Return Label Format. <br> Title: Return Label Format, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Return Label Format. <br> Title: Return Label Format, Display: true, Editable: true")]
        public int? ReturnLabelFormat { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReturnLabelFormat => ReturnLabelFormat != null;

		/// <summary>
		/// DB Channel Order Header RowID. <br> Title: Header RowID, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("DB Channel Order Header RowID. <br> Title: Header RowID, Display: true, Editable: true")]
        [StringLength(50, ErrorMessage = "The DBChannelOrderHeaderRowID value cannot exceed 50 characters. ")]
        public string DBChannelOrderHeaderRowID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDBChannelOrderHeaderRowID => DBChannelOrderHeaderRowID != null;

		/// <summary>
		/// Fulfillment Process Status. <br> Title: Fulfillment Status, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Fulfillment Process Status. <br> Title: Fulfillment Status, Display: true, Editable: true")]
        public int? FulfillmentProcessStatus { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasFulfillmentProcessStatus => FulfillmentProcessStatus != null;

		/// <summary>
		/// Integration Status. <br> Title: Integration Status, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Integration Status. <br> Title: Integration Status, Display: true, Editable: true")]
        public int? IntegrationStatus { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasIntegrationStatus => IntegrationStatus != null;

		/// <summary>
		/// Integration Date Utc. <br> Title: Integration Date, Display: true, Editable: true
		/// </summary>
		[OpenApiPropertyDescription("Integration Date Utc. <br> Title: Integration Date, Display: true, Editable: true")]
        [DataType(DataType.DateTime)]
        public DateTime? IntegrationDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasIntegrationDateUtc => IntegrationDateUtc != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder")]
        [StringLength(50, ErrorMessage = "The CentralOrderUuid value cannot exceed 50 characters. ")]
        public string CentralOrderUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderUuid => CentralOrderUuid != null;

		/// <summary>
		/// Global Unique Guid for CentralOrder
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for CentralOrder")]
        [StringLength(50, ErrorMessage = "The OrderDCAssignmentUuid value cannot exceed 50 characters. ")]
        public string OrderDCAssignmentUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasOrderDCAssignmentUuid => OrderDCAssignmentUuid != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



