              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will only generate once, if you want re-generate it, you need delete this file first.
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Collections.Generic;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Enums;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;

using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a ApInvoiceHeaderInfo Dto Class.
    /// NOTE: This class is generated from a T4 template Once - if you want re-generate it, you need delete cs file and generate again
    /// </summary>
    [Serializable()]
    public class ApInvoiceHeaderInfoDto
    {
        public long? RowNum { get; set; }
        [JsonIgnore,XmlIgnore]
        public string UniqueId { get; set; }
        [JsonIgnore,XmlIgnore]
        public DateTime? EnterDateUtc { get; set; }
        [JsonIgnore,XmlIgnore]
        public Guid DigitBridgeGuid { get; set; }

        #region Properties - Generated 

		/// <summary>
		/// Global Unique Guid for ApInvoice
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for ApInvoice")]
        [StringLength(50, ErrorMessage = "The ApInvoiceUuid value cannot exceed 50 characters. ")]
        public string ApInvoiceUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasApInvoiceUuid => ApInvoiceUuid != null;

		/// <summary>
		/// Global Unique Guid for P/O
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for P/O")]
        [StringLength(50, ErrorMessage = "The PoUuid value cannot exceed 50 characters. ")]
        public string PoUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasPoUuid => PoUuid != null;

		/// <summary>
		/// Global Unique Guid for P/O Receive
		/// </summary>
		[OpenApiPropertyDescription("Global Unique Guid for P/O Receive")]
        [StringLength(50, ErrorMessage = "The ReceiveUuid value cannot exceed 50 characters. ")]
        public string ReceiveUuid { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasReceiveUuid => ReceiveUuid != null;

		/// <summary>
		/// CentralFulfillmentNum of dropship S/O
		/// </summary>
		[OpenApiPropertyDescription("CentralFulfillmentNum of dropship S/O")]
        public long? CentralFulfillmentNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralFulfillmentNum => CentralFulfillmentNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShippingCarrier value cannot exceed 50 characters. ")]
        public string ShippingCarrier { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingCarrier => ShippingCarrier != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The ShippingClass value cannot exceed 50 characters. ")]
        public string ShippingClass { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingClass => ShippingClass != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        public int? DistributionCenterNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasDistributionCenterNum => DistributionCenterNum != null;

		/// <summary>
		/// CentralOrderNum is DigitBridgeOrderId, use same DatabaseNum
		/// </summary>
		[OpenApiPropertyDescription("CentralOrderNum is DigitBridgeOrderId, use same DatabaseNum")]
        public long? CentralOrderNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCentralOrderNum => CentralOrderNum != null;

		/// <summary>
		/// The channel which sells the item. Refer to Master Account Channel Setting
		/// </summary>
		[OpenApiPropertyDescription("The channel which sells the item. Refer to Master Account Channel Setting")]
        public int? ChannelNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelNum => ChannelNum != null;

		/// <summary>
		/// The unique number of this profile’s channel account
		/// </summary>
		[OpenApiPropertyDescription("The unique number of this profile’s channel account")]
        public int? ChannelAccountNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelAccountNum => ChannelAccountNum != null;

		/// <summary>
		/// This usually is the marketplace order ID, or merchant PO Number
		/// </summary>
		[OpenApiPropertyDescription("This usually is the marketplace order ID, or merchant PO Number")]
        [StringLength(130, ErrorMessage = "The ChannelOrderID value cannot exceed 130 characters. ")]
        public string ChannelOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasChannelOrderID => ChannelOrderID != null;

		/// <summary>
		/// Secondary identifier provided by the channel. This is a secondary marketplace-generated Order ID. It is not populated most of the time.
		/// </summary>
		[OpenApiPropertyDescription("Secondary identifier provided by the channel. This is a secondary marketplace-generated Order ID. It is not populated most of the time.")]
        [StringLength(200, ErrorMessage = "The SecondaryChannelOrderID value cannot exceed 200 characters. ")]
        public string SecondaryChannelOrderID { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasSecondaryChannelOrderID => SecondaryChannelOrderID != null;

		/// <summary>
		/// requested Vendor use Account to ship
		/// </summary>
		[OpenApiPropertyDescription("requested Vendor use Account to ship")]
        [StringLength(100, ErrorMessage = "The ShippingAccount value cannot exceed 100 characters. ")]
        public string ShippingAccount { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasShippingAccount => ShippingAccount != null;

		/// <summary>
		/// Reference Number
		/// </summary>
		[OpenApiPropertyDescription("Reference Number")]
        [StringLength(100, ErrorMessage = "The RefNum value cannot exceed 100 characters. ")]
        public string RefNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasRefNum => RefNum != null;

		/// <summary>
		/// Customer P/O Number
		/// </summary>
		[OpenApiPropertyDescription("Customer P/O Number")]
        [StringLength(100, ErrorMessage = "The CustomerPoNum value cannot exceed 100 characters. ")]
        public string CustomerPoNum { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasCustomerPoNum => CustomerPoNum != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToName value cannot exceed 100 characters. ")]
        public string BillToName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToName => BillToName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToFirstName value cannot exceed 50 characters. ")]
        public string BillToFirstName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToFirstName => BillToFirstName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToLastName value cannot exceed 50 characters. ")]
        public string BillToLastName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToLastName => BillToLastName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToSuffix value cannot exceed 50 characters. ")]
        public string BillToSuffix { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToSuffix => BillToSuffix != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToCompany value cannot exceed 100 characters. ")]
        public string BillToCompany { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCompany => BillToCompany != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToCompanyJobTitle value cannot exceed 100 characters. ")]
        public string BillToCompanyJobTitle { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCompanyJobTitle => BillToCompanyJobTitle != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToAttention value cannot exceed 100 characters. ")]
        public string BillToAttention { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAttention => BillToAttention != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(200, ErrorMessage = "The BillToAddressLine1 value cannot exceed 200 characters. ")]
        public string BillToAddressLine1 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAddressLine1 => BillToAddressLine1 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(200, ErrorMessage = "The BillToAddressLine2 value cannot exceed 200 characters. ")]
        public string BillToAddressLine2 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAddressLine2 => BillToAddressLine2 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(200, ErrorMessage = "The BillToAddressLine3 value cannot exceed 200 characters. ")]
        public string BillToAddressLine3 { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToAddressLine3 => BillToAddressLine3 != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToCity value cannot exceed 100 characters. ")]
        public string BillToCity { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCity => BillToCity != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToState value cannot exceed 50 characters. ")]
        public string BillToState { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToState => BillToState != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToStateFullName value cannot exceed 100 characters. ")]
        public string BillToStateFullName { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToStateFullName => BillToStateFullName != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToPostalCode value cannot exceed 50 characters. ")]
        public string BillToPostalCode { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToPostalCode => BillToPostalCode != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToPostalCodeExt value cannot exceed 50 characters. ")]
        public string BillToPostalCodeExt { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToPostalCodeExt => BillToPostalCodeExt != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToCounty value cannot exceed 50 characters. ")]
        public string BillToCounty { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCounty => BillToCounty != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToCountry value cannot exceed 100 characters. ")]
        public string BillToCountry { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToCountry => BillToCountry != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The BillToEmail value cannot exceed 100 characters. ")]
        public string BillToEmail { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToEmail => BillToEmail != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToDaytimePhone value cannot exceed 50 characters. ")]
        public string BillToDaytimePhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToDaytimePhone => BillToDaytimePhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(50, ErrorMessage = "The BillToNightPhone value cannot exceed 50 characters. ")]
        public string BillToNightPhone { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasBillToNightPhone => BillToNightPhone != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [DataType(DataType.DateTime)]
        public DateTime? UpdateDateUtc { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateDateUtc => UpdateDateUtc != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The EnterBy value cannot exceed 100 characters. ")]
        public string EnterBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasEnterBy => EnterBy != null;

		/// <summary>
		/// 
		/// </summary>
		[OpenApiPropertyDescription("")]
        [StringLength(100, ErrorMessage = "The UpdateBy value cannot exceed 100 characters. ")]
        public string UpdateBy { get; set; }
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        [OpenApiSchemaVisibility(OpenApiVisibilityType.Internal)]
        public bool HasUpdateBy => UpdateBy != null;



        #endregion Properties - Generated 

        #region Children - Generated 

        #endregion Children - Generated 

    }
}



