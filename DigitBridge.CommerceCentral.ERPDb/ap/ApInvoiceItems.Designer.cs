              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Represents a ApInvoiceItems.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("ApInvoiceItems")]
    [PrimaryKey("RowNum", AutoIncrement = true)]
    [UniqueId("ApInvoiceItemsUuid")]
    [DtoName("ApInvoiceItemsDto")]
    public partial class ApInvoiceItems : TableRepository<ApInvoiceItems, long>
    {

        public ApInvoiceItems() : base() {}
        public ApInvoiceItems(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("ApInvoiceItemsUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _apInvoiceItemsUuid;

        [Column("ApInvoiceUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _apInvoiceUuid;

        [Column("Seq",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _seq;

        [Column("ApInvoiceItemType",SqlDbType.Int,IsDefault=true)]
        private int? _apInvoiceItemType;

        [Column("ApInvoiceItemStatus",SqlDbType.Int,IsDefault=true)]
        private int? _apInvoiceItemStatus;

        [Column("ItemDate",SqlDbType.Date,NotNull=true)]
        private DateTime _itemDate;

        [Column("ItemTime",SqlDbType.Time,NotNull=true)]
        private TimeSpan _itemTime;

        [Column("ApDistributionNum",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _apDistributionNum;

        [Column("Description",SqlDbType.NVarChar,NotNull=true)]
        private string _description;

        [Column("Notes",SqlDbType.NVarChar,NotNull=true)]
        private string _notes;

        [Column("Currency",SqlDbType.VarChar)]
        private string _currency;

        [Column("Amount",SqlDbType.Decimal,NotNull=true,IsDefault=true)]
        private decimal _amount;

        [Column("IsAp",SqlDbType.TinyInt,NotNull=true,IsDefault=true)]
        private byte _isAp;

        [Column("CreditAccount",SqlDbType.BigInt,IsDefault=true)]
        private long? _creditAccount;

        [Column("DebitAccount",SqlDbType.BigInt,IsDefault=true)]
        private long? _debitAccount;

        [Column("UpdateDateUtc",SqlDbType.DateTime)]
        private DateTime? _updateDateUtc;

        [Column("EnterBy",SqlDbType.VarChar,NotNull=true)]
        private string _enterBy;

        [Column("UpdateBy",SqlDbType.VarChar,NotNull=true)]
        private string _updateBy;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => ApInvoiceItemsUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(ApInvoiceItemsUuid)) 
				ApInvoiceItemsUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// Global Unique Guid for ApInvoice Item Line
		/// </summary>
        public virtual string ApInvoiceItemsUuid
        {
            get
            {
				return _apInvoiceItemsUuid?.TrimEnd(); 
            }
            set
            {
				_apInvoiceItemsUuid = value.TruncateTo(50); 
				OnPropertyChanged("ApInvoiceItemsUuid", value);
            }
        }

		/// <summary>
		/// Global Unique Guid for ApInvoice
		/// </summary>
        public virtual string ApInvoiceUuid
        {
            get
            {
				return _apInvoiceUuid?.TrimEnd(); 
            }
            set
            {
				_apInvoiceUuid = value.TruncateTo(50); 
				OnPropertyChanged("ApInvoiceUuid", value);
            }
        }

		/// <summary>
		/// ApInvoice Item Line sort sequence
		/// </summary>
        public virtual int Seq
        {
            get
            {
				return _seq; 
            }
            set
            {
				_seq = value; 
				OnPropertyChanged("Seq", value);
            }
        }

		/// <summary>
		/// ApInvoice item type
		/// </summary>
        public virtual int? ApInvoiceItemType
        {
            get
            {
				if (!AllowNull && _apInvoiceItemType is null) 
					_apInvoiceItemType = default(int); 
				return _apInvoiceItemType; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_apInvoiceItemType = value; 
					OnPropertyChanged("ApInvoiceItemType", value);
				}
            }
        }

		/// <summary>
		/// ApInvoice item status
		/// </summary>
        public virtual int? ApInvoiceItemStatus
        {
            get
            {
				if (!AllowNull && _apInvoiceItemStatus is null) 
					_apInvoiceItemStatus = default(int); 
				return _apInvoiceItemStatus; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_apInvoiceItemStatus = value; 
					OnPropertyChanged("ApInvoiceItemStatus", value);
				}
            }
        }

		/// <summary>
		/// ApInvoice date
		/// </summary>
        public virtual DateTime ItemDate
        {
            get
            {
				return _itemDate; 
            }
            set
            {
				_itemDate = value.Date.ToSqlSafeValue(); 
				OnPropertyChanged("ItemDate", value);
            }
        }

		/// <summary>
		/// ApInvoice time
		/// </summary>
        public virtual TimeSpan ItemTime
        {
            get
            {
				return _itemTime; 
            }
            set
            {
				_itemTime = value.ToSqlSafeValue(); 
				OnPropertyChanged("ItemTime", value);
            }
        }

		/// <summary>
		/// A/P invoice pre define Distribution code
		/// </summary>
        public virtual string ApDistributionNum
        {
            get
            {
				return _apDistributionNum?.TrimEnd(); 
            }
            set
            {
				_apDistributionNum = value.TruncateTo(100); 
				OnPropertyChanged("ApDistributionNum", value);
            }
        }

		/// <summary>
		/// ApInvoice item description
		/// </summary>
        public virtual string Description
        {
            get
            {
				return _description?.TrimEnd(); 
            }
            set
            {
				_description = value.TruncateTo(200); 
				OnPropertyChanged("Description", value);
            }
        }

		/// <summary>
		/// ApInvoice item notes
		/// </summary>
        public virtual string Notes
        {
            get
            {
				return _notes?.TrimEnd(); 
            }
            set
            {
				_notes = value.TruncateTo(500); 
				OnPropertyChanged("Notes", value);
            }
        }

		/// <summary>
		/// (Ignore)
		/// </summary>
        public virtual string Currency
        {
            get
            {
				if (!AllowNull && _currency is null) 
					_currency = String.Empty; 
				return _currency?.TrimEnd(); 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_currency = value.TruncateTo(10); 
					OnPropertyChanged("Currency", value);
				}
            }
        }

		/// <summary>
		/// Item total amount.
		/// </summary>
        public virtual decimal Amount
        {
            get
            {
				return _amount; 
            }
            set
            {
				_amount = value; 
				OnPropertyChanged("Amount", value);
            }
        }

		/// <summary>
		/// ApInvoice item will add to invoice total amount
		/// </summary>
        public virtual bool IsAp
        {
            get
            {
				return (_isAp == 1); 
            }
            set
            {
				_isAp = value ? (byte)1 : (byte)0; 
				OnPropertyChanged("IsAp", value);
            }
        }

		/// <summary>
		/// G/L Credit account
		/// </summary>
        public virtual long? CreditAccount
        {
            get
            {
				if (!AllowNull && _creditAccount is null) 
					_creditAccount = default(long); 
				return _creditAccount; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_creditAccount = value; 
					OnPropertyChanged("CreditAccount", value);
				}
            }
        }

		/// <summary>
		/// G/L Debit account , A/P invoice distribution should specify G/L Debit account
		/// </summary>
        public virtual long? DebitAccount
        {
            get
            {
				if (!AllowNull && _debitAccount is null) 
					_debitAccount = default(long); 
				return _debitAccount; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_debitAccount = value; 
					OnPropertyChanged("DebitAccount", value);
				}
            }
        }

		/// <summary>
		/// (Ignore)
		/// </summary>
        public virtual DateTime? UpdateDateUtc
        {
            get
            {
				if (!AllowNull && _updateDateUtc is null) 
					_updateDateUtc = new DateTime().MinValueSql(); 
				return _updateDateUtc; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_updateDateUtc = (value is null) ? (DateTime?) null : value.ToSqlSafeValue(); 
					OnPropertyChanged("UpdateDateUtc", value);
				}
            }
        }

		/// <summary>
		/// (Ignore)
		/// </summary>
        public virtual string EnterBy
        {
            get
            {
				return _enterBy?.TrimEnd(); 
            }
            set
            {
				_enterBy = value.TruncateTo(100); 
				OnPropertyChanged("EnterBy", value);
            }
        }

		/// <summary>
		/// (Ignore)
		/// </summary>
        public virtual string UpdateBy
        {
            get
            {
				return _updateBy?.TrimEnd(); 
            }
            set
            {
				_updateBy = value.TruncateTo(100); 
				OnPropertyChanged("UpdateBy", value);
            }
        }



        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private ApInvoiceData Parent { get; set; }
		public ApInvoiceData GetParent() => Parent;
		public ApInvoiceItems SetParent(ApInvoiceData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			ApInvoiceItemsUuid = Guid.NewGuid().ToString(); 
            return;
        }

        public override ApInvoiceItems Clear()
        {
            base.Clear();
			_apInvoiceItemsUuid = String.Empty; 
			_apInvoiceUuid = String.Empty; 
			_seq = default(int); 
			_apInvoiceItemType = AllowNull ? (int?)null : default(int); 
			_apInvoiceItemStatus = AllowNull ? (int?)null : default(int); 
			_itemDate = new DateTime().MinValueSql(); 
			_itemTime = new TimeSpan().MinValueSql(); 
			_apDistributionNum = String.Empty; 
			_description = String.Empty; 
			_notes = String.Empty; 
			_currency = AllowNull ? (string)null : String.Empty; 
			_amount = default(decimal); 
			_isAp = default(byte); 
			_creditAccount = AllowNull ? (long?)null : default(long); 
			_debitAccount = AllowNull ? (long?)null : default(long); 
			_updateDateUtc = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_enterBy = String.Empty; 
			_updateBy = String.Empty; 
            ClearChildren();
            return this;
        }

        public override ApInvoiceItems CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual ApInvoiceItems ClearChildren()
        {
            return this;
        }

        public virtual ApInvoiceItems NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(ApInvoiceItems data)
        {
            if (data is null) return;
            return;
        }


		public override ApInvoiceItems ConvertDbFieldsToData()
		{
			base.ConvertDbFieldsToData();
			return this;
		}
		public override ApInvoiceItems ConvertDataFieldsToDb()
		{
			base.ConvertDataFieldsToDb();
			UpdateDateUtc =DateTime.UtcNow;
			return this;
		}

        #endregion Methods - Generated 
    }
}



