

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Attributes;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using DigitBridge.Base.Utility;

namespace DigitBridge.CommerceCentral.ERPDb
{
    /// <summary>
    /// Request and Response payload object
    /// </summary>
    [Serializable()]
    public class ApPaymentPayload : ApTransactionPayload
    {
        public ApInvoiceDataDto ApInvoiceDataDto { get; set; }

        #region summary service 

        [OpenApiPropertyDescription("(Response Data) summary result which load filter")]
        [JsonConverter(typeof(StringBuilderConverter))]
        public StringBuilder ApPaymentSummary { get; set; }
        [JsonIgnore] public virtual bool HasApPaymentSummary => ApPaymentSummary != null;
        public bool ShouldSerializeApPaymentSummary() => HasApPaymentSummary;
        #endregion

        /// <summary>
        /// Delegate function to load request parameter to payload property.
        /// </summary>
        public override IDictionary<string, Action<string>> GetOtherParameters()
        {
            return new Dictionary<string, Action<string>>
            {
                { "ApApplyInvoices", val => ApApplyInvoices = val.JsonToObject<List<ApApplyInvoice>>()}
            };
        }


        #region multiple payment list

        /// <summary>
        /// (Request Parameter) Array of uuid to load multiple Invoice dto data.
        /// </summary>
        [OpenApiPropertyDescription("(Request Parameter) Array of ApApplyInvoice  to add multi payments")]
        public IList<ApApplyInvoice> ApApplyInvoices { get; set; } = new List<ApApplyInvoice>();
        [JsonIgnore]
        public virtual bool HasApApplyInvoices => ApApplyInvoices != null && ApApplyInvoices.Count > 0;
        public bool ShouldSerializeApApplyInvoices() => HasApApplyInvoices;

        #endregion

    }
}

