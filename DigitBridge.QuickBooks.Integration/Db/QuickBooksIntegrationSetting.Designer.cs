              
              
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Threading.Tasks;
using System.Xml.Serialization;
using System.Text;
using Newtonsoft.Json;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.YoPoco;
using DigitBridge.CommerceCentral.ERPDb;

namespace DigitBridge.QuickBooks.Integration
{
    /// <summary>
    /// Represents a QuickBooksIntegrationSetting.
    /// NOTE: This class is generated from a T4 template - you should not modify it manually.
    /// </summary>
    [Serializable()]
    [ExplicitColumns]
    [TableName("QuickBooksIntegrationSetting")]
    [PrimaryKey("RowNum", AutoIncrement = true)]
    [UniqueId("SettingUuid")]
    [DtoName("QuickBooksIntegrationSettingDto")]
    public partial class QuickBooksIntegrationSetting : TableRepository<QuickBooksIntegrationSetting, long>
    {

        public QuickBooksIntegrationSetting() : base() {}
        public QuickBooksIntegrationSetting(IDataBaseFactory dbFactory): base(dbFactory) {}

        #region Fields - Generated 
        [Column("DatabaseNum",SqlDbType.Int,NotNull=true)]
        private int _databaseNum;

        [Column("MasterAccountNum",SqlDbType.Int,NotNull=true)]
        private int _masterAccountNum;

        [Column("ProfileNum",SqlDbType.Int,NotNull=true)]
        private int _profileNum;

        [Column("SettingUuid",SqlDbType.VarChar,NotNull=true,IsDefault=true)]
        private string _settingUuid;

        [Column("ChannelAccountName",SqlDbType.NVarChar,NotNull=true)]
        private string _channelAccountName;

        [Column("ChannelAccountNum",SqlDbType.Int,NotNull=true)]
        private int _channelAccountNum;

        [Column("ExportByOrderStatus",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _exportByOrderStatus;

        [Column("ExportOrderAs",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _exportOrderAs;

        [Column("ExportOrderDateType",SqlDbType.Int,NotNull=true,IsDefault=true)]
        private int _exportOrderDateType;

        [Column("ExportOrderFromDate",SqlDbType.DateTime,NotNull=true,IsDefault=true)]
        private DateTime _exportOrderFromDate;

        [Column("QboSettingStatus",SqlDbType.Int,IsDefault=true)]
        private int? _qboSettingStatus;

        [Column("QboImportOrderAfterUpdateDate",SqlDbType.DateTime,NotNull=true,IsDefault=true)]
        private DateTime _qboImportOrderAfterUpdateDate;

        [Column("JsonFields",SqlDbType.NVarChar,NotNull=true,IsDefault=true)]
        private string _jsonFields;

        [Column("EnterDate",SqlDbType.DateTime,IsDefault=true)]
        private DateTime? _enterDate;

        [Column("LastUpdate",SqlDbType.DateTime,IsDefault=true)]
        private DateTime? _lastUpdate;

        #endregion Fields - Generated 

        #region Properties - Generated 
		[IgnoreCompare] 
		public override string UniqueId => SettingUuid; 
		public override void CheckUniqueId() 
		{
			if (string.IsNullOrEmpty(SettingUuid)) 
				SettingUuid = Guid.NewGuid().ToString(); 
		}
		/// <summary>
		/// (Readonly) Database Number. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int DatabaseNum
        {
            get
            {
				return _databaseNum; 
            }
            set
            {
				_databaseNum = value; 
				OnPropertyChanged("DatabaseNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user account. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int MasterAccountNum
        {
            get
            {
				return _masterAccountNum; 
            }
            set
            {
				_masterAccountNum = value; 
				OnPropertyChanged("MasterAccountNum", value);
            }
        }

		/// <summary>
		/// (Readonly) Login user profile. <br> Display: false, Editable: false.
		/// </summary>
        public virtual int ProfileNum
        {
            get
            {
				return _profileNum; 
            }
            set
            {
				_profileNum = value; 
				OnPropertyChanged("ProfileNum", value);
            }
        }

		/// <summary>
		/// Setting uuid. <br> Display: false, Editable: false.
		/// </summary>
        public virtual string SettingUuid
        {
            get
            {
				return _settingUuid?.TrimEnd(); 
            }
            set
            {
				_settingUuid = value.TruncateTo(50); 
				OnPropertyChanged("SettingUuid", value);
            }
        }

		/// <summary>
		/// Central Channel Account name, Max 10 chars ( because of qbo doc Number 21 chars restrictions )
		/// </summary>
        public virtual string ChannelAccountName
        {
            get
            {
				return _channelAccountName?.TrimEnd(); 
            }
            set
            {
				_channelAccountName = value.TruncateTo(150); 
				OnPropertyChanged("ChannelAccountName", value);
            }
        }

		/// <summary>
		/// Central Channel Account Number
		/// </summary>
        public virtual int ChannelAccountNum
        {
            get
            {
				return _channelAccountNum; 
            }
            set
            {
				_channelAccountNum = value; 
				OnPropertyChanged("ChannelAccountNum", value);
            }
        }

		/// <summary>
		/// 0: All, 1: Shipped
		/// </summary>
        public virtual int ExportByOrderStatus
        {
            get
            {
				return _exportByOrderStatus; 
            }
            set
            {
				_exportByOrderStatus = value; 
				OnPropertyChanged("ExportByOrderStatus", value);
            }
        }

		/// <summary>
		/// 0: Invoice, 1: Sales Receipt, 2: Daily Summary Sales Receipt, 3: Daily Summary Invoice, 4. Do Not Export Sales Order
		/// </summary>
        public virtual int ExportOrderAs
        {
            get
            {
				return _exportOrderAs; 
            }
            set
            {
				_exportOrderAs = value; 
				OnPropertyChanged("ExportOrderAs", value);
            }
        }

		/// <summary>
		/// 0: By Date Exported, 1: By Payment Date
		/// </summary>
        public virtual int ExportOrderDateType
        {
            get
            {
				return _exportOrderDateType; 
            }
            set
            {
				_exportOrderDateType = value; 
				OnPropertyChanged("ExportOrderDateType", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime ExportOrderFromDate
        {
            get
            {
				return _exportOrderFromDate; 
            }
            set
            {
				_exportOrderFromDate = value.Date.ToSqlSafeValue(); 
				OnPropertyChanged("ExportOrderFromDate", value);
            }
        }

		/// <summary>
		/// 0: Uninitiated, 1: Active, 100: inactive, 255: Error
		/// </summary>
        public virtual int? QboSettingStatus
        {
            get
            {
				if (!AllowNull && _qboSettingStatus is null) 
					_qboSettingStatus = default(int); 
				return _qboSettingStatus; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_qboSettingStatus = value; 
					OnPropertyChanged("QboSettingStatus", value);
				}
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime QboImportOrderAfterUpdateDate
        {
            get
            {
				return _qboImportOrderAfterUpdateDate; 
            }
            set
            {
				_qboImportOrderAfterUpdateDate = value.Date.ToSqlSafeValue(); 
				OnPropertyChanged("QboImportOrderAfterUpdateDate", value);
            }
        }

		/// <summary>
		/// (Ignore) JSON string.
		/// </summary>
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public virtual string JsonFields
        {
            get
            {
				return _jsonFields?.TrimEnd(); 
            }
            set
            {
				_jsonFields = value.TrimEnd(); 
				OnPropertyChanged("JsonFields", value);
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime? EnterDate
        {
            get
            {
				if (!AllowNull && _enterDate is null) 
					_enterDate = new DateTime().MinValueSql(); 
				return _enterDate; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_enterDate = (value is null) ? (DateTime?) null : value?.Date.ToSqlSafeValue(); 
					OnPropertyChanged("EnterDate", value);
				}
            }
        }

		/// <summary>
		/// 
		/// </summary>
        public virtual DateTime? LastUpdate
        {
            get
            {
				if (!AllowNull && _lastUpdate is null) 
					_lastUpdate = new DateTime().MinValueSql(); 
				return _lastUpdate; 
            }
            set
            {
				if (value != null || AllowNull) 
				{
					_lastUpdate = (value is null) ? (DateTime?) null : value?.Date.ToSqlSafeValue(); 
					OnPropertyChanged("LastUpdate", value);
				}
            }
        }


        [JsonIgnore, XmlIgnore, IgnoreCompare]
        protected CustomAttributes _Fields;
        [JsonIgnore, XmlIgnore, IgnoreCompare]
        public virtual CustomAttributes Fields
        {
            get
            {
				if (_Fields is null) 
					_Fields = new CustomAttributes(dbFactory, "QuickBooksIntegrationSetting"); 
				return _Fields; 
            }
            set
            {
				_Fields = (value is null) ? new CustomAttributes(dbFactory, "QuickBooksIntegrationSetting") : value; 
            }
        }


        #endregion Properties - Generated 

        #region Methods - Parent

		[JsonIgnore, XmlIgnore, IgnoreCompare]
		private QuickBooksSettingInfoData Parent { get; set; }
		public QuickBooksSettingInfoData GetParent() => Parent;
		public QuickBooksIntegrationSetting SetParent(QuickBooksSettingInfoData parent)
		{
			Parent = parent;
			return this;
		}
        #endregion Methods - Parent


        #region Methods - Generated 
        public override void ClearMetaData()
        {
			base.ClearMetaData(); 
			SettingUuid = Guid.NewGuid().ToString(); 
            return;
        }

        public override QuickBooksIntegrationSetting Clear()
        {
            base.Clear();
			_databaseNum = default(int); 
			_masterAccountNum = default(int); 
			_profileNum = default(int); 
			_settingUuid = String.Empty; 
			_channelAccountName = String.Empty; 
			_channelAccountNum = default(int); 
			_exportByOrderStatus = default(int); 
			_exportOrderAs = default(int); 
			_exportOrderDateType = default(int); 
			_exportOrderFromDate = new DateTime().MinValueSql(); 
			_qboSettingStatus = AllowNull ? (int?)null : default(int); 
			_qboImportOrderAfterUpdateDate = new DateTime().MinValueSql(); 
			_jsonFields = String.Empty; 
			Fields.Clear(); 
			_enterDate = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
			_lastUpdate = AllowNull ? (DateTime?)null : new DateTime().MinValueSql(); 
            ClearChildren();
            return this;
        }

        public override QuickBooksIntegrationSetting CheckIntegrity()
        {
            CheckUniqueId();
            CheckIntegrityOthers();
            return this;
        }

        public virtual QuickBooksIntegrationSetting ClearChildren()
        {
            return this;
        }

        public virtual QuickBooksIntegrationSetting NewChildren()
        {
            return this;
        }

        public virtual void CopyChildrenFrom(QuickBooksIntegrationSetting data)
        {
            if (data is null) return;
            return;
        }


		public override QuickBooksIntegrationSetting ConvertDbFieldsToData()
		{
			base.ConvertDbFieldsToData();
			Fields.LoadFromValueString(JsonFields);
			return this;
		}
		public override QuickBooksIntegrationSetting ConvertDataFieldsToDb()
		{
			base.ConvertDataFieldsToDb();
			JsonFields = Fields.ToValueString();
			return this;
		}

        #endregion Methods - Generated 
    }
}



