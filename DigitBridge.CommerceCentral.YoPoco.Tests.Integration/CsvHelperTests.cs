
    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Extensions.Configuration;
using Xunit;
using DigitBridge.CommerceCentral.YoPoco;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.XUnit.Common;
using DigitBridge.CommerceCentral.ERPDb;
using Microsoft.Data.SqlClient;
using System.Data;

namespace DigitBridge.CommerceCentral.ERPMdl.Tests.Integration
{
    public partial class CsvHelperTests : IDisposable, IClassFixture<TestFixture<StartupTest>>
    {
        protected const string SkipReason = "Debug Helper Function";

        protected TestFixture<StartupTest> Fixture { get; }
        public IConfiguration Configuration { get; }
        public IDataBaseFactory DataBaseFactory { get; set; }

        public CsvHelperTests(TestFixture<StartupTest> fixture)
        {
            Fixture = fixture;
            Configuration = fixture.Configuration;

            InitForTest();
        }
        protected void InitForTest()
        {
            var Seq = 0;
            DataBaseFactory = new DataBaseFactory(Configuration["dsn"]);
        }
        public void Dispose()
        {
        }

        [Fact()]
        //[Fact(Skip = SkipReason)]
        public async void Export_Test()
        {
            var data = DataBaseFactory.Find<SalesOrderHeader>();

            var result = true;
            var csvHelper = new CsvHelper<SalesOrderHeader>();
            try
            {
                csvHelper.Export(data, "c:\\temp\\SalesOrderHeader.csv");
            }
            catch (Exception ex)
            {
                throw;
            }

            Assert.True(true, "This is a generated tester, please report any tester bug to team leader.");
        }

        [Fact()]
        //[Fact(Skip = SkipReason)]
        public async void ImportExcel_Test()
        {
            var data = DataBaseFactory.Find<SalesOrderHeader>();

            DataSet result;
            var csvHelper = new CsvHelper<SalesOrderHeader>();
            try
            {
                result = csvHelper.ImportExcel("c:\\temp\\inv_01.xlsx");
            }
            catch (Exception ex)
            {
                throw;
            }

            Assert.True(true, "This is a generated tester, please report any tester bug to team leader.");
        }


    }
}



