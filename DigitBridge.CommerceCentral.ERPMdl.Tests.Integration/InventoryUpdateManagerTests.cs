    

//-------------------------------------------------------------------------
// This document is generated by T4
// It will overwrite your changes, please keep it as it is
// <copyright company="DigitBridge">
//     Copyright (c) DigitBridge Inc.  All rights reserved.
// </copyright>
//-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Extensions.Configuration;
using Xunit;
using DigitBridge.CommerceCentral.YoPoco;
using DigitBridge.Base.Utility;
using DigitBridge.CommerceCentral.XUnit.Common;
using DigitBridge.CommerceCentral.ERPDb;
using Bogus;
using DigitBridge.CommerceCentral.ERPDb.inventorySync;

namespace DigitBridge.CommerceCentral.ERPMdl.Tests.Integration
{
    public partial class InventoryUpdateManagerTests : IDisposable, IClassFixture<TestFixture<StartupTest>>
    {
        protected const string SkipReason = "Debug Manager Function";

        protected TestFixture<StartupTest> Fixture { get; }
        public IConfiguration Configuration { get; }
        public IDataBaseFactory DataBaseFactory { get; set; }

        public InventoryUpdateManagerTests(TestFixture<StartupTest> fixture)
        {
            Fixture = fixture;
            Configuration = fixture.Configuration;

            InitForTest();

            // CreateInvoice_Test();
        }
        protected void InitForTest()
        {
            var Seq = 0;
            DataBaseFactory = new DataBaseFactory(Configuration["dsn"]);
        }
        public void Dispose()
        {
        }

        [Fact()]
		//[Fact(Skip = SkipReason)]
		public async Task UpdateStockByList_Test()
		{
            var payload = new InventorySyncUpdatePayload()
            {
                MasterAccountNum = 10001,
                ProfileNum = 10001,
                InventorySyncItems = new List<InventorySyncItem>()
                {
                    new InventorySyncItem()
                    {
                        SKU = "101409S-BK-M-STD",
                        WarehouseCode = "Default",
                        Qty = 100,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-BK-S-STD",
                        WarehouseCode = "Default",
                        Qty = 200,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-BK-XL-STD",
                        WarehouseCode = "Default",
                        Qty = 300,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-CGREEN-L-STD",
                        WarehouseCode = "Default",
                        Qty = 400,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-CGREEN-M-STD",
                        WarehouseCode = "Default",
                        Qty = 500,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-CHARCOAL-L-STD",
                        WarehouseCode = "Default",
                        Qty = 650,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-CHARCOAL-2XL-STD",
                        WarehouseCode = "Default",
                        Qty = 700,
                    },
                    new InventorySyncItem() 
                    {
                        SKU = "101409S-CGREEN-2XL-STD",
                        WarehouseCode = "Default",
                        Qty = 800,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-CGREEN-XL-STD",
                        WarehouseCode = "Default",
                        Qty = 900,
                    },
                    new InventorySyncItem()
                    {
                        SKU = "101409S-CHARCOAL-M-STD",
                        WarehouseCode = "Default",
                        Qty = 950,
                    },
                }
            };

            var service = new InventoryUpdateManager(DataBaseFactory);

            try
            {
                using (var b = new Benchmark("UpdateInvoicePaymentsAsync_Test"))
                {
                    await service.UpdateStockByList(payload);
                }

                Assert.True(true, "This is a generated tester, please report any tester bug to team leader.");
            }
            catch (Exception e)
            {
                throw;
            }
		}

    }
}



